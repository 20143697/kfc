{"version":3,"sources":["navigation/Style.js","navigation/FetchingFunctions.js","navigation/stacks/components/Category.js","navigation/stacks/components/SingleItemCategory.js","navigation/stacks/components/SingleItemCategories.js","navigation/stacks/components/Dish.js","navigation/stacks/components/Dishes.js","navigation/stacks/components/Categories.js","navigation/stacks/components/DealsSlider.js","navigation/stacks/HomeScreen.js","navigation/stacks/DealsScreen.js","navigation/stacks/ComboScreen.js","navigation/stacks/components/CustomChoice.js","navigation/stacks/components/CustomChoices.js","navigation/stacks/components/ImageSlider.js","navigation/stacks/CustomScreen.js","navigation/stacks/CartEditOrder.js","navigation/bottomTabs/MainContainer.js","navigation/bottomTabs/SettingsScreen.js","navigation/stacks/components/CartOrder.js","navigation/stacks/components/OrderHistory.js","navigation/bottomTabs/CartScreen.js","App.js"],"names":["windowWidth","Dimensions","get","width","windowHeight","height","style","StyleSheet","create","homeContainer","paddingLeft","paddingRight","paddingTop","marginTop","marginLeft","marginRight","borderColor","borderWidth","minHeight","homeCategories","flexDirection","justifyContent","homeCategory","alignItems","maxWidth","maxHeight","borderRadius","homeCategoryChosen","homeSingleItemCategory","homeSingleItemCategoryChosen","homeFoodListCover","homeFoodList","flexWrap","dishContainer","flexGrow","marginBottom","dishName","overflow","wordWrap","hyphens","fontSize","dishImageContainer","DishImage","resizeMode","dishInfo","dishInfoHide","textOverflow","dishInfoShow","customBtn","alignSelf","customOrder","customName","fontStyle","color","fontWeight","customList","dealImageContainer","dealImage","FetchingFunctions","fetch","method","headers","then","response","ok","Error","statusText","json","itemId","dishId","body","JSON","stringify","token","console","log","uri","Category","props","category","setShowSingleItems","categoryChosen","setCategoryChosen","Pressable","onPress","id","Text","field","replace","toUpperCase","SingleItemCategory","singleItemCategory","Image","source","image","SingleItemCategories","categories","View","filter","input","Boolean","startsWith","filterSingleItems","map","Dish","navigation","useNavigation","categoryDish","useCookies","useState","images","setImages","dishItems","setDishItems","loading","setLoading","hideInfo","setHideInfo","shorten","setShorten","choicesText","array","text","i","length","name","substr","customProps","navigate","useEffect","includes","category__field","hideDishInfo","GetItemImages","data","GetDishItems","finally","homeFoodContainer","undefined","numberOfLines","price","selections","selection","default","index","choices","singleItems","singleItem","MaterialIcons","size","transform","transitionDuration","textAlign","itemsChosen","selectionsDefault","singleItemDefault","dish","Date","now","amount","Dishes","categoryDishes","AntDesign","Categories","setCategories","setCategoryDishes","showSingleItems","G","Promise","resolve","reject","a","find","catch","err","findFirstComboId","categoryId","alignContent","filterCombo","container","maxHheight","scroll","imageContainer","pagination","position","bottom","dots","margin","dotActive","DealsSlider","deals","currentSlide","setCurrentSlide","scrollRef","useRef","autoPlay","changeSlide","current","scrollTo","x","animated","setTimeout","clearTimeout","ScrollView","ref","pagingEnabled","horizontal","showsHorizontalScrollIndicator","onScroll","event","slide","Math","round","nativeEvent","contentOffset","scrollEventThrottle","onScrollBeginDrag","onScrollEndDrag","overScrollMode","deal","imagePress","HomeScreenContext","React","createContext","HomeScreen","setDeals","GetDeals","Provider","value","showsVerticalScrollIndicator","DealsScreen","route","params","title","description","hashtag","ComboScreen","CustomChoice","choice","chosen","setChosen","setItemsChosen","replaceChoice","selectionId","newItemsChosen","parse","otherSelections","element","changedSelection","shift","push","image__image","EvilIcons","b","indexOf","splice","CustomChoices","itemIds","ImageSlider","imageArray","CustomScreenContext","CustomScreen","setImageArray","orderTotal","setOrderTotal","setPrice","imgArray","c","sort","total","Object","keys","due","TextInput","onChangeText","fontFamily","lineHeight","goBack","CartEditOrder","order","orderAmount","setOrderAmount","Stack","createNativeStackNavigator","MyStack","Navigator","Screen","component","SettingsScreen","modalVisible","setModalVisible","user","setUser","showHistory","setShowHistory","setToken","removeToken","username","setUsername","password","setPassword","showRegister","setShowRegister","login","e","preventDefault","P","jsonData","CurrentUser","changeButton","placeholder","backgroundColor","secureTextEntry","Register","textTransform","paddingBottom","email","centeredView","modalView","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","button","padding","buttonOpen","buttonClose","textStyle","modalText","borderBottomColor","borderBottomWidth","modalInnerText","modalChoosingText","CartOrder","orders","setOrders","ordersCopy","newOrders","item","styles","OrderHistory","allOrders","setAllOrders","priceSum","GWT","Modal","animationType","transparent","visible","onRequestClose","CartScreen","note","setNote","promotion","setPromotion","check","copyArray","orderDetails","Order","Tab","createBottomTabNavigator","App","useWindowDimensions","cname","ca","document","cookie","split","charAt","substring","getCookie","getUser","CookiesProvider","NavigationContainer","initialRouteName","screenOptions","tabBarIcon","iconName","focused","rn","Ionicons","headerShown","headerStyle","labelStyle","MainContainer","children","initialParams"],"mappings":"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","file":"static/js/app.491ceccf.chunk.js","sourcesContent":["import { StyleSheet, Dimensions } from 'react-native'\r\n\r\n// Width and height of device\r\nconst windowWidth = Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nconst style = StyleSheet.create({\r\n  // HomeScreen\r\n  homeContainer: {\r\n    width: windowWidth > 1000 ? 1000 : windowWidth,\r\n    // maxWidth: 1000,\r\n    // paddingLeft: windowWidth > 1000 ? (windowWidth - 1000)/2 : 5,\r\n    paddingLeft:  windowWidth > 1000 ? 'auto' : 5,\r\n    // paddingRight: windowWidth > 1000 ? (windowWidth - 1000)/2 : 5,\r\n    paddingRight: windowWidth > 1000 ? 'auto' : 5,\r\n    paddingTop: 5,\r\n    height: windowHeight - 100,\r\n    marginTop: 10, \r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    borderColor: 'green',\r\n    borderWidth: 3,\r\n    minHeight: windowHeight - 100,\r\n    height: 'auto',\r\n    // borderLeftWidth: 1,\r\n    // borderRightWidth: 1,\r\n  },\r\n  homeCategories: {\r\n    flexDirection: 'row',\r\n    borderColor: 'violet',\r\n    borderWidth: 2,\r\n    justifyContent: \"space-around\",\r\n    marginTop: 10,\r\n  }, \r\n  homeCategory: {\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems:'center',\r\n    width: 0.2 * windowWidth,\r\n    maxWidth: 200,\r\n    height: 0.1 * windowWidth,\r\n    maxHeight: 200,\r\n    borderColor: 'lightblue',\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n  },\r\n  homeCategoryChosen: {\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems:'center',\r\n    borderWidth: 2, \r\n    borderRadius: 8, \r\n    width: 0.2 * windowWidth, \r\n    height: 0.1 * windowWidth, \r\n    borderColor: 'orange',\r\n  },\r\n  homeSingleItemCategory: {\r\n    width: 0.2 * windowWidth,\r\n    maxWidth: 200,\r\n    height: 0.2 * windowWidth,\r\n    maxHeight: 200,\r\n    borderColor: 'lightblue',\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n  },\r\n  homeSingleItemCategoryChosen: {\r\n    borderWidth: 2, \r\n    borderRadius: 8, \r\n    width: 0.2 * windowWidth, \r\n    height: 0.2 * windowWidth, \r\n    borderColor: 'orange',\r\n  },\r\n  homeFoodListCover: {\r\n    // textAlign:'center',\r\n    marginTop: 10,\r\n  },\r\n  homeFoodList: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    borderWidth: 2,\r\n    borderColor: 'Crimson',\r\n    // justifyContent: 'flex-start',\r\n    // justifyContent: 'space-around',\r\n    justifyContent: 'center',\r\n  },\r\n  dishContainer: {\r\n    borderColor: 'green',\r\n    borderWidth: 1,\r\n    width: 0.32*windowWidth,\r\n    height: 'fit-content',\r\n    paddingLeft: windowWidth > 1000 ? '2.5%' : 0.033*windowWidth,\r\n    paddingRight: windowWidth > 1000 ? '2.5%' : 0.033*windowWidth,\r\n    maxWidth: 240,\r\n    flexDirection: 'column',\r\n    flexGrow: 1,\r\n    marginBottom: 20,\r\n  },\r\n  dishName: {\r\n    borderWidth: 1,\r\n    borderColor: 'chartreuse',\r\n    // height: windowWidth > 1000 ? '2%' : 0.16*windowWidth,\r\n    overflow: 'hidden',\r\n    wordWrap: 'break-word',\r\n    hyphens: 'auto',\r\n    width: '100%',\r\n    height:18,\r\n    fontSize: 14,\r\n    // textOverflow: 'ellipsis',\r\n    // overflow: 'hidden',\r\n    // whiteSpace:'wrap',\r\n  },\r\n  dishImageContainer: {\r\n    width: '100%',\r\n    height: windowWidth > 1000 ? 0.07*windowWidth : 0.25*windowWidth,\r\n  },\r\n  DishImage: {\r\n    flexGrow: 1,\r\n    borderRadius: 10,\r\n    borderColor: 'red',\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    marginRight:10,\r\n    resizeMode: 'stretch',\r\n    minHeight: 50,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  dishInfo: {\r\n    borderColor: 'red',\r\n    borderWidth: 1,\r\n    // minHeight: windowWidth > 1000 ? '80%' : 0.35*windowWidth,\r\n  },\r\n  dishInfoHide: {\r\n    borderWidth: 1,\r\n    borderColor: 'yellowBlanchedAlmond',\r\n    height: windowWidth > 1000 ? 0.04*windowWidth : 0.15*windowWidth,\r\n    overflow: 'hidden',\r\n    wordWrap: 'break-word',\r\n    textOverflow: 'ellipsis',\r\n    hyphens: 'auto',\r\n  },\r\n  dishInfoShow: {\r\n    borderWidth: 1,\r\n    borderColor: 'yellowBlanchedAlmond',\r\n    minHeight: windowWidth > 1000 ? 0.04*windowWidth : 0.15*windowWidth,\r\n  },\r\n  customBtn: {\r\n    marginTop: 8,\r\n    alignSelf:'center',\r\n    width: '70%',\r\n    height: 25,\r\n    borderWidth: 2,\r\n    borderColor: 'rgba(var(--b6a, 219, 219, 219), 1)',\r\n  },\r\n  // CUSTOM SCREEN\r\n  customOrder: {\r\n    width: '100%',\r\n  },\r\n  customName: {\r\n    fontStyle: 'italic',\r\n    fontSize: '1.333333333333333em',\r\n    color: 'rgb(232, 230, 227)',  \r\n    fontWeight: 'bold',\r\n    wordWrap: 'break-word',\r\n  },\r\n  customList: {\r\n    \r\n  },\r\n  // DEALS SCREEN\r\n  dealImageContainer: {\r\n    width: windowWidth,\r\n    height: 0.45*windowWidth,\r\n  },\r\n  dealImage: {\r\n    width: '100%',\r\n    height: '100%',\r\n    resizeMode: 'stretch',\r\n  }\r\n})\r\n\r\nexport default style","export default class FetchingFunctions {\r\n\r\n  static GetCategories() {\r\n    return (\r\n      fetch(`http://127.0.0.1:8000/get_categories`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      })\r\n      .then((response) => { // This way will stop promise if error occur\r\n        if (!response.ok) {\r\n          throw Error(response.statusText)\r\n        }\r\n        return response.json()\r\n      })\r\n    )\r\n  }\r\n  \r\n  // static GetCategoryItems(categoryId) {\r\n  //   return (\r\n  //     fetch(`http://127.0.0.1:8000/category_items/${categoryId}`, {\r\n  //       method: \"GET\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       }\r\n  //     })\r\n  //     .then((response) => { // This way will stop promise if error occur\r\n  //       if (!response.ok) {\r\n  //         throw Error(response.statusText)\r\n  //       }\r\n  //       return response.json()\r\n  //     })\r\n  //   )\r\n  // }\r\n\r\n  // static GWI(uri, id) {\r\n  //   return (\r\n  //     fetch(`http://127.0.0.1:8000/${uri}/${id}`, {\r\n  //       method: \"GET\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       }\r\n  //     })\r\n  //     .then((response) => { // This way will stop promise if error occur\r\n  //       if (!response.ok) {\r\n  //         throw Error(response.statusText)\r\n  //       }\r\n  //       return response.json()\r\n  //     })\r\n  //   )\r\n  // }\r\n\r\n  static GetItemImages(itemId) {\r\n    return (\r\n      fetch(`http://127.0.0.1:8000/item_images/${itemId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      })\r\n      .then((response) => { // This way will stop promise if error occur\r\n        if (!response.ok) {\r\n          throw Error(response.statusText)\r\n        }\r\n        return response.json()\r\n      })\r\n    )\r\n  }\r\n\r\n  static GetDishItems(dishId) {\r\n    return (\r\n      fetch(`http://127.0.0.1:8000/dish_items/${dishId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText)\r\n        }\r\n        return response.json()\r\n      })\r\n    )\r\n  }\r\n\r\n  static GetDeals() {\r\n    return (\r\n      fetch(`http://127.0.0.1:8000/get_deals`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText)\r\n        }\r\n        return response.json()\r\n      })\r\n    )\r\n  }\r\n\r\n  // REGISTER\r\n  static Register(body) {\r\n    return (\r\n      fetch(\"http://127.0.0.1:8000/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then((response) => { // This way will stop promise if error occur\r\n        if (!response.ok) {\r\n          // console.log(\"Error\")\r\n          throw Error(response.statusText)\r\n        }\r\n        // console.log(\"Success\")\r\n        // return response.json()\r\n      })\r\n    )\r\n  }\r\n\r\n  // CHECK CURRENT TOKEN\r\n  static CurrentUser(token) {\r\n    return (\r\n      fetch(\"http://127.0.0.1:8000/current_user\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          \"Authorization\": `Token ${token}`\r\n        },\r\n      })\r\n      .then(response => {\r\n        // if (!response.ok) {\r\n        //   throw Error(response.statusText)\r\n        // }\r\n        return response.json()\r\n      })\r\n    )\r\n  }\r\n\r\n  // Log in, fetch Token \r\n  // static Login(body) {\r\n  //   return (\r\n  //     fetch(\"http://127.0.0.1:8000/auth/\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\"\r\n  //       },\r\n  //       body: JSON.stringify(body)\r\n  //     })\r\n  //     .then((response) => {\r\n  //       if (!response.ok) {\r\n  //         // console.log(\"Error\")\r\n  //         throw Error(response.statusText)\r\n  //       }\r\n  //       // console.log(\"Success\")\r\n  //       return response.json()\r\n  //     })\r\n  //   )\r\n  // }\r\n\r\n  // LOGIN FOR JWT\r\n  // static Login(object) {\r\n  //   return (\r\n  //     fetch(`http://127.0.0.1:8000/login`, {\r\n  //       method: 'POST',\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //       },\r\n  //       // body: JSON.stringify({'username': 'superbin1996', 'password': 'django.bin@28896d'}),\r\n  //       body: object,\r\n  //     })\r\n  //     .then(response => {\r\n  //       if (!response.ok) {\r\n  //         throw Error(response.statusText)\r\n  //       }\r\n  //       return response.json()\r\n  //     })\r\n  //   )\r\n  // }\r\n\r\n  static Order(token, body) {\r\n    return(\r\n      fetch(`http://127.0.0.1:8000/order`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          \"Authorization\": `Token ${token['kfc']}`,\r\n        },\r\n        body: JSON.stringify(body),\r\n      })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          // console.log(\"Error\")\r\n          throw Error(response.statusText)\r\n        }\r\n        console.log(\"Success\")\r\n        // return response.json()\r\n      })\r\n    )\r\n  }\r\n\r\n  static GetOrderHistory(token) {\r\n    return(\r\n      fetch(`http://127.0.0.1:8000/order`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          \"Authorization\": `Token ${token['kfc']}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          // console.log(\"Error\")\r\n          throw Error(response.statusText)\r\n        }\r\n        // console.log(\"Success\")\r\n        return response.json()\r\n      })\r\n    )\r\n  }\r\n\r\n  static G(uri) {\r\n    return (\r\n      fetch(`http://127.0.0.1:8000/${uri}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      })\r\n      .then((response) => { // This way will stop promise if error occur\r\n        if (!response.ok) {\r\n          throw Error(response.statusText)\r\n        }\r\n        return response.json()\r\n      })\r\n    )\r\n  }\r\n\r\n  static GWT(uri, token) {\r\n    return (\r\n      fetch(`http://127.0.0.1:8000/${uri}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': `Token ${token['kfc']}`\r\n        }\r\n      })\r\n      .then((response) => { // This way will stop promise if error occur\r\n        if (!response.ok) {\r\n          throw Error(response.statusText)\r\n        }\r\n        return response.json()\r\n      })\r\n    )\r\n  }\r\n\r\n  // Log in, fetch Token \r\n  static P(uri, body) {\r\n    return (\r\n      fetch(`http://127.0.0.1:8000/${uri}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          // console.log(\"Error\")\r\n          throw Error(response.statusText)\r\n        }\r\n        // console.log(\"Success\")\r\n        return response.json()\r\n      })\r\n    )\r\n  }\r\n\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Pressable, Text } from 'react-native'\r\nimport style from \"../../Style\";\r\n\r\nconst Category = (props) => {\r\n  const {\r\n    category,\r\n    setShowSingleItems,\r\n    categoryChosen,\r\n    setCategoryChosen,\r\n  } = props\r\n\r\n  return (\r\n    <Pressable\r\n      onPress={() => {\r\n        setCategoryChosen(category.id)\r\n        setShowSingleItems(false)\r\n      }} \r\n      style={categoryChosen === category.id ? style.homeCategoryChosen : style.homeCategory}\r\n    >\r\n      <Text>\r\n        {category.field.replace('combo-', '').toUpperCase()}\r\n      </Text>\r\n        \r\n    </Pressable>\r\n  )\r\n}\r\n\r\nexport default Category","import React, {useEffect, useState} from 'react'\r\nimport { Pressable, Text, View, Image } from 'react-native'\r\nimport style from \"../../Style\";\r\n\r\nconst SingleItemCategory = (props) => {\r\n  const {\r\n    singleItemCategory,\r\n    categoryChosen,\r\n    setCategoryChosen,\r\n  } = props\r\n\r\n  return (\r\n    <Pressable\r\n      onPress={() => {\r\n        setCategoryChosen(singleItemCategory.id)\r\n      }} \r\n    >\r\n      <Image source={{uri: `http://127.0.0.1:8000/media/${singleItemCategory.image}`}} \r\n        style={singleItemCategory.id === categoryChosen ? style.homeSingleItemCategoryChosen : style.homeSingleItemCategory}\r\n        />\r\n    </Pressable>\r\n  )\r\n}\r\n\r\n\r\nexport default SingleItemCategory","import React, {useEffect, useState} from 'react'\r\nimport { Pressable, Text, View } from 'react-native'\r\nimport style from \"../../Style\";\r\nimport SingleItemCategory from './SingleItemCategory'\r\n\r\nconst SingleItemCategories = (props) => {\r\n\r\n  const {\r\n    categories,\r\n    categoryChosen,\r\n    setCategoryChosen,\r\n  } = props\r\n\r\n  function filterSingleItems(input) {\r\n    if (Boolean(input.field.startsWith('singleItems-')) === true) {\r\n      return input\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={style.homeCategories}>\r\n      {categories.filter(singleItemCategory => filterSingleItems(singleItemCategory)).map((singleItemCategory)=>{\r\n        return(\r\n          <SingleItemCategory key={singleItemCategory.id}\r\n            singleItemCategory={singleItemCategory}\r\n            categoryChosen={categoryChosen}\r\n            setCategoryChosen={setCategoryChosen}\r\n          />\r\n        )\r\n      })}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst singleItemCategories = [\r\n  {\r\n    id: 0,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a01.png',\r\n  },\r\n  {\r\n    id: 1,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a13.png',\r\n  },\r\n  {\r\n    id: 2,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_f18.png',\r\n  },\r\n  {\r\n    id: 3,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_g01_201125.png',\r\n  },\r\n]\r\n\r\nexport default SingleItemCategories","import React, {useState, useEffect, useContext} from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, Pressable, } from \"react-native\";\r\nimport { HomeScreenContext } from \"../HomeScreen\";\r\nimport style from \"../../Style\";\r\nimport FetchingFunctions from \"../../FetchingFunctions\";\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport const Dish = (props) => {\r\n  const navigation = useNavigation()\r\n\r\n  const {\r\n    categoryDish,\r\n  } = props\r\n\r\n  const [token, setToken, removeToken] = useCookies(['kfc'])\r\n\r\n  // Dish images\r\n  const [images, setImages] = useState([])\r\n\r\n  // Dish items\r\n  const [dishItems, setDishItems] = useState({})\r\n\r\n  // Show another things before finishing loading\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Hide detail info if category is drink or snack\r\n  const [hideInfo, setHideInfo] = useState(false)\r\n  \r\n  // Change dish info height to shorten or show text\r\n  const [shorten, setShorten] = useState(true)\r\n\r\n  useEffect(()=>{\r\n    setLoading(true)\r\n    console.log('categoryDish', categoryDish)\r\n\r\n    // HIDE DRINK AND SNACK DISH INFO\r\n    function hideDishInfo(categoryDish) {\r\n      if ([`singleItems-desserts-drinks`, `singleItems-snacks`].includes(categoryDish.category__field)) {\r\n        setHideInfo(true)\r\n      }\r\n    }\r\n\r\n    hideDishInfo(categoryDish)\r\n\r\n    // GET ITEM IMAGES\r\n    FetchingFunctions.GetItemImages(categoryDish.id)\r\n    .then((data)=>{\r\n      setImages(data)\r\n      console.log('images', data)\r\n    })\r\n\r\n    // GET DISH ITEMS\r\n    FetchingFunctions.GetDishItems(categoryDish.id)\r\n    .then((data)=>{\r\n      console.log(`dishItems:`, data)\r\n      setDishItems(data)\r\n    })\r\n    .finally(()=>{\r\n      setLoading(false)\r\n    })\r\n\r\n  }, [])\r\n\r\n\r\n  function imagePath() {\r\n    let p\r\n    if (images === undefined || images.length == 0) {\r\n      // array empty or does not exist\r\n      p = ''\r\n    }\r\n    else {\r\n        p = images[0].image\r\n      }\r\n    return {uri: `http://127.0.0.1:8000/media/${p}`}\r\n  }\r\n\r\n\r\n  function choicesText(array) {\r\n    let text = ''\r\n    try {\r\n      for (let i = 0; i < array.length; i += 1) {\r\n        text += `/${array[i].name}`\r\n      }\r\n    }\r\n    finally {\r\n      if (text[0] == '/') {\r\n        return text.substr(1, text.length)\r\n      }\r\n      else {\r\n        return text\r\n      }\r\n    }\r\n  }\r\n\r\n  function customProps() {\r\n    navigation.navigate('Custom', {\r\n    images,\r\n    categoryDish,\r\n      dishItems,\r\n    })\r\n\r\n  }\r\n\r\n  function cartPrams() {\r\n    let itemsChosen\r\n    try {\r\n      let selectionsDefault = dishItems.selections?.map((selection) => {\r\n        return selection.default\r\n      }) \r\n      let singleItemDefault = dishItems.singleItems\r\n      itemsChosen = [...selectionsDefault, ...singleItemDefault]\r\n    }\r\n    finally {\r\n      // console.log(`Dish-itemsChosen`, itemsChosen)\r\n      navigation.navigate('Cart', {\r\n        dish: {\r\n          id: Date.now(), // use index for key, because we can order a dish two times\r\n          categoryDish: categoryDish,\r\n          itemsChosen: itemsChosen,\r\n          dishItems: dishItems,\r\n          images: images,\r\n          price: categoryDish.price,  //one set only\r\n          amount: 1,\r\n        }\r\n      })\r\n    }\r\n   \r\n  }\r\n\r\n  // If have not finished loading\r\n  if (loading) {\r\n    return (\r\n      <View style={style.homeFoodContainer}>\r\n        <Text>Data is loading...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={style.dishContainer}>\r\n      <Pressable style={style.dishImageContainer} \r\n        onPress={customProps}\r\n      >\r\n        <Image \r\n          style={style.DishImage} \r\n          source={imagePath()}\r\n        />\r\n      </Pressable>\r\n      \r\n      <View>\r\n        <Text numberOfLines={1} style={style.dishName}>\r\n          {categoryDish.name}\r\n        </Text>\r\n        <Text>{categoryDish.price}</Text>\r\n      </View>\r\n\r\n      <View style={shorten ? style.dishInfo : [style.dishInfo, {height: 'fit-content'}]}>\r\n        {/* IF DISH IS DRINK, HIDE INFO */}\r\n        {hideInfo ||\r\n          // Dish ITEMS\r\n          <View style={shorten ? style.dishInfoHide : style.dishInfoShow}>\r\n            \r\n            {/* SELECTIONS TEXT */}\r\n            {dishItems.selections?.filter(selection => \r\n              selection.default.category__field != 'singleItems-desserts-drinks'\r\n            ).map((selection, index) => { \r\n              return (\r\n                <Text key={index}>\r\n                  {choicesText(selection.choices)}\r\n                </Text>\r\n              )\r\n            })}\r\n\r\n            {/* SINGLE ITEM TEXT */}\r\n            {dishItems.singleItems?.map((singleItem, index) => { \r\n              return (\r\n                <Text key={index}>\r\n                  {singleItem.name}\r\n                </Text>\r\n              )\r\n            })}     \r\n\r\n            {/* DRINK TEXT */}\r\n            {dishItems.selections?.filter(selection => \r\n              selection.default.category__field == 'singleItems-desserts-drinks'\r\n            ).map((selection, index) => { \r\n              return (\r\n                <Text key={index}>\r\n                  {selection.default.name}\r\n                </Text>\r\n              )\r\n            })} \r\n\r\n          </View>\r\n        } \r\n\r\n        <Pressable style={{alignSelf:'center'}}\r\n          onPress={()=>setShorten(!shorten)}\r\n        >\r\n          <MaterialIcons name=\"keyboard-arrow-down\" size={24} color=\"black\" style={shorten?{transform:'rotate(0deg)',transitionDuration:'500ms'}:{transform:'rotate(180deg)',transitionDuration:'500ms'}}/>\r\n        </Pressable>\r\n\r\n        <Pressable style={style.customBtn} \r\n          onPress={customProps}\r\n        >\r\n          <Text style={{color:'green', textAlign:'center'}}>Cumtom</Text>\r\n        </Pressable>\r\n\r\n        <Pressable style={style.customBtn}\r\n          onPress={cartPrams}\r\n        >\r\n          <Text style={{color:'green', textAlign:'center'}}>Order</Text>\r\n        </Pressable>\r\n      </View>\r\n\r\n    </View>\r\n\r\n    \r\n  )  \r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, Pressable, } from \"react-native\";\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport style from \"../../Style\";\r\nimport { Dish } from \"./Dish\";\r\n\r\n// Width and height of device\r\nconst windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height \r\n\r\nexport const Dishes = (props) => {\r\n  const {\r\n    categoryDishes,\r\n  } = props\r\n  \r\n  return (\r\n    <View style={style.homeFoodListCover}>\r\n      {/* Arrow icon */}\r\n      <AntDesign name=\"downcircleo\" size={24} color=\"black\" \r\n        style={{marginLeft:'auto',marginRight:'auto'}} />\r\n      \r\n      <View \r\n        style={{\r\n          // maxHeight:windowHeight*0.45, \r\n          marginTop:10}}\r\n      >\r\n        {/* Food list */}\r\n        <View style={style.homeFoodList}>\r\n          {categoryDishes.map((categoryDish) => {\r\n            return (\r\n              <Dish key={categoryDish.id}\r\n                categoryDish={categoryDish}/>\r\n            )\r\n          })}\r\n\r\n        </View>\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nexport const nigiri = [\r\n  {\r\n    id: 0,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a01.png',\r\n    // name: 'Combo Fried Chicken',\r\n    // price: 78000,\r\n    // compose: {\r\n    //   singleItem: '1 Pepsi Can',\r\n    //   selection: '2 Pcs of Hot & Spicy Chicken / 2 Pcs of Non Spicy Crispy Chicken / 2 Pcs of Original Recipe Chicken',\r\n    // }\r\n  },\r\n  {\r\n    id: 1,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a02.png',\r\n  },\r\n  {\r\n    id: 2,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a43.png',\r\n  },\r\n  {\r\n    id: 3,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a49.png',\r\n  },\r\n  {\r\n    id: 4,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b02.png',\r\n  },\r\n  {\r\n    id: 5,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b03.png',\r\n  },\r\n  {\r\n    id: 6,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b06.png',\r\n  },\r\n  {\r\n    id: 7,\r\n    uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b07.png',\r\n  },\r\n]","import React, {useState, useEffect} from 'react'\r\nimport { Pressable, Text, View } from 'react-native'\r\nimport style from \"../../Style\";\r\nimport Category from './Category'\r\nimport SingleItemCategories from './SingleItemCategories'\r\nimport { Dishes } from './Dishes'\r\nimport FetchingFunctions from '../../FetchingFunctions'\r\n\r\nconst Categories = () => {\r\n\r\n  // Category Array\r\n  const [categories, setCategories] = useState([])\r\n\r\n  // Category Items\r\n  const [categoryDishes, setCategoryDishes] = useState([])\r\n\r\n  // Press on Category\r\n  const [categoryChosen, setCategoryChosen] = useState(0)\r\n\r\n  // Show Category Items\r\n  const [showSingleItems, setShowSingleItems] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    console.log('categories useEffect')\r\n    getCategories()\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    console.log('categories useEffect1')\r\n    function getCategoryItems(categoryId) {\r\n      FetchingFunctions.G(`category_items/${categoryId}`)\r\n      .then((data)=>{\r\n        setCategoryDishes(data)\r\n      })\r\n    }\r\n    if (categoryChosen !== 0) {\r\n      getCategoryItems(categoryChosen)\r\n    }\r\n  }, [categoryChosen])\r\n\r\n\r\n  function getCategories() {\r\n    FetchingFunctions.G('get_categories')\r\n    .then((data) => {\r\n      setCategories(data)\r\n      findFirstComboId(data)\r\n    })\r\n  }\r\n\r\n  function findFirstComboId(categories) {\r\n    var jsonPromise = new Promise(function(resolve, reject) {\r\n      let a = categories.find(category => category.field.startsWith('combo-'))\r\n      if (a) {\r\n        resolve(a)\r\n      }\r\n      else {\r\n        reject(Error(\"There are no combo categoreis\"))\r\n      }\r\n  \r\n    })\r\n\r\n    jsonPromise.then((data) => {\r\n      // This never happens:\r\n      console.log(\"It worked!\", data.id);\r\n      // Set first combo id to category id\r\n      setCategoryChosen(data.id)\r\n    }).catch((err) => {\r\n      // Instead, this happens:\r\n      console.log(\"It failed!\", err);\r\n    })\r\n    console.log()\r\n  }\r\n\r\n  function findFirstSingleItemId() {\r\n    var jsonPromise = new Promise(function(resolve, reject) {\r\n      let a = categories.find(category => category.field.startsWith('singleItems-'))\r\n      if (a) {\r\n        resolve(a)\r\n      }\r\n      else {\r\n        reject(Error(\"There are no combo categoreis\"))\r\n      }\r\n  \r\n    })\r\n\r\n    jsonPromise.then(function(data) {\r\n      // This never happens:\r\n      console.log(\"It worked!\", data.id);\r\n      // Set first combo id to category id\r\n      setCategoryChosen(data.id)\r\n      \r\n    }).catch(function(err) {\r\n      // Instead, this happens:\r\n      console.log(\"It failed!\", err);\r\n    })\r\n    console.log()\r\n  }\r\n\r\n  function filterCombo(input) {\r\n    if (Boolean(input.field.startsWith('combo-')) === true) {\r\n      return input\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{\r\n      width: '100%',\r\n      borderColor: 'gray',\r\n      borderWidth: 1,\r\n    }}>\r\n      <View style={[style.homeCategories, {alignContent:'stretch'}]}>\r\n        {categories.filter(category=>filterCombo(category)).map((category)=>{\r\n          return(\r\n            <Category key={category.id} \r\n              category={category}\r\n              setShowSingleItems={setShowSingleItems}\r\n              categoryChosen={categoryChosen}\r\n              setCategoryChosen={setCategoryChosen} />\r\n          )\r\n        })}\r\n\r\n        {/* For Single-Items-Category */}\r\n        <Pressable\r\n          onPress={() => {\r\n            setShowSingleItems(true)\r\n            findFirstSingleItemId()\r\n          }} \r\n          style={showSingleItems ? style.homeCategoryChosen : style.homeCategory}\r\n        >\r\n          <Text>\r\n            SINGLE ITEMS\r\n          </Text>\r\n            \r\n        </Pressable>\r\n\r\n      </View>\r\n\r\n      {/* Single item Categories */}\r\n      {showSingleItems &&\r\n        <SingleItemCategories\r\n          categories={categories}\r\n          categoryChosen={categoryChosen}\r\n          setCategoryChosen={setCategoryChosen}\r\n        />\r\n      }\r\n\r\n      <Dishes categoryDishes={categoryDishes}/>\r\n      \r\n    </View>\r\n    \r\n    )\r\n}\r\nexport default Categories\r\n  \r\n// const categories = [\r\n//   {\r\n//     id: 0,\r\n//     name: 'FOR ONE',\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: 'FOR SHARING',\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: 'HOT DEALS',\r\n//   },\r\n//   // {\r\n//   //   id: 3,\r\n//   //   name: 'SINGLE ITEM',\r\n//   // },\r\n// ]\r\n\r\n\r\n\r\n","import React, {useState, useEffect, useRef, useContext} from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, Pressable } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nconst windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\nconst windowHeight = windowWidth * 0.4\r\n\r\nconst DealsSlider = (props) => {\r\n  const {\r\n    deals,\r\n  } = props\r\n\r\n  const navigation = useNavigation()\r\n\r\n  // Dot state\r\n  const [currentSlide, setCurrentSlide] = useState(0)\r\n\r\n  // Scroll state\r\n  const scrollRef = useRef()\r\n  // const scrollRef = React.createRef()\r\n\r\n  var autoPlay = null\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`scrollRef:`, scrollRef)\r\n  // }, [scrollRef.current])\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`currentSlide:`, currentSlide)\r\n  // }, [currentSlide])\r\n\r\n  useEffect(()=>{\r\n    autoPlay = setTimeout(changeSlide, 2000)\r\n    \r\n    // clearTimeout right after setTimeout in infinity useEffect can help\r\n    // function run one time to one time\r\n    // this resolves turbulent-slide-problem after users swipe on their own\r\n    return () => clearTimeout(autoPlay)\r\n  })\r\n\r\n  // Change active dot\r\n  function onSlideChange(event) {\r\n    // clearInterval(autoPlay)\r\n\r\n    // const slide = Math.round(event.nativeEvent.contentOffset.x / event.nativeEvent.layoutMeasurement.width)\r\n    const slide = Math.round(event.nativeEvent.contentOffset.x / windowWidth)\r\n    // console.log(`slide: ${slide}`)\r\n    // console.log(`contentOffset.x: `, event.nativeEvent.contentOffset.x)\r\n    // console.log(`layoutMeasurement.width:`, event.nativeEvent.layoutMeasurement.width)\r\n\r\n    if (currentSlide !== slide) {\r\n      setCurrentSlide(slide)\r\n    }\r\n  }\r\n\r\n  function changeSlide() {\r\n    if (currentSlide === deals.length - 1) {\r\n      scrollRef.current.scrollTo({ x: 0, animated: true })\r\n    }\r\n    else {\r\n      scrollRef.current.scrollTo({ x: windowWidth * (currentSlide + 1), animated: true })\r\n    }\r\n  }\r\n  \r\n  // var autoPlay = setTimeout(changeSlide, 2000)\r\n\r\n  function userBeginDrag() {\r\n    clearTimeout(autoPlay)\r\n  }\r\n\r\n  function userEndDrag() {\r\n    autoPlay = setTimeout(autoPlay, 5000)\r\n  }\r\n\r\n  function imagePress(deal) {\r\n    navigation.navigate('Deals', {\r\n      deal,  \r\n    })\r\n  }\r\n\r\n  return (\r\n    <View style={style.container}>\r\n\r\n      <ScrollView ref = {scrollRef}\r\n        style={style.scroll}\r\n        pagingEnabled\r\n        horizontal \r\n        showsHorizontalScrollIndicator={false}\r\n        onScroll={onSlideChange}\r\n        scrollEventThrottle={windowWidth}\r\n        onScrollBeginDrag={()=>userBeginDrag()}\r\n        onScrollEndDrag={()=>userEndDrag()}\r\n        overScrollMode={'never'}\r\n      >\r\n        {deals.map((deal) => {\r\n          return (\r\n            <Pressable\r\n              key={ deal.id }\r\n              style={style.imageContainer} \r\n              onPress={()=>imagePress(deal)}\r\n            >\r\n              <Image \r\n                source={{ uri: `http://127.0.0.1:8000/media/${deal.image}` }}\r\n                style={style.image} \r\n              />\r\n            </Pressable>\r\n          )\r\n        })}\r\n      </ScrollView>\r\n\r\n      {/* <Text \r\n        style={{\r\n          position:'absolute',\r\n          bottom:0,\r\n          flexDirection:'row',\r\n          alignSelf: 'start',\r\n          fontSize: 22,\r\n          fontWeight:500,\r\n          color: '#0066ff',\r\n        }}>\r\n          Deals\r\n        </Text> */}\r\n      \r\n      <View\r\n        style={style.pagination}\r\n      >\r\n        {deals.map((image, index)=>{\r\n          return (\r\n            <Text \r\n              key={index}\r\n              style={index === currentSlide ? style.dotActive : style.dots} \r\n            >\r\n              ⬤ \r\n            </Text>\r\n          )\r\n        })}\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n  container: {\r\n    // height, \r\n    maxHheight: 300,\r\n    borderWidth: 2,\r\n    borderColor: 'violet',\r\n    // paddingLeft: '10px', \r\n    // paddingRight: '10px', \r\n    // paddingTop: '10px',\r\n  },\r\n  scroll: {\r\n    height:'100%',\r\n    maxHheight:300,\r\n  },\r\n  imageContainer: { \r\n    width: windowWidth, \r\n    height: windowHeight,\r\n    // maxHeight:300,\r\n  },\r\n  image: {\r\n    // flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    resizeMode: 'stretch',\r\n  },\r\n  pagination: {\r\n    position: 'absolute', \r\n    bottom: 0, \r\n    flexDirection: 'row',\r\n    alignSelf: 'center',\r\n  },\r\n  dots: {\r\n    color: 'white',\r\n    margin: 3,\r\n    fontSize: windowWidth/30,\r\n  },\r\n  dotActive: {\r\n    color: 'green',\r\n    margin: 3,\r\n    fontSize: windowWidth/30,\r\n  },\r\n})\r\n\r\nexport default DealsSlider","import React, {useState, useEffect, useContext} from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, Pressable, } from \"react-native\";\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport style from \"../Style\";\r\nimport FetchingFunctions from \"../FetchingFunctions\";\r\nimport Categories from \"./components/Categories\";\r\nimport DealsSlider from \"./components/DealsSlider\";\r\n\r\n// Width and height of device\r\nconst windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height \r\n\r\nexport const HomeScreenContext = React.createContext()\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n\r\n  // ALL DEALS\r\n  const [deals, setDeals] = useState([])\r\n\r\n  useEffect(()=>{\r\n    FetchingFunctions.GetDeals()\r\n    .then((data) => {\r\n      setDeals(data)\r\n      console.log(`deals`, data)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <HomeScreenContext.Provider\r\n      value={{\r\n      }}\r\n    >\r\n      <ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n        \r\n        {/* Deals recommendation */}\r\n        <View>\r\n          <DealsSlider deals={deals} />\r\n        </View>\r\n\r\n        {/* Categories */}\r\n        <Categories navigation={navigation} />\r\n\r\n      </ScrollView>\r\n    </HomeScreenContext.Provider>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect, useRef, useContext} from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, Pressable } from \"react-native\";\r\nimport style from \"../Style\";\r\n\r\nconst DealsScreen = ({navigation, route}) => {\r\n  const {\r\n    deal,\r\n  } = route.params\r\n\r\n  useEffect(()=>{\r\n    console.log('deal', deal)\r\n  }, [])\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <Text>{deal.title}</Text>\r\n      <Text>{deal.description}</Text>\r\n      <Text>{deal.hashtag}</Text>\r\n      <View style={style.dealImageContainer}>\r\n        <Image\r\n          style={style.dealImage}\r\n          source={{uri: `http://127.0.0.1:8000/media/${deal.image}`}}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nexport default DealsScreen","import React from 'react'\r\nimport { Text } from 'react-native'\r\n\r\nconst ComboScreen = () => {\r\n  return (\r\n    <Text>ComboScre</Text>\r\n  )\r\n}\r\n\r\nexport default ComboScreen","import React, {useState, useEffect, useContext} from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, Pressable, } from \"react-native\";\r\nimport { HomeScreenContext } from \"../HomeScreen\";\r\nimport style from \"../../Style\";\r\nimport FetchingFunctions from \"../../FetchingFunctions\";\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport { CustomScreenContext } from \"../CustomScreen\";\r\nimport DrinkChoice from \"./DrinkChoice\";\r\n\r\nconst CustomChoice = (props) => {\r\n  const {\r\n    selection,\r\n    choice,\r\n    chosen,\r\n    setChosen,\r\n    itemsChosen,\r\n    setItemsChosen,\r\n  } = props\r\n\r\n  function imagePath() {\r\n    return `http://127.0.0.1:8000/media/${choice.image__image}`\r\n  }\r\n\r\n  function replaceChoice() {\r\n    console.log(choice.selectionId)\r\n    let newItemsChosen = JSON.parse(JSON.stringify(itemsChosen))\r\n    let otherSelections = newItemsChosen?.filter(element => element.selectionId != choice.selectionId)\r\n    let changedSelection = newItemsChosen?.filter(element => element.selectionId == choice.selectionId)\r\n    try{\r\n      console.log(`otherSelections`, otherSelections)\r\n      console.log(`changedSelection`, changedSelection)\r\n      changedSelection.shift()\r\n      changedSelection.push(choice)\r\n    }\r\n    finally {\r\n      console.log(`newItemsChosen`, newItemsChosen)\r\n      setItemsChosen([...otherSelections, ...changedSelection])\r\n    }\r\n  }\r\n\r\n  function subtractPress() {\r\n    console.log(choice.selectionId)\r\n    let newItemsChosen = JSON.parse(JSON.stringify(itemsChosen))\r\n    if (choice.id != selection.default.id && choice.selectionId == selection.default.selectionId) {\r\n      let a  = newItemsChosen?.find(element => JSON.stringify(element) == JSON.stringify(choice))\r\n      console.log(`choice`, choice)\r\n      let b = newItemsChosen.indexOf(a)\r\n      try{\r\n        newItemsChosen.splice(b, 1)\r\n        newItemsChosen.push(selection.default)\r\n      }\r\n      finally {\r\n        console.log(`newItemsChosen`, newItemsChosen)\r\n        setItemsChosen([...newItemsChosen])\r\n      }\r\n    }\r\n  }\r\n\r\n  function itemNumber() {\r\n    let number = chosen?.filter(element => element == choice.id)\r\n    return number.length\r\n  }\r\n\r\n  return (\r\n    <View style={style.dishContainer}>\r\n      {choice.image__image ?\r\n        // THERE IS IMAGE\r\n        <Pressable\r\n          onPress={replaceChoice}\r\n        >\r\n          <View style={style.dishImageContainer}>\r\n            <Image \r\n              style={style.DishImage} \r\n              source={imagePath()}\r\n            />\r\n          </View>\r\n\r\n          <View>\r\n            <Text numberOfLines={1}\r\n              style={{\r\n                width: '100%',\r\n                maxHeight:18,\r\n                fontSize: 14,\r\n              }}\r\n            >\r\n                {choice.name}\r\n            </Text>\r\n            <View style={{flexDirection:'row'}}>\r\n              {chosen.includes(choice.id) ?\r\n                // CHOSEN\r\n                <EvilIcons name=\"check\" size={24} color=\"green\" />\r\n              :\r\n                // NOT CHOSEN\r\n                <EvilIcons name=\"check\" size={24} color=\"black\" />\r\n              }\r\n              {selection.default.id == choice.id ?\r\n                // IS DEFAULT\r\n                <Text>\r\n                  Included\r\n                </Text>\r\n              :\r\n                // IS NOT DEFAULT\r\n                <Text>\r\n                  {(choice.price - selection.default.price > 0 ? `+${choice.price - selection.default.price}đ` : `+0đ`)}\r\n                </Text>\r\n              } \r\n            </View>\r\n\r\n            {selection.default.amount != 1 &&\r\n              <View style={{flexDirection:'row',}}>\r\n                <Pressable \r\n                  onPress={subtractPress}\r\n                >\r\n                  <Text>⊖</Text>\r\n                </Pressable>\r\n                <Text style={{marginLeft:5,marginRight:5}}>{itemNumber()}</Text>\r\n                <Pressable onPress={replaceChoice}>\r\n                  <Text>⊕</Text>\r\n                </Pressable>\r\n              </View>\r\n\r\n            }\r\n          </View>\r\n\r\n        </Pressable>\r\n      :\r\n        // THERE ARE NOT IMAGES\r\n        <Pressable\r\n          onPress={replaceChoice}\r\n          style={{flexDirection:'row'}}\r\n        >\r\n          {chosen.includes(choice.id) ?\r\n            <EvilIcons name=\"check\" size={24} color=\"green\" />\r\n          :\r\n            <EvilIcons name=\"check\" size={24} color=\"black\" />\r\n          }\r\n\r\n          <Text numberOfLines={3}>{choice.name}</Text>\r\n        </Pressable>\r\n      }\r\n      \r\n    </View>\r\n  )\r\n  \r\n\r\n}\r\n\r\nexport default CustomChoice","import React, { useContext, useEffect, useState } from 'react'\r\nimport { View, Text, Image, Pressable, Dimensions, ScrollView, TextInput, CheckBox } from 'react-native'\r\nimport style from '../../Style'\r\nimport CustomChoice from './CustomChoice'\r\n\r\nconst CustomChoices = (props) => {\r\n  const {\r\n    selection,\r\n    itemsChosen,\r\n    setItemsChosen,\r\n  } = props\r\n\r\n  // CHANGE STYLE WHEN CHOSEN\r\n  const [chosen, setChosen] = useState([])\r\n\r\n  useEffect(()=>{\r\n    let itemIds = itemsChosen?.filter(element => element.selectionId == selection.default.selectionId).map(element => {\r\n      return element.id\r\n    })\r\n    setChosen(itemIds)\r\n    console.log(`chosen`, itemIds)\r\n  }, [itemsChosen])\r\n  \r\n  return (\r\n    <View style={{flexDirection:'row',flexWrap:'wrap',}}>\r\n      {selection.choices?.map((choice) => {\r\n        return (\r\n          <CustomChoice key={choice.id}\r\n            selection={selection} \r\n            choice={choice}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n            itemsChosen={itemsChosen}\r\n            setItemsChosen={setItemsChosen} \r\n          />\r\n        )\r\n      })}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default CustomChoices","import React, {useState, useEffect, useRef} from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, Pressable } from \"react-native\";\r\n\r\nconst windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\nconst windowHeight = windowWidth * 0.4\r\n\r\nconst ImageSlider = (props) => {\r\n  const {\r\n    imageArray,\r\n  } = props\r\n\r\n  \r\n  // Dot state\r\n  const [currentSlide, setCurrentSlide] = useState(0)\r\n\r\n  // Scroll state\r\n  const scrollRef = useRef()\r\n  // const scrollRef = React.createRef()\r\n\r\n  var autoPlay = null\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`scrollRef:`, scrollRef)\r\n  // }, [scrollRef.current])\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`currentSlide:`, currentSlide)\r\n  // }, [currentSlide])\r\n\r\n  useEffect(()=>{\r\n    autoPlay = setTimeout(changeSlide, 2000)\r\n    \r\n    // clearTimeout right after setTimeout in infinity useEffect can help\r\n    // function run one time to one time\r\n    // this resolves turbulent-slide-problem after users swipe on their own\r\n    return () => clearTimeout(autoPlay)\r\n  })\r\n\r\n  // Change active dot\r\n  function onSlideChange(event) {\r\n    // clearInterval(autoPlay)\r\n\r\n    // const slide = Math.round(event.nativeEvent.contentOffset.x / event.nativeEvent.layoutMeasurement.width)\r\n    const slide = Math.round(event.nativeEvent.contentOffset.x / windowWidth)\r\n    // console.log(`slide: ${slide}`)\r\n    // console.log(`contentOffset.x: `, event.nativeEvent.contentOffset.x)\r\n    // console.log(`layoutMeasurement.width:`, event.nativeEvent.layoutMeasurement.width)\r\n\r\n    if (currentSlide !== slide) {\r\n      setCurrentSlide(slide)\r\n    }\r\n  }\r\n\r\n  function changeSlide() {\r\n    if (currentSlide === imageArray.length - 1) {\r\n      scrollRef.current.scrollTo({ x: 0, animated: true })\r\n    }\r\n    else {\r\n      scrollRef.current.scrollTo({ x: windowWidth * (currentSlide + 1), animated: true })\r\n    }\r\n  }\r\n\r\n  function userBeginDrag() {\r\n    clearTimeout(autoPlay)\r\n  }\r\n\r\n  function userEndDrag() {\r\n    autoPlay = setTimeout(autoPlay, 5000)\r\n  }\r\n\r\n  return (\r\n    <View style={style.container}>\r\n\r\n      <ScrollView ref = {scrollRef}\r\n        style={style.scroll}\r\n        pagingEnabled\r\n        horizontal \r\n        showsHorizontalScrollIndicator={false}\r\n        onScroll={onSlideChange}\r\n        scrollEventThrottle={windowWidth}\r\n        onScrollBeginDrag={()=>userBeginDrag()}\r\n        onScrollEndDrag={()=>userEndDrag()}\r\n        overScrollMode={'never'}\r\n      >\r\n        {imageArray?.map((image, index) => {\r\n          return (\r\n            <View\r\n              key={ index }\r\n              style={style.imageContainer} \r\n            >\r\n              <Image \r\n                source={{ uri: image }}\r\n                style={style.image} \r\n              />\r\n            </View>\r\n          )\r\n        })}\r\n      </ScrollView>\r\n\r\n      {/* <Text \r\n        style={{\r\n          position:'absolute',\r\n          bottom:0,\r\n          flexDirection:'row',\r\n          alignSelf: 'start',\r\n          fontSize: 22,\r\n          fontWeight:500,\r\n          color: '#0066ff',\r\n        }}>\r\n          Deals\r\n        </Text> */}\r\n      \r\n      <View\r\n        style={style.pagination}\r\n      >\r\n        {imageArray?.map((image, index)=>{\r\n          return (\r\n            <Text \r\n              key={index}\r\n              style={index === currentSlide ? style.dotActive : style.dots} \r\n            >\r\n              ⬤ \r\n            </Text>\r\n          )\r\n        })}\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n  container: {\r\n    // height, \r\n    maxHheight: 300,\r\n    borderWidth: 2,\r\n    borderColor: 'violet',\r\n  },\r\n  scroll: {\r\n    height:'100%',\r\n    maxHheight:300,\r\n  },\r\n  imageContainer: { \r\n    width: windowWidth, \r\n    height: windowHeight,\r\n    // maxHeight:300,\r\n  },\r\n  image: {\r\n    // flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    resizeMode: 'stretch',\r\n  },\r\n  pagination: {\r\n    position: 'absolute', \r\n    bottom: 0, \r\n    flexDirection: 'row',\r\n    alignSelf: 'center',\r\n  },\r\n  dots: {\r\n    color: 'white',\r\n    margin: 3,\r\n    fontSize: windowWidth/30,\r\n  },\r\n  dotActive: {\r\n    color: 'green',\r\n    margin: 3,\r\n    fontSize: windowWidth/30,\r\n  },\r\n})\r\n\r\nexport default ImageSlider","import React, { useEffect, useState, useContext } from 'react'\r\nimport { View, Text, Image, Pressable, Dimensions, ScrollView, TextInput, CheckBox } from 'react-native'\r\nimport style from '../Style'\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport CustomChoices from './components/CustomChoices'\r\nimport ImageSlider from './components/ImageSlider'\r\nimport { useCookies } from 'react-cookie';\r\nimport FetchingFunctions from '../FetchingFunctions';\r\n\r\n// Width and height of device\r\nconst windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height \r\n\r\nexport const CustomScreenContext = React.createContext()\r\n\r\nconst CustomScreen = ({navigation, route}) => {\r\n\r\n\tconst {\r\n\t\timages,\r\n\t\tcategoryDish, \r\n\t\tdishItems,\r\n\t} = route.params\r\n\r\n\t// ARRAY OF DISH IMAGES\r\n\tconst [imageArray, setImageArray] = useState([])\r\n\r\n\t// NUMBER OR DISHES\r\n\tconst [orderTotal, setOrderTotal] = useState(1)\r\n\r\n\tconst [itemsChosen, setItemsChosen] = useState([])\r\n\r\n\tconst [price, setPrice] = useState(0)\r\n\r\n\tconst [token, setToken] = useCookies(['kfc'])\r\n\r\n\t// IMAGE ARRAY\r\n\tuseEffect(() => {\r\n\t\t// CHANGE IMAGES OBJECT ARRAY TO ARRAY\r\n\t\t// console.log('custom dishItem', dishItems)\r\n\t\tlet imgArray = images.map((image) => `http://127.0.0.1:8000/media/${image.image}`)\r\n\t\tsetImageArray(imgArray)\r\n\t\tconsole.log(`singleItems`, dishItems.singleItems)\r\n\t}, [images])\r\n\r\n\t// SET itemsChosen\r\n\tuseEffect(()=>{\r\n\t\t// Cannot setState inside map\r\n\t\tlet selectionsDefault = dishItems.selections?.map((selection) => {\r\n\t\treturn selection.default\r\n\t\t})\r\n\r\n\t\tlet singleItemDefault = dishItems.singleItems\r\n\t\tconsole.log('singleItemDefault', singleItemDefault)\r\n\t\t\r\n\t\ttry {\r\n\t\tlet c = selectionsDefault?.find(element => element.amount > 1)\r\n\t\tif (c !== undefined) {\r\n\t\t\tfor (let i = 0; i < c.amount - 1 ; i += 1) {\r\n\t\t\tselectionsDefault.push(c)\r\n\t\t\t}\r\n\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\tconsole.log(`selectionsDefault`, selectionsDefault)\r\n\t\tsetItemsChosen([...selectionsDefault.sort(), ...singleItemDefault])  \r\n\t\t}\r\n\t\t\r\n\t}, [dishItems])\r\n\r\n\t// SET PRICE\r\n\tuseEffect(() => {\r\n\t\tlet total = categoryDish?.price\r\n\t\ttry {\r\n\t\titemsChosen?.map(element => {\r\n\t\t\t// CHECK FOR SINGLE ITEM\r\n\t\t\tif (Object.keys(element).includes('due')) {\r\n\t\t\ttotal += element.due\r\n\t\t\t}\r\n\t\t})\r\n\t\t}\r\n\t\tfinally {\r\n\t\tsetPrice(total)\r\n\t\t}\r\n\t}, [itemsChosen, categoryDish])\r\n\r\n\tfunction subtractAmount() {\r\n\t\tif (orderTotal > 1) {\r\n\t\tsetOrderTotal(orderTotal-1)\r\n\t}}\r\n\r\n\tfunction addAmount() {setOrderTotal(orderTotal+1)}\r\n\r\n\tfunction addToCart() {\r\n\t\tnavigation.goBack()\r\n\t\tnavigation.navigate('Cart', {\r\n\t\t\tdish: {\r\n\t\t\t\tid: Date.now(), // use time for key, because we can order a dish two times\r\n\t\t\t\t// dishId: categoryDish.id,\r\n\t\t\t\t// name: categoryDish.name,\r\n\t\t\t\tcategoryDish: categoryDish,\r\n\t\t\t\titemsChosen: itemsChosen,\r\n\t\t\t\tdishItems: dishItems,\r\n\t\t\t\timages: images,\r\n\t\t\t\tprice: price, //one set only\r\n\t\t\t\tamount: orderTotal,\r\n\t\t\t},\r\n\t\t})\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<CustomScreenContext.Provider\r\n\t\t\tvalue={{setItemsChosen, itemsChosen}}\r\n\t\t>\r\n\t\t\t{console.log(`itemsChosen`, itemsChosen)}\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\r\n\t\t\t\t{/* ORDER AND COST */}\r\n\t\t\t\t<View style={style.orderTotal}>\r\n\t\t\t\t\t<ImageSlider imageArray={imageArray} />\r\n\r\n\t\t\t\t\t{/* DASHBOARD */}\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<Text style={style.customName}>{orderTotal}X {categoryDish.name.toUpperCase()}</Text>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* CHOSEN ITEM LIST */}\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t{itemsChosen.map((element, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<View key={index}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{flexGrow:1}}>・{element.name}</Text>\r\n\t\t\t\t\t\t\t\t<Text>+{element.due||0} đ</Text>\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<View style={{flexDirection:'row'}}>\r\n\t\t\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Pressable onPress={subtractAmount}>\r\n\t\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t}}>⊖</Text>\r\n\t\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t\t\t<TextInput value={orderTotal} onChangeText={setOrderTotal}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth:30,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingLeft: 5,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 5,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Pressable onPress={addAmount}>\r\n\t\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t\t}}>⊕</Text>\r\n\t\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\t}}>{orderTotal * price}</Text>\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<View style={{flexDirection:'row',paddingTop: 10,}}>\r\n\t\t\t\t\t\t\t<Text \r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tflexGrow:1,\r\n\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tORDER TOTAL\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t\t}}>{orderTotal * price}</Text>\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<Pressable style={style.customBtn} \r\n\t\t\t\t\t\t\t\tonPress={addToCart}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{color:'green', textAlign:'center', borderRadius:5}}>\r\n\t\t\t\t\t\t\t\t\tADD TO CART\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t\t\t<Pressable style={style.customBtn}\r\n\t\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\t\tnavigation.goBack()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{color:'green', textAlign:'center', borderRadius:5}}>\r\n\t\t\t\t\t\t\t\t\tBACK TO MENU\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<View>\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<Text>{categoryDish.name}</Text>\r\n\r\n\t\t\t\t\t\t{/* SELECT NON-DRINK ITEMS FIRST */}\r\n\t\t\t\t\t\t{dishItems.selections?.map((selection, index) => { \r\n\t\t\t\t\t\t\tif (selection.default.category__field !== 'singleItems-desserts-drinks') {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<View key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<Text>SELECT 1 IN OPTIONS BELOW</Text>\r\n\t\t\t\t\t\t\t\t\t\t<CustomChoices selection={selection}\r\n\t\t\t\t\t\t\t\t\t\t\titemsChosen={itemsChosen}\r\n\t\t\t\t\t\t\t\t\t\t\tsetItemsChosen={setItemsChosen} \r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t) \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t{/* SINGLE ITEMS */}\r\n\t\t\t\t\t\t{dishItems.singleItems?.map(singleItem => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<View key={singleItem.id}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<EvilIcons name=\"check\" size={24} color=\"green\" />\r\n\t\t\t\t\t\t\t\t\t<Text>{singleItem.name}</Text>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t{/* DINK SELECTION */}\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<Text>UP SIZE DESSERTS DRINKS</Text>\r\n\t\t\t\t\t\t\t{dishItems.selections?.map((selection, index) => {  \r\n\t\t\t\t\t\t\t\tif (selection.default.category__field === 'singleItems-desserts-drinks') {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<CustomChoices key={index} selection={selection}\r\n\t\t\t\t\t\t\t\t\t\t\titemsChosen={itemsChosen}\r\n\t\t\t\t\t\t\t\t\t\t\tsetItemsChosen={setItemsChosen}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t</View>\r\n\r\n\t\t\t</ScrollView>\r\n\r\n\t\t</CustomScreenContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default CustomScreen","import React, { useEffect, useState, useContext } from 'react'\r\nimport { View, Text, Image, Pressable, Dimensions, ScrollView, TextInput, CheckBox } from 'react-native'\r\nimport { DishContext } from './components/Dish'\r\nimport style from '../Style'\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport CustomChoices from './components/CustomChoices'\r\nimport ImageSlider from './components/ImageSlider';\r\n\r\n// Width and height of device\r\nconst windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height \r\n\r\nexport const CustomScreenContext = React.createContext()\r\n\r\nconst CartEditOrder = ({navigation, route}) => {\r\n\r\n  const {\r\n    order,\r\n  } = route.params\r\n\r\n  // ARRAY OF DISH IMAGES\r\n  const [imageArray, setImageArray] = useState([])\r\n\r\n  // NUMBER OR DISHES\r\n  const [orderAmount, setOrderAmount] = useState(1)\r\n\r\n  const [itemsChosen, setItemsChosen] = useState([])\r\n\r\n  const [price, setPrice] = useState(0)\r\n\r\n  useEffect(() => {\r\n    // CHANGE IMAGES OBJECT ARRAY TO ARRAY\r\n    // console.log('custom dishItem', dishItems)\r\n    let imgArray = order.images.map((image) => `http://127.0.0.1:8000/media/${image.image}`)\r\n    setImageArray(imgArray)\r\n    console.log(`singleItems`, order.dishItems.singleItems)\r\n\r\n    setItemsChosen(order.itemsChosen)\r\n    setPrice(order.price)\r\n    setOrderAmount(order.amount)\r\n  }, [order])\r\n\r\n  // SET PRICE\r\n  useEffect(() => {\r\n    let total = order?.categoryDish.price\r\n    try {\r\n      itemsChosen?.map(element => {\r\n        // CHECK FOR SINGLE ITEM\r\n        if (Object.keys(element).includes('due')) {\r\n          total += element.due\r\n        }\r\n      })\r\n    }\r\n    finally {\r\n      setPrice(total)\r\n    }\r\n  }, [itemsChosen, order])\r\n\r\n  function updateCart() {\r\n    navigation.goBack()\r\n    navigation.navigate('Cart', {\r\n      dish: {\r\n        id: order.id, // use time for key, because we can order a dish two times\r\n        // dishId: categoryDish.id,\r\n        // name: categoryDish.name,\r\n        categoryDish: order.categoryDish,\r\n        itemsChosen: itemsChosen,\r\n        dishItems: order.dishItems,\r\n        images: order.images,\r\n        price: price,\r\n        amount: orderAmount,\r\n      },\r\n    })\r\n  }\r\n  \r\n  if (order == null) {\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <CustomScreenContext.Provider\r\n        value={{setItemsChosen, itemsChosen}}\r\n      >\r\n        {console.log(`itemsChosen`, itemsChosen)}\r\n        <ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n          \r\n          {/* ORDER AND COST */}\r\n          <View style={style.orderAmount}>\r\n            <ImageSlider imageArray={imageArray} />\r\n\r\n            {/* DASHBOARD */}\r\n            <View>\r\n              <Text style={style.customName}>{orderAmount}X {order.categoryDish.name.toUpperCase()}</Text>\r\n\r\n              {/* CHOSEN ITEM LIST */}\r\n              <View>\r\n                {itemsChosen.map((element, index) => {\r\n                  return (\r\n                    <View key={index} style={{\r\n                      flexDirection:'row',\r\n                    }}>\r\n                      <Text style={{flexGrow:1}}>・{element.name}</Text>\r\n                      <Text>+{element.due||0}</Text>\r\n                    </View>\r\n  \r\n                  )\r\n                })}\r\n              </View>\r\n              \r\n              <View style={{flexDirection:'row'}}>\r\n                <View style={{\r\n                  flexDirection:'row',\r\n                  flexGrow: 1,\r\n                }}>\r\n                  <Pressable \r\n                    onPress={()=>{\r\n                      if (orderAmount > 1) {\r\n                      setOrderAmount(orderAmount-1)\r\n                    }}}\r\n                  >\r\n                    <Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t}}>⊖</Text>\r\n                  </Pressable>\r\n                  <TextInput value={orderAmount} onChangeText={setOrderAmount} style={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth:30,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingLeft: 5,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 5,\r\n\t\t\t\t\t\t\t\t\t\t}} />\r\n                  <Pressable onPress={()=>{setOrderAmount(orderAmount+1)}}>\r\n                    <Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t\t}}>⊕</Text>\r\n                  </Pressable>\r\n                </View>\r\n  \r\n                <Text style={{\r\n                  fontSize: 18,\r\n                  fontFamily: \"National2\",\r\n                  lineHeight: 1.5,\r\n                  fontWeight: 600,\r\n                  alignSelf: 'center',\r\n                }}>{orderAmount * price}</Text>\r\n              </View>\r\n  \r\n            </View>\r\n  \r\n            <View>\r\n              <View style={{flexDirection:'row',paddingTop: 10,}}>\r\n                <Text style={{\r\n\t\t\t\t\t\t\t\t\tflexGrow:1,\r\n\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\t}}>ORDER TOTAL</Text>\r\n                <Text style={{\r\n                    fontSize: 18,\r\n                    fontFamily: \"National2\",\r\n                    lineHeight: 1.5,\r\n                    fontWeight: 600,\r\n                    color: 'red',\r\n                }}>{orderAmount * price}</Text>\r\n              </View>\r\n  \r\n              <View>\r\n                <View>\r\n                  {/* UPDATE CART */}\r\n                  <Pressable style={style.customBtn}\r\n                    onPress={updateCart}>\r\n                    <Text style={{color:'green', textAlign:'center'}}>UPDATE CART</Text>\r\n                  </Pressable>\r\n                  \r\n                  {/* BACK TO HOME */}\r\n                  <Pressable style={style.customBtn} \r\n                    onPress={()=>{\r\n                      navigation.navigate('Home')\r\n                    }}>\r\n                    <Text style={{color:'green', textAlign:'center'}}>ADD MORE COMBO</Text>\r\n                  </Pressable>\r\n  \r\n                </View>\r\n                \r\n                {/* GO BACK TO CART */}\r\n                <Pressable style={style.customBtn}\r\n                  onPress={() => {\r\n                    navigation.goBack()\r\n                  }}>\r\n                  <Text style={{color:'green', textAlign:'center'}}>BACK TO CART</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </View>\r\n  \r\n          <View>\r\n            <View>\r\n              <Text>{order.categoryDish.name}</Text>\r\n  \r\n              {/* SELECT NON-DRINK ITEMS FIRST */}\r\n              {order.dishItems.selections?.map((selection, index) => { \r\n  \r\n                if (selection.default.category__field !== 'singleItems-desserts-drinks')\r\n                {\r\n                  return (\r\n                    <View key={index} >\r\n                      <Text>SELECT 1 IN OPTIONS BELOW</Text>\r\n                      <CustomChoices selection={selection}\r\n                        itemsChosen={itemsChosen}\r\n                        setItemsChosen={setItemsChosen} />\r\n                    </View>\r\n                  ) \r\n                }\r\n              })}\r\n  \r\n              {/* SINGLE ITEMS */}\r\n              {order.dishItems.singleItems?.map((singleItem, index) => {\r\n                // if (singleItem === undefined || singleItem.length == 0) {\r\n                //   return (\r\n                //     <Text key={index}></Text>\r\n                //   )\r\n                // }\r\n                // else {\r\n                  return (\r\n                    <View key={singleItem.id}>\r\n                      <EvilIcons name=\"check\" size={24} color=\"green\" />\r\n                      <Text>{singleItem.name}</Text>\r\n                    </View>\r\n                  )\r\n                // }\r\n              })}\r\n  \r\n              {/* DINK SELECTION */}\r\n              <View>\r\n                <Text>UP SIZE DESSERTS DRINKS</Text>\r\n  \r\n                {order.dishItems.selections?.map((selection, index) => {  \r\n  \r\n                  if (selection.default.category__field === 'singleItems-desserts-drinks')\r\n                  {\r\n                    return (\r\n                      <CustomChoices key={index} selection={selection}\r\n                        itemsChosen={itemsChosen}\r\n                        setItemsChosen={setItemsChosen} />\r\n                    ) \r\n                  }\r\n                })}\r\n              </View>\r\n            </View>\r\n  \r\n            <View>\r\n  \r\n            </View>\r\n          </View>\r\n  \r\n        </ScrollView>\r\n  \r\n      </CustomScreenContext.Provider>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default CartEditOrder","import React, {useState, useEffect} from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, Pressable, } from \"react-native\";\r\nimport HomeScreen from \"../stacks/HomeScreen\";\r\nimport DealsScreen from \"../stacks/DealsScreen\";\r\nimport ComboScreen from \"../stacks/ComboScreen\";\r\nimport CustomScreen from '../stacks/CustomScreen'\r\nimport CartEditOrder from \"../stacks/CartEditOrder\";\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { CookiesProvider } from \"react-cookie\";\r\n\r\n// Width and height of device\r\nconst windowWidth = Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction MyStack() {\r\n\r\n  return (\r\n    // <CookiesProvider>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n        <Stack.Screen name=\"Deals\" component={DealsScreen} />\r\n        <Stack.Screen name=\"Combo\" component={ComboScreen} />\r\n        <Stack.Screen name=\"Custom\" component={CustomScreen} />\r\n        <Stack.Screen name=\"EditCart\" component={CartEditOrder} />\r\n      </Stack.Navigator>\r\n    // </CookiesProvider>      \r\n  );\r\n}\r\n\r\nexport default MyStack","import { getFocusedRouteNameFromRoute } from '@react-navigation/native'\r\nimport React, {useContext, useEffect, useState} from 'react'\r\nimport { Text, View, Image, ScrollView, StyleSheet, Dimensions, Button, TextInput, Pressable, Modal } from 'react-native'\r\nimport style from '../Style';\r\nimport { useCookies } from 'react-cookie';\r\nimport FetchingFunctions from '../FetchingFunctions';\r\n\r\nexport const CartScreenContext = React.createContext()\r\n\r\nconst SettingsScreen = (props) => {\r\n\tconst {\r\n\t\tmodalVisible,\r\n\t\tsetModalVisible,\r\n\t\tnavigation,\r\n\t\troute,\r\n    user,\r\n    setUser,\r\n    showHistory,\r\n    setShowHistory,\r\n\t} = props\r\n\r\n\tconst [token, setToken, removeToken] = useCookies(['kfc'])\r\n\r\n\tconst [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  // Change button\r\n  const [showRegister, setShowRegister] = useState(false)\r\n\r\n\tuseEffect(()=>{\r\n\t\tconsole.log('cookie:', token['kfc'])\r\n\t\t// getUser()\r\n\t}, [token])\r\n\r\n\t// Login handle\r\n  const login = (e) => {\r\n    console.log(`login run`)\r\n    e.preventDefault()\r\n    \r\n    // console.log(`username: ${username}, password: ${password}`)\r\n    \r\n    // Get token then push to cookie\r\n    FetchingFunctions.P('auth/', {username, password})\r\n    .then((jsonData) => {\r\n      console.log(`token:`, jsonData)\r\n      setToken(\"kfc\", jsonData.token)\r\n      setToken('username', username)\r\n      \r\n      // DONT KNOW WHY BUT IT NEED DOUBLE\r\n      setModalVisible(false)\r\n      setModalVisible(false)\r\n\r\n      // GET USER\r\n      FetchingFunctions.CurrentUser(jsonData.token)\r\n      .then((data)=>{\r\n        setUser(data)\r\n        console.log('User:', data)\r\n        if (!Object.keys(data).includes('detail')) {\r\n          setModalVisible(false)\r\n          console.log('Already login')\r\n        }\r\n      })\r\n    })\r\n  }\r\n  \r\n  function logout() {\r\n\t\tremoveToken('kfc')\r\n\t\tremoveToken('username')\r\n\t\tsetModalVisible(true)\r\n\t}\r\n\r\n  // Register handle\r\n  const register = (event) => {\r\n    event.preventDefault()\r\n    console.log(`register run: ${username}, ${password}`)\r\n    \r\n    FetchingFunctions.Register({username, password})\r\n    .then(() => event)\r\n    .then((e)=>{\r\n      console.log(event)\r\n      login(e)\r\n    })\r\n  }\r\n\r\n  function changeButton() {\r\n    setShowRegister(!showRegister)\r\n  }\r\n\r\n\tif (modalVisible) {\r\n\t\treturn (\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n    \r\n\t\t\t\t<View>\r\n\r\n\t\t\t\t\t<TextInput placeholder='Username' value={username} onChangeText={setUsername}\r\n            style={{\r\n              width: windowWidth,\r\n              minHeight: 50,\r\n              marginBottom: 5,\r\n              backgroundColor: '#d0d5db',\r\n            }}\r\n          />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<TextInput secureTextEntry={true} placeholder='Password' value={password} onChangeText={setPassword}\r\n            style={{\r\n              width: windowWidth,\r\n              minHeight: 50,\r\n              marginBottom: 5,\r\n              backgroundColor: '#d0d5db',\r\n            }}\r\n          />\r\n\r\n          {/* BUTTOM */}\r\n\t\t\t\t\t{showRegister ?\r\n            // Register\r\n\t\t\t\t\t\t<Pressable onPress={register}\r\n              style={{\r\n                width: '50%',\r\n                backgroundColor: 'chartreuse',\r\n                fontWeight: 'bold',\r\n                textTransform:'uppercase',\r\n                textAlign:'center',\r\n                paddingBottom: 10,\r\n                paddingTop: 10,\r\n                borderRadius: 6,\r\n              }} \r\n            >\r\n\t\t\t\t\t\t\t<Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Register</Text> \r\n\t\t\t\t\t\t</Pressable> \r\n\t\t\t\t\t: \r\n            // Login\r\n\t\t\t\t\t\t<Pressable onPress={login}\r\n              style={{\r\n                width: '50%',\r\n                backgroundColor: 'chartreuse',\r\n                fontWeight: 'bold',\r\n                textTransform:'uppercase',\r\n                textAlign:'center',\r\n                paddingBottom: 10,\r\n                paddingTop: 10,\r\n                borderRadius: 6,\r\n              }} \r\n            >\r\n\t\t\t\t\t\t\t<Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Login</Text>\r\n\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{showRegister ? \r\n          // CHANGE TO LOGIN\r\n            <Pressable onPress={changeButton} style={{paddingTop:15}}>\r\n              <Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Already have an account? Sign in</Text> \r\n            </Pressable>\r\n\t\t\t\t\t: \r\n            // CHANGE TO REGISTER\r\n\t\t\t\t\t\t<Pressable onPress={changeButton} style={{paddingTop:15}}>\r\n\t\t\t\t\t\t\t<Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Don't have an account? Sign up</Text>\r\n\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t}\r\n\t\t\t\t</View>\r\n\r\n    \t</ScrollView>\r\n\t\t)\r\n\t}\r\n  // AFTER LOGIN\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n        <View>\r\n\t\t\t\t  <Text>Username:</Text>\r\n          <Text>{user.username}</Text>\r\n        </View>\r\n\r\n\t\t\t\t<View>\r\n\t\t\t\t  <Text>Email:</Text>\r\n          <Text>{user.email}</Text>\r\n        </View>\r\n\r\n\t\t\t\t<Pressable onPress={() => {\r\n\t\t\t\t\tnavigation.navigate('Cart')\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Text>Transaction History</Text>\r\n\t\t\t\t</Pressable>\r\n\t\t\t\t<Pressable onPress={logout}\r\n          style={{\r\n            width: '50%',\r\n            backgroundColor: 'chartreuse',\r\n            fontWeight: 'bold',\r\n            textTransform:'uppercase',\r\n            textAlign:'center',\r\n            paddingBottom: 10,\r\n            paddingTop: 10,\r\n            borderRadius: 6,\r\n            marginTop: 5,\r\n          }}\r\n        >\r\n\t\t\t\t\t<Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Logout</Text>\r\n\t\t\t\t</Pressable>\r\n\t\t\t</ScrollView>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default SettingsScreen\r\n\r\nconst windowWidth = Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n  },\r\n  modalView: {\r\n    // margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    // padding: '100%',\r\n    height: '100%',\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 20\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    width: '95%',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    borderBottomColor: 'gray',\r\n    borderBottomWidth: 1,\r\n    width: '100%',\r\n    paddingTop: 20,\r\n    paddingLeft: 7,\r\n    paddingRight: 7,\r\n  },\r\n  modalInnerText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n  },\r\n  modalChoosingText: {\r\n    color: 'green',\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n  },  \r\n});\r\n\r\n","import { getFocusedRouteNameFromRoute } from '@react-navigation/native'\r\nimport React, {useContext, useEffect, useState} from 'react'\r\nimport { Text, View, Image, ScrollView, StyleSheet, Dimensions, Button, TextInput, Pressable } from 'react-native'\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst CartOrder = (props) => {\r\n  const {\r\n    order = {},\r\n    orders = [],\r\n    setOrders,\r\n  } = props\r\n\r\n  const navigation = useNavigation()\r\n  \r\n  // NUMBER OR DISHES\r\n  const [orderAmount, setOrderAmount] = useState(1)\r\n\r\n  const [price, setPrice] = useState(0)\r\n\r\n  useEffect(()=>{\r\n    setOrderAmount(order.amount)\r\n    setPrice(order.price)\r\n  }, [order])\r\n\r\n  useEffect(() => {\r\n    if (orderAmount != order.amount) {\r\n      order.amount = orderAmount\r\n      // order.price = orderAmount * order.price\r\n      let a = orders.find(element => element.id == order.id)\r\n      let index = orders.indexOf(a)\r\n      let ordersCopy = JSON.parse(JSON.stringify(orders))\r\n      try\r\n        {\r\n          ordersCopy.splice(index, 1, order)\r\n          console.log('order:', order)\r\n        }\r\n      finally {\r\n        setOrders(ordersCopy)\r\n      }\r\n    }\r\n\r\n  }, [orderAmount])\r\n\r\n  function editOrder() {\r\n    navigation.navigate('EditCart', {\r\n      order,\r\n    })\r\n  }\r\n\r\n  function delOrder() {\r\n\t\tlet newOrders = orders.filter(element => element.id != order.id)\r\n\t\tsetOrders(newOrders)\r\n\t}\r\n\r\n  if (Object.keys(order).length == 0) {\r\n    return (\r\n      <View>\r\n        <Text>There are nothing here</Text>\r\n      </View>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <View style={{\r\n        borderWidth: 1,\r\n        borderColor: 'red',\r\n      }}>\r\n        <View style={{\r\n          flexDirection:'row',\r\n        }}>\r\n          <Text style={{\r\n            flexGrow: 1,\r\n            // color: '#000',\r\n            fontWeight: 600,\r\n            fontFamily: 'National2Condensed',\r\n            textTransform: 'uppercase',\r\n            marginBottom: '1rem',\r\n            fontSize: 26,\r\n          }}>{order?.categoryDish?.name.toUpperCase()}</Text>\r\n          <View style={{\r\n            flexDirection: 'row',\r\n          }}>\r\n            {/* EDIT ORDER */}\r\n            <Pressable\r\n              onPress={editOrder}\r\n            >\r\n              <MaterialIcons name=\"edit\" size={24} color=\"black\" />\r\n            </Pressable>\r\n  \r\n            {/* DELETE ORDER */}\r\n            <Pressable\r\n              onPress={delOrder}\r\n            >\r\n              <MaterialIcons name=\"highlight-remove\" size={24} color=\"black\" />\r\n            </Pressable>\r\n\r\n          </View>\r\n        </View>\r\n  \r\n        <View>\r\n          {order.itemsChosen?.map((item, index) => {\r\n            return (\r\n              <Text key={index}>・{item.name}</Text>\t\r\n            )\r\n          })}\r\n        </View>\r\n  \r\n        <View style={{\r\n            flexDirection:'row',\r\n          }}>\r\n          <View style={{\r\n            flexDirection:'row',\r\n            flexGrow: 1,\r\n          }}>\r\n            <Pressable \r\n              onPress={()=>{\r\n                if (orderAmount > 1) {\r\n                setOrderAmount(orderAmount-1)\r\n              }}}\r\n            >\r\n              <Text style={{\r\n                transform: 'scale(1.5)',\r\n              }}>⊖</Text>\r\n            </Pressable>\r\n\r\n            <TextInput style={{\r\n                width:30,\r\n                fontSize: 18,\r\n                paddingLeft: 5,\r\n                paddingRight: 5,\r\n              }}\r\n              value={orderAmount} onChangeText={setOrderAmount} />\r\n\r\n            <Pressable onPress={()=>{\r\n              setOrderAmount(orderAmount + 1)\r\n            }}>\r\n              <Text style={{\r\n                transform: 'scale(1.5)',\r\n              }}>⊕</Text>\r\n            </Pressable>\r\n          </View>\r\n  \r\n          <Text style={{\r\n            fontSize: 18,\r\n            fontFamily: \"National2\",\r\n            lineHeight: 1.5,\r\n            fontWeight: 600,\r\n            alignSelf: 'center',\r\n          }}>{orderAmount * price}</Text>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CartOrder","import React, {useState, useEffect, useContext} from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, Pressable, TextInput, Modal} from \"react-native\";\r\nimport { HomeScreenContext } from \"../HomeScreen\";\r\nimport style from \"../../Style\";\r\nimport FetchingFunctions from \"../../FetchingFunctions\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nconst OrderHistory = (props) => {\r\n  const {\r\n    showHistory,\r\n    setShowHistory,\r\n    modalVisible,\r\n  } = props\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const [token, setToken, removeToken] = useCookies(['kfc'])\r\n\r\n  const [allOrders, setAllOrders] = useState([])\r\n  \r\n  useEffect(()=>{\r\n    // GET ORDER HISTORY\r\n    function getOrderHistory() {\r\n      FetchingFunctions.GWT('order', token)\r\n      .then((data)=>{\r\n        setAllOrders(data)\r\n        console.log(`allOrders:`, data)\r\n      })\r\n    }\r\n\r\n    if (showHistory) {\r\n      getOrderHistory()\r\n    }\r\n  }, [showHistory])\r\n\r\n\r\n\r\n  \tfunction priceSum(orders) {\r\n      let priceSum = 0\r\n      try {\r\n        orders?.map(order => {\r\n          return priceSum += order.price * order.amount\r\n        }\r\n      )}\r\n      finally {\r\n        return priceSum\r\n      }\r\n    }\r\n  \r\n  if (allOrders.length == 0) {\r\n    return (\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={showHistory}\r\n        onRequestClose={() => {\r\n          setShowHistory(!showHistory)\r\n        }}\r\n      >\r\n        <View>\r\n          <ScrollView showsVerticalScrollIndicator={false}\r\n            style={style.homeContainer} \r\n          >\r\n            <Text>You have not ordered anything</Text>\r\n\r\n            <Pressable onPress={()=>{\r\n                setShowHistory(!showHistory)\r\n              }}\r\n              style={{\r\n                width: windowWidth/2,\r\n                backgroundColor: 'green',\r\n                color: 'rgb(232, 230, 227) !important',\r\n                fontWeight: 'bold',\r\n                textTransform:'uppercase',\r\n                textAlign:'center',\r\n                paddingBottom: 15,\r\n                paddingTop: 15,\r\n                borderRadius: 8,\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Text>\r\n                Close Modal\r\n              </Text>\r\n            </Pressable>\r\n\r\n          </ScrollView>\r\n        </View>\r\n      </Modal>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={showHistory}\r\n        onRequestClose={() => {\r\n          setShowHistory(!showHistory)\r\n        }}\r\n      >\r\n        <View style={styles.modalView}>\r\n\r\n          <ScrollView showsVerticalScrollIndicator={false}\r\n            style={[style.homeContainer, {flexGrow:1}]} \r\n          >\r\n            {allOrders?.map((element, index) => {\r\n              return (\r\n                <View key={index}\r\n                  style={{\r\n                    borderColor: 'red',\r\n                    borderBottomWidth: 1,\r\n                    marginBottom: 10,\r\n                    paddingBottom:20,\r\n                  }}\r\n                >\r\n                  <View>\r\n                    {element.orders.map(order => {\r\n                      return (\r\n                        <View key={order.id}\r\n                          style={{\r\n                            // borderColor: 'green',\r\n                            // borderWidth: 1,\r\n                            paddingBottom: 5,\r\n                          }}\r\n                        >\r\n                          <Text style={{\r\n                            flexGrow: 1,\r\n                            // color: '#000',\r\n                            fontWeight: 600,\r\n                            fontFamily: 'National2Condensed',\r\n                            textTransform: 'uppercase',\r\n                            fontSize: 26,\r\n                            marginBottom: 10,\r\n                          }}>\r\n                            {order?.categoryDish?.name.toUpperCase()}\r\n                          </Text>\r\n                    \r\n                          <View>\r\n                            {order.itemsChosen?.map((item, index) => {\r\n                              return (\r\n                                <Text key={index}>・{item.name}</Text>\t\r\n                              )\r\n                            })}\r\n                          </View>\r\n                    \r\n                          <View style={{flexDirection:'row'}}>\r\n                            <Text style={{flexGrow:1}}>{element.orders.length} Items</Text>\r\n                            <Text>{order.amount * order.price}</Text>\r\n                          </View>\r\n                        </View>\r\n                      )\r\n                    })}\r\n                  </View>\r\n            \r\n                  <View style={{flexDirection: 'row', paddingTop:20}}>\r\n                    <Text style={{\r\n                      flexGrow: 1,\r\n                      fontSize: 18,\r\n                      fontFamily: \"National2\",\r\n                      lineHeight: 1.5,\r\n                      fontWeight: 600,\r\n                    }}>\r\n                      SUBTOTAL\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                      fontSize: 18,\r\n                      fontFamily: \"National2\",\r\n                      lineHeight: 1.5,\r\n                      fontWeight: 600,\r\n                      color: 'red',\r\n                    }}>\r\n                      {priceSum(element.orders)}\r\n                    </Text>\r\n                  </View>\r\n          \r\n                </View>\r\n              )\r\n            })}\r\n          </ScrollView>\r\n        \r\n          <Pressable\r\n            onPress={() => {\r\n              setShowHistory(!showHistory)\r\n            }}\r\n            style={{\r\n              width: '100%',\r\n              backgroundColor: 'green',\r\n              paddingBottom: 15,\r\n              paddingTop: 15,\r\n              borderRadius: 8,\r\n              marginTop: 5,\r\n              textAlign:'center',\r\n              // position: 'fixed',\r\n              // bottom: 0,\r\n            }}\r\n          >\r\n            <Text style={{\r\n              // width: '100%',\r\n              color: 'rgb(232, 230, 227) !important',\r\n              fontWeight: 'bold',\r\n              textTransform:'uppercase',\r\n            }}>\r\n              GO BACK\r\n            </Text>\r\n          </Pressable>\r\n        </View>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nconst windowWidth = Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n  },\r\n  modalView: {\r\n    paddingLeft: windowWidth>1000?(windowWidth-1000)/2:5,\r\n    paddingRight: windowWidth>1000?(windowWidth-1000)/2:5,\r\n    height: windowHeight,\r\n    width: '100%',\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    flexDirection: 'column',\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 20\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    width: '95%',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    borderBottomColor: 'gray',\r\n    borderBottomWidth: 1,\r\n    width: '100%',\r\n    paddingTop: 20,\r\n    paddingLeft: 7,\r\n    paddingRight: 7,\r\n  },\r\n  modalInnerText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n  },\r\n  modalChoosingText: {\r\n    color: 'green',\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n  },  \r\n});\r\n\r\nexport default OrderHistory;","import { getFocusedRouteNameFromRoute } from '@react-navigation/native'\r\nimport React, {useContext, useEffect, useState} from 'react'\r\nimport { Text, View, Image, ScrollView, StyleSheet, Dimensions, Button, TextInput, Pressable, Modal } from 'react-native'\r\nimport CartOrder from '../stacks/components/CartOrder';\r\nimport style from '../Style';\r\nimport { useCookies } from 'react-cookie';\r\nimport FetchingFunctions from '../FetchingFunctions';\r\nimport OrderHistory from '../stacks/components/OrderHistory';\r\n\r\nconst CartScreen = (props) => {\r\n\tconst {\r\n\t\tmodalVisible,\r\n\t\tsetModalVisible,\r\n\t\tnavigation,\r\n\t\troute,\r\n\t\tshowHistory,\r\n\t\tsetShowHistory,\r\n\t} = props\r\n\r\n\t// DISH NEED INITIAL VALUE, DEFINED IN APP INITIALPARAMS\r\n\tconst {\r\n\t\tdish,\r\n\t} = route.params\r\n\r\n\tconst [token, setToken, removeToken] = useCookies(['kfc'])\r\n\r\n\tconst [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  // Change button\r\n  const [showRegister, setShowRegister] = useState(false)\r\n\t\r\n\t// ALL ITEMS\r\n\tconst [orders, setOrders] = useState([])\r\n\r\n\t// NOTE FOR ORDER\r\n\tconst [note, setNote] = useState('')\r\n\r\n\t// PROMOTION\r\n\tconst [promotion, setPromotion] = useState('')\r\n\r\n\tuseEffect(()=>{\r\n\t\tconsole.log('dish', dish)\r\n\t\tconsole.log('cookie:', token['kfc'])\r\n\t\t// getUser()\r\n\r\n\t}, [token, dish])\r\n\r\n\tuseEffect(() => {\r\n\t\tlet check = orders.find(e => e.id == dish.id)\r\n\t\tif (dish != undefined) {\r\n\t\t\tif (check === undefined) {\r\n\t\t\t\tsetOrders([...orders, dish])\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet index = orders.indexOf(check)\r\n\t\t\t\tlet copyArray = JSON.parse(JSON.stringify(orders))\r\n\t\t\t\ttry {copyArray.splice(index, 1, dish)}\r\n\t\t\t\tfinally {setOrders(copyArray)}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [dish])\r\n\r\n\tuseEffect(()=>{\r\n\t\tconsole.log(`orders:`, orders)\r\n\t}, [orders]) \r\n\r\n\tfunction priceSum() {\r\n\t\tlet priceSum = 0\r\n\t\ttry {\r\n\t\t\torders?.map(order => {\r\n\t\t\t\treturn priceSum += order.price * order.amount\r\n\t\t\t}\r\n\t\t)}\r\n\t\tfinally {\r\n\t\t\treturn priceSum\r\n\t\t}\r\n\t}\r\n\r\n\tfunction sendOrder() {\r\n\t\tlet body = orders?.map(order => {\r\n\t\t\treturn (\r\n\t\t\t\t{\r\n\t\t\t\t\t// orderId: order.id,\r\n\t\t\t\t\t// dish: order.categoryDish.id, \r\n\t\t\t\t\t// amount: order.amount,\r\n\t\t\t\t\torder: order,\r\n\t\t\t\t\t// price: order.price,\r\n\t\t\t\t\tpromotion: promotion,\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t})\r\n\t\tlet a = {orders: orders, orderDetails: body}\r\n\t\t\r\n\t\tFetchingFunctions.Order(token, {'data':a})\r\n\t\t.then(() => setOrders([]))\r\n\t}\r\n\r\n\t// HAVE NOT LOGIN\r\n\tif (modalVisible) {\r\n\t\treturn (\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\r\n\t\t\t\t<Pressable \r\n\t\t\t\t\tonPress={()=>{\r\n\t\t\t\t\t\tnavigation.navigate('Settings')\r\n\t\t\t\t\t}} \r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '50%',\r\n\t\t\t\t\t\tbackgroundColor: 'chartreuse',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\ttextTransform:'uppercase',\r\n\t\t\t\t\t\ttextAlign:'center',\r\n\t\t\t\t\t\tpaddingBottom: 10,\r\n\t\t\t\t\t\tpaddingTop: 10,\r\n\t\t\t\t\t\tborderRadius: 6,\r\n\t\t\t\t\t}} \r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\tfontSize: 16,\r\n\t\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\t}}>LOGIN FIRST</Text>\r\n\t\t\t\t</Pressable>\r\n\r\n    \t</ScrollView>\r\n\t\t)\r\n\t}\r\n\t// HAVE NOT ORDER ANYTHING\r\n\telse if (orders.length == 0) {\r\n\t\treturn (\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\t\t\t\t<OrderHistory\r\n\t\t\t\t\tshowHistory={showHistory}\r\n\t\t\t\t\tsetShowHistory={setShowHistory} \r\n\t\t\t\t/>\r\n\t\t\t\t<Text style={{\r\n\t\t\t\t}}>\r\n\t\t\t\t\tYour Cart is empty?\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text>Making order to enjoy KFC special secret recipes</Text>\r\n\t\t\t\t<Pressable \r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '50%',\r\n\t\t\t\t\t\tbackgroundColor: 'green',\r\n\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\ttextTransform:'uppercase',\r\n\t\t\t\t\t\ttextAlign:'center',\r\n\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t}} \r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tnavigation.navigate('Main')\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{color:'chartreuse'}}>ORDER NOW</Text>\r\n\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t<Pressable \r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\tbackgroundColor: 'green',\r\n\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\ttextTransform:'uppercase',\r\n\t\t\t\t\t\ttextAlign:'center',\r\n\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonPress={()=>{\r\n\t\t\t\t\t\tsetShowHistory(true)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{color:'chartreuse'}}>ORDER HISTORY</Text>\r\n\t\t\t\t</Pressable>\r\n\t\t\t</ScrollView>\r\n\t\t)\r\n\t}\r\n\t// Ordered\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tanimationType=\"slide\"\r\n\t\t\t\t\ttransparent={true}\r\n\t\t\t\t\tvisible={showHistory}\r\n\t\t\t\t\tonRequestClose={() => {\r\n\t\t\t\t\t\tsetShowHistory(!showHistory)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<OrderHistory\r\n\t\t\t\t\t\tshowHistory={showHistory}\r\n\t\t\t\t\t\tsetShowHistory={setShowHistory} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t<Text style={{\r\n\t\t\t\t\tbackgroundColor: 'rgb(182, 0, 34)',\r\n\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\ttextTransform:'uppercase',\r\n\t\t\t\t\ttextAlign:'center',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t}}>PROCEED TO PAYMENT</Text>\r\n\t\t\t\t\r\n\t\t\t\t{orders?.map((order) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<CartOrder key={order.id} \r\n\t\t\t\t\t\t\torder={order} \r\n\t\t\t\t\t\t\torders={orders} \r\n\t\t\t\t\t\t\tsetOrders={setOrders} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t<TextInput style={{\r\n\t\t\t\t\t\twidth: windowWidth,\r\n\t\t\t\t\t\tminHeight: 50,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\tbackgroundColor: '#d0d5db',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tplaceholder='Notes for your order' value={note} onChangeText={setNote} \r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<View style={{width: '100%'}}>\r\n\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t}}>{orders.length} Items</Text>\r\n\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tfontSize: 20,\r\n\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t}}>{priceSum()}</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\tpaddingBottom: 20,\r\n\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\tminHeight: 50,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<TextInput style={{\r\n\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\tminHeight: 50,\r\n\t\t\t\t\t\t\t\tbackgroundColor: '#d0d5db',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={promotion} onChangeText={setPromotion} placeholder='Enter promotion code' />\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<Pressable style={{\r\n\t\t\t\t\t\t\tborderWidth: 1,\r\n\t\t\t\t\t\t\tborderColor: 'gray',\r\n\t\t\t\t\t\t\theight: 50,\r\n\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\tpadding: 5,\r\n\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tAPPLY CODE\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\tpaddingBottom: 20,\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tSUBTOTAL\r\n\t\t\t\t\t\t</Text>\r\n\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t}}>{priceSum()}</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Pressable\r\n\t\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\t\tnavigation.navigate('Main')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgb(182, 0, 34)',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\t\ttextTransform:'uppercase',\r\n\t\t\t\t\t\t\t\t\ttextAlign:'center',\r\n\t\t\t\t\t\t\t\t}}>CONTINUE ORDERING</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t\t\t<Pressable onPress={sendOrder}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgb(182, 0, 34)',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\t\ttextTransform:'uppercase',\r\n\t\t\t\t\t\t\t\t\ttextAlign:'center',\r\n\t\t\t\t\t\t\t\t}}>SEND ORDER</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<Pressable onPress={()=>{\r\n\t\t\t\t\t\t\tsetShowHistory(true)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t// width: '100%',\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'green',\r\n\t\t\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\ttextTransform:'uppercase',\r\n\t\t\t\t\t\t\t\ttextAlign:'center',\r\n\t\t\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\t\t\tmarginTop: 5,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tORDER HISTORY\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t</View>\r\n\r\n\r\n\r\n\t\t\t</ScrollView>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default CartScreen\r\n\r\nconst windowWidth = Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n  },\r\n  modalView: {\r\n    // margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    // padding: '100%',\r\n    height: '100%',\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 20\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    width: '95%',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    borderBottomColor: 'gray',\r\n    borderBottomWidth: 1,\r\n    width: '100%',\r\n    paddingTop: 20,\r\n    paddingLeft: 7,\r\n    paddingRight: 7,\r\n  },\r\n  modalInnerText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n  },\r\n  modalChoosingText: {\r\n    color: 'green',\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n  },  \r\n});\r\n\r\n","import React, { useEffect, useState } from 'react'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons'\nimport MainContainer from './navigation/bottomTabs/MainContainer';\nimport SettingsScreen from './navigation/bottomTabs/SettingsScreen'\nimport CartScreen from './navigation/bottomTabs/CartScreen'\nimport FetchingFunctions from './navigation/FetchingFunctions';\nimport {CookiesProvider, useCookies} from 'react-cookie'\nimport { useWindowDimensions } from 'react-native';\n\nconst homeName = 'Main'\nconst cartName = 'Cart'\nconst settingsName = 'Settings'\nconst Tab = createBottomTabNavigator()\n\nconst App = () => {\n\n  const [token, setToken, removeToken] = useCookies(['kfc'])\n  \n  // SHOW LOGIN MODAL\n  const [modalVisible, setModalVisible] = useState(true)\n\n  // SHOW ORDER HISTOPRY\n  const [showHistory, setShowHistory] = useState(false)\n  \n  const [user, setUser] = useState([])\n\n  const { height, width } = useWindowDimensions();\n\n  useEffect(()=>{\n    // CHECK CURRENT TOKEN\n    function getUser() {\n      // use getCookie() func to prevent undefined value\n      let token = getCookie('kfc')\n      FetchingFunctions.CurrentUser(token)\n      .then((data)=>{\n        setUser(data)\n        console.log('User:', data)\n        if (!Object.keys(data).includes('detail')) {\n          setModalVisible(false)\n          console.log('Already login')\n        }\n      })\n    }\n\n    getUser()\n  }, [token])\n\n  useEffect(()=>{\n    console.log('CHANGE WINDOWS SIZE')\n  }, [width, height])\n\n\n  function getCookie(cname) {\n\t\tlet name = cname + \"=\";\n\t\tlet ca = document.cookie.split(';');\n\t\tfor(let i = 0; i < ca.length; i++) {\n\t\t\tlet c = ca[i];\n\t\t\twhile (c.charAt(0) == ' ') {\n\t\t\t\tc = c.substring(1);\n\t\t\t}\n\t\t\tif (c.indexOf(name) == 0) {\n\t\t\t\treturn c.substring(name.length, c.length);\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t}\n\n  return (\n    <CookiesProvider>\n      <NavigationContainer>\n        <Tab.Navigator\n          initialRouteName = {homeName}\n          screenOptions = {({ route }) => ({\n            tabBarIcon: ({ focused, color, size }) => {\n              let iconName\n              let rn = route.name\n              \n              if (rn === homeName) {\n                iconName = focused ? 'home' : 'home-outline'\n              }\n              else if (rn === cartName) {\n                iconName = focused ? 'cart' : 'cart-outline'\n              }\n              else if (rn === settingsName) {\n                iconName = focused ? 'settings' : 'settings-outline'\n              }\n              return (\n                <Ionicons name={iconName} size={size} color={color} />\n              )\n            },\n            // activeTinColor: 'tomato',\n            // inactiveTinColor: 'grey',\n            // title: 'Hello',\n            headerShown: false,\n            headerStyle: { backgroundColor: 'papayawhip' },\n            labelStyle: {paddingBottom:10,fontSize:10},\n            style:{padding:10,height:70},\n          })}\n        >\n\n        <Tab.Screen name={homeName} component={MainContainer} />\n\n        <Tab.Screen name={cartName} \n          // component={CartScreen}\n          children={props => (\n            <CartScreen {...props}\n             modalVisible={modalVisible} \n             setModalVisible={setModalVisible}\n             showHistory={showHistory}\n             setShowHistory={setShowHistory}\n            />\n          )}\n             \n          initialParams={{\n            'dish': undefined,\n          }} \n        />\n        <Tab.Screen name={settingsName}\n        //  component={SettingsScreen} \n          children={props => (\n            <SettingsScreen {...props}\n             modalVisible={modalVisible} \n             setModalVisible={setModalVisible}\n             user={user}\n             setUser={setUser}\n             showHistory={showHistory}\n             setShowHistory={setShowHistory}\n            />\n          )}\n        />\n\n        </Tab.Navigator>\n      </NavigationContainer>\n    </CookiesProvider>\n    \n  )\n}\n\nexport default App"],"sourceRoot":""}