{"version":3,"sources":["context/appContext.js","navigation/stacks/components/Category.js","navigation/stacks/components/SingleItemCategory.js","navigation/stacks/components/SingleItemCategories.js","navigation/stacks/components/Dish.js","navigation/stacks/components/Dishes.js","navigation/stacks/components/Categories.js","assets/wrappers/DealsSlider.js","navigation/stacks/components/DealsSlider.js","navigation/stacks/HomeScreen.js","navigation/stacks/DealsScreen.js","navigation/stacks/components/CustomChoice.js","navigation/stacks/components/CustomChoices.js","assets/wrappers/ImageSlider.js","navigation/stacks/components/ImageSlider.js","navigation/stacks/CustomScreen.js","navigation/stacks/CartEditOrder.js","navigation/bottomTabs/MainContainer.js","navigation/bottomTabs/SettingsScreen.js","navigation/stacks/components/CartOrder.js","navigation/stacks/components/OrderHistory.js","navigation/bottomTabs/CartScreen.js","App.js"],"names":["token","cname","name","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","getCookie","initialState","windowWidth","Dimensions","get","width","windowHeight","height","host","baseURL","AppContext","React","createContext","AppProvider","children","useState","state","setState","handleWindowSizeChange","useEffect","window","addEventListener","removeEventListener","style","StyleSheet","create","homeContainer","paddingLeft","paddingRight","paddingTop","marginTop","marginLeft","marginRight","borderWidth","minHeight","homeCategories","flexDirection","justifyContent","homeCategory","alignItems","maxWidth","maxHeight","borderColor","borderRadius","homeCategoryChosen","homeSingleItemCategory","homeSingleItemCategoryChosen","homeFoodListCover","homeFoodList","flexWrap","dishContainer","flexGrow","marginBottom","dishName","overflow","wordWrap","hyphens","fontSize","dishImageContainer","aspectRatio","DishImage","resizeMode","dishInfo","dishInfoHide","dishInfoShow","customBtn","alignSelf","customOrder","customName","fontStyle","color","fontWeight","customList","dealImageContainer","dealImage","customAxios","axios","authFetch","interceptors","request","use","config","headers","common","error","Promise","reject","Provider","value","changeImagePath","image","baseUrl","includes","useAppContext","useContext","Category","props","category","setShowSingleItems","categoryChosen","setCategoryChosen","Pressable","onPress","id","Text","field","replace","toUpperCase","SingleItemCategory","singleItemCategory","Image","source","uri","image_url","SingleItemCategories","categories","View","filter","input","Boolean","startsWith","filterSingleItems","map","Dish","categoryDish","navigation","useNavigation","images","setImages","dishItems","setDishItems","loading","setLoading","hideInfo","setHideInfo","shorten","setShorten","choicesText","array","text","substr","customProps","navigate","category__field","hideDishInfo","url","then","response","data","url1","finally","homeFoodContainer","p","undefined","imagePath","numberOfLines","price","selections","selection","default","index","choices","singleItems","singleItem","size","transform","transitionDuration","textAlign","itemsChosen","selectionsDefault","singleItemDefault","dish","Date","now","amount","Dishes","categoryDishes","Categories","setCategories","setCategoryDishes","showSingleItems","getCategories","resolve","a","find","Error","catch","err","console","log","findFirstComboId","alignContent","filterCombo","DealsSliderWrapperContext","Wrapper","windowWidth1","windowHeight1","container","maxHheight","scroll","imageContainer","pagination","position","bottom","dots","margin","dotActive","DealsSlider","deals","currentSlide","setCurrentSlide","scrollRef","useRef","autoPlay","changeSlide","current","scrollTo","x","animated","setTimeout","clearTimeout","ScrollView","ref","pagingEnabled","horizontal","showsHorizontalScrollIndicator","onScroll","event","slide","Math","round","nativeEvent","contentOffset","scrollEventThrottle","onScrollBeginDrag","onScrollEndDrag","overScrollMode","deal","imagePress","HomeScreenContext","HomeScreen","setDeals","getDeals","showsVerticalScrollIndicator","DealsScreen","route","params","title","description","hashtag","CustomChoice","choice","chosen","setItemsChosen","replaceChoice","newItemsChosen","JSON","parse","stringify","otherSelections","element","selectionId","changedSelection","shift","push","image__image","image__image_url","EvilIcons","b","splice","CustomChoices","setChosen","itemIds","ImageSliderWrapperContext","windowHeight2","ImageSlider","imageArray","CustomScreenContext","CustomScreen","setImageArray","orderTotal","setOrderTotal","setPrice","imgArray","sort","total","Object","keys","due","TextInput","onChangeText","fontFamily","lineHeight","goBack","CartEditOrder","order","orderAmount","setOrderAmount","Stack","createNativeStackNavigator","MyStack","Navigator","Screen","component","SettingsScreen","modalVisible","setModalVisible","user","setUser","useCookies","setToken","removeToken","username","setUsername","password","setPassword","showRegister","setShowRegister","login","e","preventDefault","post","jsonData","Authorization","register","changeButton","placeholder","backgroundColor","secureTextEntry","textTransform","paddingBottom","email","centeredView","modalView","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","button","padding","buttonOpen","buttonClose","textStyle","modalText","borderBottomColor","borderBottomWidth","modalInnerText","modalChoosingText","CartOrder","orders","setOrders","ordersCopy","MaterialIcons","newOrders","item","styles","OrderHistory","showHistory","setShowHistory","allOrders","setAllOrders","priceSum","Modal","animationType","transparent","visible","onRequestClose","CartScreen","note","setNote","promotion","setPromotion","sendOrder","body","orderDetails","check","copyArray","initializeOrder","Tab","createBottomTabNavigator","App","CookiesProvider","NavigationContainer","initialRouteName","screenOptions","tabBarIcon","iconName","focused","rn","Ionicons","headerShown","headerStyle","labelStyle","MainContainer","initialParams"],"mappings":"4zBAoBA,IAAMA,EAfN,SAAmBC,GAGjB,IAFA,IAAIC,EAAOD,EAAQ,IACfE,EAAKC,SAASC,OAAOC,MAAM,KACvBC,EAAI,EAAGA,EAAIJ,EAAGK,OAAQD,IAAK,CAEjC,IADA,IAAIE,EAAIN,EAAGI,GACW,KAAfE,EAAEC,OAAO,IACdD,EAAIA,EAAEE,UAAU,GAElB,GAAuB,GAAnBF,EAAEG,QAAQV,GACZ,OAAOO,EAAEE,UAAUT,EAAKM,OAAQC,EAAED,QAGtC,MAAO,GAGKK,CAAU,OAIlBC,EAAe,CACnBC,YAAaC,UAAWC,IAAI,UAAUC,MACtCC,aAAcH,UAAWC,IAAI,UAAUG,OACvCpB,MAAOA,EACPqB,KAPgF,GAQhFC,QAPqB,YAUjBC,EAAaC,IAAMC,gBACnBC,EAAc,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAErB,EAA0BC,mBAASd,GAAa,WAAzCe,EAAK,KAAEC,EAAQ,KAEtB,SAASC,IAGPD,EAAS,EAAD,KAAKD,GAAK,IAAEd,YAAaC,UAAWC,IAAI,UAAUC,MAAOC,aAAcH,UAAWC,IAAI,UAAUG,UAG1GY,qBAAU,WAER,OADAC,OAAOC,iBAAiB,SAAUH,GAC3B,WACLE,OAAOE,oBAAoB,SAAUJ,MAEtC,IAGH,IAAMK,EAAQC,UAAWC,OAAO,CAE9BC,cAAe,CACbrB,MAAOW,EAAMd,YAAc,IAAO,IAAOc,EAAMd,YAG/CyB,YAAaX,EAAMd,YAAc,IAAO,OAAS,EAEjD0B,aAAcZ,EAAMd,YAAc,IAAO,OAAS,EAClD2B,WAAY,EACZtB,OAAQS,EAAMV,aAAe,IAC7BwB,UAAW,GACXC,WAAY,OACZC,YAAa,OAEbC,YAAa,EACbC,UAAWlB,EAAMV,aAAe,IAChCC,OAAQ,QAIV4B,eAAgB,CACdC,cAAe,MAEfH,YAAa,EACbI,eAAgB,eAChBP,UAAW,IAEbQ,aAAc,CACZF,cAAe,SACfC,eAAgB,SAChBE,WAAY,SACZlC,MAAO,GAAMW,EAAMd,YACnBsC,SAAU,IACVjC,OAAQ,GAAMS,EAAMd,YACpBuC,UAAW,IACXC,YAAa,YACbT,YAAa,EACbU,aAAc,IAEhBC,mBAAoB,CAClBR,cAAe,SACfC,eAAgB,SAChBE,WAAY,SACZlC,MAAO,GAAMW,EAAMd,YACnBK,OAAQ,GAAMS,EAAMd,YACpB+B,YAAa,EACbS,YAAa,SACbC,aAAc,GAEhBE,uBAAwB,CACtBxC,MAAO,GAAMW,EAAMd,YACnBsC,SAAU,IACVjC,OAAQ,GAAMS,EAAMd,YACpBuC,UAAW,IACXC,YAAa,YACbT,YAAa,EACbU,aAAc,IAEhBG,6BAA8B,CAC5Bb,YAAa,EACbU,aAAc,EACdtC,MAAO,GAAMW,EAAMd,YACnBK,OAAQ,GAAMS,EAAMd,YACpBwC,YAAa,UAEfK,kBAAmB,CAEjBjB,UAAW,IAEbkB,aAAc,CACZZ,cAAe,MACfa,SAAU,OAKVZ,eAAgB,UAElBa,cAAe,CAEbjB,YAAa,EACb5B,MAAO,IAAOW,EAAMd,YACpBK,OAAQ,cACRoB,YAAaX,EAAMd,YAAc,IAAO,OAAS,KAAQc,EAAMd,YAC/D0B,aAAcZ,EAAMd,YAAc,IAAO,OAAS,KAAQc,EAAMd,YAChEsC,SAAU,GAAIxB,EAAMd,YAAY,EAAI,IAAM,IAAM,GAAIc,EAAMd,YAAY,EACtEkC,cAAe,SACfe,SAAU,EACVC,aAAc,IAEhBC,SAAU,CAIRC,SAAU,SACVC,SAAU,aACVC,QAAS,OACTnD,MAAO,OACPE,OAAQ,GACRkD,SAAU,IAEZC,mBAAoB,CAClBrD,MAAO,OAGPsD,YAAa,GAEfC,UAAW,CACTT,SAAU,EACVR,aAAc,GACdD,YAAa,MACbT,YAAa,EACbU,aAAc,GACdX,YAAa,GACb6B,WAAY,UACZ3B,UAAW,GACX7B,MAAO,OACPE,OAAQ,QAEVuD,SAAU,GAKVC,aAAc,CACZ9B,YAAa,EACbS,YAAa,uBACbnC,OAAQS,EAAMd,YAAc,IAAO,IAAOc,EAAMd,YAAc,IAAOc,EAAMd,YAC3EuC,UAAW,GACXa,SAAU,UAEZU,aAAc,CACZ/B,YAAa,EACbS,YAAa,uBACbR,UAAWlB,EAAMd,YAAc,IAAO,IAAOc,EAAMd,YAAc,IAAOc,EAAMd,aAEhF+D,UAAW,CACTnC,UAAW,EACXoC,UAAW,SACX7D,MAAO,MACPE,OAAQ,GACR0B,YAAa,EACbS,YAAa,sCAGfyB,YAAa,CACX9D,MAAO,QAET+D,WAAY,CACVC,UAAW,SACXZ,SAAU,sBACVa,MAAO,QACPC,WAAY,OACZhB,SAAU,cAEZiB,WAAY,GAIZC,mBAAoB,CAClBpE,MAAOW,EAAMd,YACbK,OAAQ,IAAOS,EAAMd,aAEvBwE,UAAW,CACTrE,MAAO,OACPsD,YAAa,EACbE,WAAY,aAKVc,EAAcC,UAAMnD,OAAO,CAC/BhB,QAASO,EAAMP,UAKXoE,EAAYD,UAAMnD,OAAO,CAC7BhB,QAASO,EAAMP,UA0BjB,OAtBAoE,EAAUC,aAAaC,QAAQC,KAC7B,SAACC,GAEC,OADAA,EAAOC,QAAQC,OAAsB,cAAC,SAAYhG,EAC3C8F,KAET,SAACG,GACC,OAAOC,QAAQC,OAAOF,MAiBxB,cAAC1E,EAAW6E,SAAQ,CAClBC,MAAK,OACAxE,GAAK,IACRO,QACAoD,cACAE,YACAY,gBAjBN,SAAyBC,GACvB,IAAMC,EAAO,GAAM3E,EAAMR,KACzB,OAAKkF,GAAS,IAAIE,SAASD,GAClBD,EAGAC,EAAUD,KAYd,SAEF5E,KAKD+E,EAAgB,WAAQ,OAAQC,qBAAWpF,ICjPlCqF,EAzBE,SAACC,GAChB,IAAQzE,EAAUsE,IAAVtE,MAEN0E,EAIED,EAJFC,SACAC,EAGEF,EAHFE,mBACAC,EAEEH,EAFFG,eACAC,EACEJ,EADFI,kBAGF,OACE,cAACC,EAAA,QAAS,CACRC,QAAS,WACPF,EAAkBH,EAASM,IAC3BL,GAAmB,IAErB3E,MAAO4E,IAAmBF,EAASM,GAAKhF,EAAMqB,mBAAqBrB,EAAMe,aAAa,SAEtF,cAACkE,EAAA,QAAI,UACFP,EAASQ,MAAMC,QAAQ,SAAU,IAAIC,mB,QCK/BC,EAvBY,SAACZ,GAC1B,MAAoCH,IAA5BtE,EAAK,EAALA,MAAOkE,EAAe,EAAfA,gBAEboB,EAGEb,EAHFa,mBACAV,EAEEH,EAFFG,eACAC,EACEJ,EADFI,kBAIF,OACE,cAACC,EAAA,QAAS,CACRC,QAAS,WACPF,EAAkBS,EAAmBN,KACrC,SAEF,cAACO,EAAA,QAAK,CAACC,OAAQ,CAACC,IAAKvB,EAAgBoB,EAAmBI,YACtD1F,MAAOsF,EAAmBN,KAAOJ,EAAiB5E,EAAMuB,6BAA+BvB,EAAMsB,4BCgCtFqE,EAhDc,SAAClB,GAC5B,IAAQzE,EAAUsE,IAAVtE,MAEN4F,EAGEnB,EAHFmB,WACAhB,EAEEH,EAFFG,eACAC,EACEJ,EADFI,kBASF,OACE,cAACgB,EAAA,QAAI,CAAC7F,MAAOA,EAAMY,eAAe,SAC/BgF,EAAWE,QAAO,SAAAR,GAAkB,OARzC,SAA2BS,GACzB,IAAwD,IAApDC,QAAQD,EAAMb,MAAMe,WAAW,iBACjC,OAAOF,EAMkCG,CAAkBZ,MAAqBa,KAAI,SAACb,GACnF,OACE,cAAC,EAAkB,CACjBA,mBAAoBA,EACpBV,eAAgBA,EAChBC,kBAAmBA,GAHIS,EAAmBN,U,kCCjBzCoB,EAAO,SAAC3B,GAAW,IAAD,MAE3B4B,EACE5B,EADF4B,aAGF,EAAgD/B,IAAxCtE,EAAK,EAALA,MAAOoD,EAAW,EAAXA,YAAac,EAAe,EAAfA,gBAEtBoC,EAAaC,0BAInB,EAA4B/G,mBAAS,IAAG,WAAjCgH,EAAM,KAAEC,EAAS,KAGxB,EAAkCjH,mBAAS,IAAG,WAAvCkH,EAAS,KAAEC,EAAY,KAG9B,EAA8BnH,oBAAS,GAAM,WAAtCoH,EAAO,KAAEC,EAAU,KAG1B,EAAgCrH,oBAAS,GAAM,WAAxCsH,EAAQ,KAAEC,EAAW,KAG5B,EAA8BvH,oBAAS,GAAK,WAArCwH,EAAO,KAAEC,EAAU,KAuB1B,SAASC,EAAYC,GACnB,IAAIC,EAAO,GACX,IACE,IAAK,IAAIjJ,EAAI,EAAGA,EAAIgJ,EAAM/I,OAAQD,GAAK,EACrCiJ,GAAI,IAAQD,EAAMhJ,GAAGL,KAExB,QAEC,MAAe,KAAXsJ,EAAK,GACAA,EAAKC,OAAO,EAAGD,EAAKhJ,QAGpBgJ,GAKb,SAASE,IACPhB,EAAWiB,SAAS,SAAU,CAC5Bf,SACAH,eACAK,cA6DJ,OA/BA9G,qBAAU,WACRiH,GAAW,GAxEb,SAAsBR,GAChB,CAAC,8BAAD,sBAAsDhC,SAASgC,EAAamB,kBAC9ET,GAAY,GAyEdU,CAAapB,GAEb,IAAMqB,EAAG,eAAkBrB,EAAarB,GAAE,IAE1C5B,EAAYsE,GACXC,MAAK,SAACC,GACL,OAAOA,EAASC,QAEjBF,MAAK,SAACE,GACLpB,EAAUoB,MAIZ,IAAMC,EAAI,cAAiBzB,EAAarB,GAAE,IAE1C5B,EAAY0E,GACXH,MAAK,SAAAC,GAAQ,OAAEA,EAASC,QACxBF,MAAK,SAACE,GAELlB,EAAakB,MAEdE,SAAQ,WACPlB,GAAW,QAEZ,IAGCD,EAEA,cAACf,EAAA,QAAI,CAAC7F,MAAOA,EAAMgI,kBAAkB,SACnC,cAAC/C,EAAA,QAAI,UAAC,yBAMV,eAACY,EAAA,QAAI,CAAC7F,MAAOA,EAAM2B,cAAc,UAC/B,cAACmD,EAAA,QAAS,CAAC9E,MAAOA,EAAMmC,mBACtB4C,QAASuC,EAAY,SAGrB,cAAC/B,EAAA,QAAK,CACJvF,MAAOA,EAAMqC,UACbmD,OA/GR,WACE,IAAIyC,EAQJ,OALEA,OAFaC,IAAX1B,GAA0C,IAAlBA,EAAOpI,OAE7B,GAGAoI,EAAO,GAAGd,UAET,CAAED,IAAKvB,EAAgB+D,IAsGhBE,OAIZ,eAACtC,EAAA,QAAI,WACH,cAACZ,EAAA,QAAI,CAACmD,cAAe,EAAGpI,MAAOA,EAAM8B,SAAS,SAC3CuE,EAAavI,OAEhB,cAACmH,EAAA,QAAI,UAAEoB,EAAagC,WAGtB,eAACxC,EAAA,QAAI,CAAC7F,MAAOgH,EAAUhH,EAAMuC,SAAW,CAACvC,EAAMuC,SAAU,CAAEvD,OAAQ,gBAAiB,UAEjF8H,GAEC,eAACjB,EAAA,QAAI,CAAC7F,MAAOgH,EAAUhH,EAAMwC,aAAexC,EAAMyC,aAAa,UAGxC,OAHwC,EAG5DiE,EAAU4B,iBAAU,EAApB,EAAsBxC,QAAO,SAAAyC,GAAS,MACA,+BAArCA,EAAUC,QAAQhB,mBAClBrB,KAAI,SAACoC,EAAWE,GAChB,OACE,cAACxD,EAAA,QAAI,UACFiC,EAAYqB,EAAUG,UADdD,MAOO,OAHpB,EAGD/B,EAAUiC,kBAAW,EAArB,EAAuBxC,KAAI,SAACyC,EAAYH,GACvC,OACE,cAACxD,EAAA,QAAI,UACF2D,EAAW9K,MADH2K,MAOM,OAHnB,EAGD/B,EAAU4B,iBAAU,EAApB,EAAsBxC,QAAO,SAAAyC,GAAS,MACA,+BAArCA,EAAUC,QAAQhB,mBAClBrB,KAAI,SAACoC,EAAWE,GAChB,OACE,cAACxD,EAAA,QAAI,UACFsD,EAAUC,QAAQ1K,MADV2K,SASnB,cAAC3D,EAAA,QAAS,CAAC9E,MAAO,CAAE2C,UAAW,UAC7BoC,QAAS,kBAAMkC,GAAYD,IAAS,SAEpC,cAAC,cAAW,CAAClJ,KAAK,sBAAsB+K,KAAM,GAAI9F,MAAM,QAAQ/C,MAAOgH,EAAU,CAAE8B,UAAW,eAAgBC,mBAAoB,SAAY,CAAED,UAAW,iBAAkBC,mBAAoB,aAGnM,cAACjE,EAAA,QAAS,CAAC9E,MAAOA,EAAM0C,UACtBqC,QAASuC,EAAY,SAErB,cAACrC,EAAA,QAAI,CAACjF,MAAO,CAAE+C,MAAO,QAASiG,UAAW,UAAW,SAAC,aAGxD,cAAClE,EAAA,QAAS,CAAC9E,MAAOA,EAAM0C,UACtBqC,QAxIR,WACE,IAAIkE,EACJ,IAAK,IAAD,EACEC,EAAwC,OAAvB,EAAGxC,EAAU4B,iBAAU,EAApB,EAAsBnC,KAAI,SAACoC,GACjD,OAAOA,EAAUC,WAEfW,EAAoBzC,EAAUiC,YAClCM,EAAW,cAAOC,GAAiB,IAAKC,IACzC,QAGC7C,EAAWiB,SAAS,OAAQ,CAC1B6B,KAAM,CACJpE,GAAIqE,KAAKC,MACTjD,aAAcA,EACd4C,YAAaA,EACbvC,UAAWA,EACXF,OAAQA,EACR6B,MAAOhC,EAAagC,MACpBkB,OAAQ,OAqHW,SAEnB,cAACtE,EAAA,QAAI,CAACjF,MAAO,CAAE+C,MAAO,QAASiG,UAAW,UAAW,SAAC,mBC7MnDQ,EAAS,SAAC/E,GACrB,IAAQzE,EAAUsE,IAAVtE,MAENyJ,EACEhF,EADFgF,eAGF,OACE,eAAC5D,EAAA,QAAI,CAAC7F,MAAOA,EAAMwB,kBAAkB,UAEnC,cAAC,oBAAiB,CAACqH,KAAM,GAAI9F,MAAM,OACjC/C,MAAO,CAAEQ,WAAY,OAAQC,YAAa,UAE5C,cAACoF,EAAA,QAAI,CACH7F,MAAO,CAELO,UAAW,IACX,SAGF,cAACsF,EAAA,QAAI,CAAC7F,MAAOA,EAAMyB,aAAa,SAC7BgI,EAAetD,KAAI,SAACE,GACnB,OACE,cAAC,EAAI,CACHA,aAAcA,GADLA,EAAarB,eC6HvB0E,EAvJI,WACjB,MAGIpF,IAFFtE,EAAK,EAALA,MACAoD,EAAW,EAAXA,YAIF,EAAoC5D,mBAAS,IAAG,WAAzCoG,EAAU,KAAE+D,EAAa,KAGhC,EAA4CnK,mBAAS,IAAG,WAAjDiK,EAAc,KAAEG,EAAiB,KAGxC,EAA4CpK,mBAAS,GAAE,WAAhDoF,EAAc,KAAEC,EAAiB,KAGxC,EAA8CrF,oBAAS,GAAM,WAAtDqK,EAAe,KAAElF,EAAkB,KAkE1C,IAAMmF,EAAa,sBAAG,YACpB,IACQjC,SAAezE,EADd,oBACDyE,KAER8B,EAAc9B,GAzDhB,SAA0BjC,GACN,IAAI9B,SAAQ,SAAUiG,EAAShG,GAC/C,IAAIiG,EAAIpE,EAAWqE,MAAK,SAAAvF,GAAQ,OAAIA,EAASQ,MAAMe,WAAW,aAC1D+D,EACFD,EAAQC,GAGRjG,EAAOmG,MAAM,qCAKLvC,MAAK,SAACE,GAIhBhD,EAAkBgD,EAAK7C,OACtBmF,OAAM,SAACC,OAIVC,QAAQC,MAqCRC,CAAiB1C,MAClB,kBANkB,mCAoBnB,OAZAjI,qBAAU,WAERkK,MACC,IAEHlK,qBAAU,WAEe,IAAnBgF,GA5EJxB,EADS,kBA8EUwB,GA5ElB+C,MAAK,SAAAC,GAAQ,OAAEA,EAASC,QACxBF,MAAK,SAACE,GACL+B,EAAkB/B,QA4EnB,CAACjD,IAGF,eAACiB,EAAA,QAAI,CAAC7F,MAAO,CACXlB,MAAO,QAGP,UACA,eAAC+G,EAAA,QAAI,CAAC7F,MAAO,CAACA,EAAMY,eAAgB,CAAE4J,aAAc,YAAa,UAC9D5E,EAAWE,QAAO,SAAApB,GAAQ,OAjCjC,SAAqBqB,GACnB,IAAkD,IAA9CC,QAAQD,EAAMb,MAAMe,WAAW,WACjC,OAAOF,EA+B0B0E,CAAY/F,MAAWyB,KAAI,SAACzB,GACzD,OACE,cAAC,EAAQ,CACPA,SAAUA,EACVC,mBAAoBA,EACpBC,eAAgBA,EAChBC,kBAAmBA,GAJNH,EAASM,OAS5B,cAACF,EAAA,QAAS,CACRC,QAAS,WACPJ,GAAmB,GApET,IAAIb,SAAQ,SAAUiG,EAAShG,GAC/C,IAAIiG,EAAIpE,EAAWqE,MAAK,SAAAvF,GAAQ,OAAIA,EAASQ,MAAMe,WAAW,mBAC1D+D,EACFD,EAAQC,GAGRjG,EAAOmG,MAAM,qCAKLvC,MAAK,SAAUE,GAGzBhD,EAAkBgD,EAAK7C,OAEtBmF,OAAM,SAAUC,QAuDbpK,MAAO6J,EAAkB7J,EAAMqB,mBAAqBrB,EAAMe,aAAa,SAEvE,cAACkE,EAAA,QAAI,UAAC,sBAST4E,GACC,cAAC,EAAoB,CACnBjE,WAAYA,EACZhB,eAAgBA,EAChBC,kBAAmBA,IAKvB,cAAC,EAAM,CAAC4E,eAAgBA,Q,ikBCrJ9B,IAAMiB,EAA4BtL,IAAMC,gBAClCsL,EAAU,SAAH,GAAsB,IAAhBpL,EAAQ,EAARA,SAEXZ,EAAcC,UAAWC,IAAI,UAAUC,MAAQ,IAAO,IAAOF,UAAWC,IAAI,UAAUC,MAGtFJ,EAAe,CACnBC,cACAI,aAJiC,GAAdJ,GAOtB,EAA0Ba,mBAASd,GAAa,WAAzCe,EAAK,KAAEC,EAAQ,KAGtB,SAASC,IACR,IAAMiL,EAAehM,UAAWC,IAAI,UAAUC,MAAQ,IAAO,IAAOF,UAAWC,IAAI,UAAUC,MACjF+L,EAA8B,GAAdlM,EAC5Be,EAAS,OAAKD,GAAK,IAAEd,YAAaiM,EAAc7L,aAAc8L,KAG/DjL,qBAAU,WAET,OADAC,OAAOC,iBAAiB,SAAUH,GAC3B,WACNE,OAAOE,oBAAoB,SAAUJ,MAEpC,IAEH,IAAMK,EAAQC,UAAWC,OAAO,CACzB4K,UAAW,CAETC,WAAY,IACZrK,YAAa,EACbS,YAAa,UAKf6J,OAAQ,CACNhM,OAAQ,OACR+L,WAAY,KAEdE,eAAgB,CACdnM,MAAOW,EAAMd,YAGbyD,YAAa,GAGf+B,MAAO,CAELrF,MAAO,OACPE,OAAQ,OACRsD,WAAY,WAEd4I,WAAY,CACVC,SAAU,WACVC,OAAQ,EACRvK,cAAe,MACf8B,UAAW,UAEb0I,KAAM,CACJtI,MAAO,QACPuI,OAAQ,EACRpJ,SAAUzC,EAAMd,YAAc,IAEhC4M,UAAW,CACTxI,MAAO,QACPuI,OAAQ,EACRpJ,SAAUzC,EAAMd,YAAc,MAKvC,OACC,cAAC+L,EAA0B1G,SAAQ,CAClCC,MAAK,OACDxE,GAAK,IACRO,UACC,SAEDT,KC2GWiM,EArLK,SAAC/G,GACnB,IAAQP,EAAoBI,IAApBJ,gBAENuH,EACEhH,EADFgH,MAGF,ED2EAlH,qBAAWmG,GC3EH1K,EAAK,EAALA,MAAOrB,EAAW,EAAXA,YAET2H,EAAaC,0BAGnB,EAAwC/G,mBAAS,GAAE,WAA5CkM,EAAY,KAAEC,EAAe,KAG9BC,EAAYC,mBAGdC,EAAW,KAkCf,SAASC,IACHL,IAAiBD,EAAMrN,OAAS,EAClCwN,EAAUI,QAAQC,SAAS,CAAEC,EAAG,EAAGC,UAAU,IAG7CP,EAAUI,QAAQC,SAAS,CAAEC,EAAGvN,GAAe+M,EAAe,GAAIS,UAAU,IAoBhF,OAjDAvM,qBAAU,WAMR,OALAkM,EAAWM,WAAWL,EAAa,KAK5B,kBAAMM,aAAaP,OA4C1B,eAACjG,EAAA,QAAI,CAAC7F,MAAOA,EAAM8K,UAAU,UAE3B,cAACwB,EAAA,QAAU,CAACC,IAAKX,EACf5L,MAAOA,EAAMgL,OACbwB,eAAa,EACbC,YAAU,EACVC,gCAAgC,EAChCC,SA/CN,SAAuBC,GAIrB,IAAMC,EAAQC,KAAKC,MAAMH,EAAMI,YAAYC,cAAcf,EAAIvN,GAKzD+M,IAAiBmB,GACnBlB,EAAgBkB,IAsCdK,oBAAqBvO,EACrBwO,kBAAmB,WAvBvBd,aAAaP,IAwBTsB,gBAAiB,WApBrBtB,EAAWM,WAAWN,EAAU,MAqB5BuB,eAAgB,QAAQ,SAEvB5B,EAAMtF,KAAI,SAACmH,GACV,OACE,cAACxI,EAAA,QAAS,CAER9E,MAAOA,EAAMiL,eACblG,QAAS,kBAzBrB,SAAoBuI,GAClBhH,EAAWiB,SAAS,QAAS,CAC3B+F,SAuBuBC,CAAWD,IAAM,SAEhC,cAAC/H,EAAA,QAAK,CACJC,OAAQ,CAAEC,IAAKvB,EAAgBoJ,EAAK5H,YACpC1F,MAAOA,EAAMmE,SANVmJ,EAAKtI,SA0BlB,cAACa,EAAA,QAAI,CACH7F,MAAOA,EAAMkL,WAAW,SAEvBO,EAAMtF,KAAI,SAAChC,EAAOsE,GACjB,OACE,cAACxD,EAAA,QAAI,CAEHjF,MAAOyI,IAAUiD,EAAe1L,EAAMuL,UAAYvL,EAAMqL,KAAK,SAC9D,UAFM5C,YC3HN+E,EAAoBpO,IAAMC,gBA4CxBoO,EA3CI,SAAH,GAAwB,IAAlBnH,EAAU,EAAVA,WACpB,EAGIhC,IAFFtE,EAAK,EAALA,MACAoD,EAAW,EAAXA,YAIF,EAA0B5D,mBAAS,IAAG,WAA/BiM,EAAK,KAAEiC,EAAQ,KAEhBC,EAAQ,sBAAG,YACf,IACQ9F,SAAezE,EADd,eACDyE,KACR6F,EAAS7F,MAEV,kBALa,mCAYd,OAJAjI,qBAAU,WACR+N,MACC,IAGD,cAACH,EAAkBxJ,SAAQ,CACzBC,MAAO,GACL,SAEF,eAACqI,EAAA,QAAU,CAACtM,MAAOA,EAAMG,cAAeyN,8BAA8B,EAAM,UAG1E,cAAC/H,EAAA,QAAI,UACH,cAAC,EAAO,UACN,cAAC,EAAW,CAAC4F,MAAOA,QAKxB,cAAC,EAAU,CAACnF,WAAYA,UChBjBuH,EA3BK,SAAH,GAAe,EAAVvH,WAAwB,IAAZwH,EAAK,EAALA,MAChC,EAAiCxJ,IAA1BtE,EAAK,EAALA,MAAOkE,EAAe,EAAfA,gBAGZoJ,EACEQ,EAAMC,OADRT,KAOF,OACE,eAAChB,EAAA,QAAU,CAACsB,8BAA8B,EAAM,UAC9C,cAAC3I,EAAA,QAAI,UAAEqI,EAAKU,QACZ,cAAC/I,EAAA,QAAI,UAAEqI,EAAKW,cACZ,cAAChJ,EAAA,QAAI,UAAEqI,EAAKY,UACZ,cAACrI,EAAA,QAAI,CAAC7F,MAAOA,EAAMkD,mBAAmB,SAEpC,cAACqC,EAAA,QAAK,CACJvF,MAAOA,EAAMmD,UACbqC,OAAQ,CAACC,IAAKvB,EAAgBoJ,EAAK5H,oB,iBCuH9ByI,EA3IM,SAAC1J,GACpB,MAAoCH,IAA5BtE,EAAK,EAALA,MAAOkE,EAAe,EAAfA,gBAEbqE,EAME9D,EANF8D,UACA6F,EAKE3J,EALF2J,OACAC,EAIE5J,EAJF4J,OAEApF,EAEExE,EAFFwE,YACAqF,EACE7J,EADF6J,eAOF,SAASC,IAEP,IAAIC,EAAiBC,KAAKC,MAAMD,KAAKE,UAAU1F,IAC3C2F,EAAgC,MAAdJ,OAAc,EAAdA,EAAgB1I,QAAO,SAAA+I,GAAO,OAAIA,EAAQC,aAAeV,EAAOU,eAClFC,EAAiC,MAAdP,OAAc,EAAdA,EAAgB1I,QAAO,SAAA+I,GAAO,OAAIA,EAAQC,aAAeV,EAAOU,eACvF,IAGEC,EAAiBC,QACjBD,EAAiBE,KAAKb,GACvB,QAGCE,EAAe,GAAD,WAAKM,GAAe,IAAKG,MA2B3C,OACE,cAAClJ,EAAA,QAAI,CAAC7F,MAAOA,EAAM2B,cAAc,SAC9ByM,EAAOc,aAEN,eAACpK,EAAA,QAAS,CACRC,QAASwJ,EAAc,UAEvB,cAAC1I,EAAA,QAAI,CAAC7F,MAAOA,EAAMmC,mBAAmB,SACpC,cAACoD,EAAA,QAAK,CACJvF,MAAOA,EAAMqC,UACbmD,OArDHtB,EAAgBkK,EAAOe,sBAyDxB,eAACtJ,EAAA,QAAI,WACH,cAACZ,EAAA,QAAI,CAACmD,cAAe,EACnBpI,MAAO,CACLlB,MAAO,OACPoC,UAAW,GACXgB,SAAU,IACV,SAEDkM,EAAOtQ,OAEV,eAAC+H,EAAA,QAAI,CAAC7F,MAAO,CAAEa,cAAe,OAAQ,UACnCwN,EAAOhK,SAAS+J,EAAOpJ,IAEtB,cAACoK,EAAA,QAAS,CAACtR,KAAK,QAAQ+K,KAAM,GAAI9F,MAAM,UAGxC,cAACqM,EAAA,QAAS,CAACtR,KAAK,QAAQ+K,KAAM,GAAI9F,MAAM,UAEzCwF,EAAUC,QAAQxD,IAAMoJ,EAAOpJ,GAE9B,cAACC,EAAA,QAAI,UAAC,aAKN,cAACA,EAAA,QAAI,UACDmJ,EAAO/F,MAAQE,EAAUC,QAAQH,MAAQ,EAAC,KAAO+F,EAAO/F,MAAQE,EAAUC,QAAQH,OAAK,yBAKlE,GAA5BE,EAAUC,QAAQe,QACjB,eAAC1D,EAAA,QAAI,CAAC7F,MAAO,CAAEa,cAAe,OAAS,UACrC,cAACiE,EAAA,QAAS,CACRC,QAvEhB,WAEE,IAAIyJ,EAAiBC,KAAKC,MAAMD,KAAKE,UAAU1F,IAC/C,GAAImF,EAAOpJ,IAAMuD,EAAUC,QAAQxD,IAAMoJ,EAAOU,aAAevG,EAAUC,QAAQsG,YAAa,CAC5F,IAAI9E,EAAkB,MAAdwE,OAAc,EAAdA,EAAgBvE,MAAK,SAAA4E,GAAO,OAAIJ,KAAKE,UAAUE,IAAYJ,KAAKE,UAAUP,MAE9EiB,EAAIb,EAAehQ,QAAQwL,GAC/B,IACEwE,EAAec,OAAOD,EAAG,GACzBb,EAAeS,KAAK1G,EAAUC,SAC/B,QAGC8F,EAAe,IAAIE,OA0Dc,SAEvB,cAACvJ,EAAA,QAAI,UAAC,aAER,cAACA,EAAA,QAAI,CAACjF,MAAO,CAAEQ,WAAY,EAAGC,YAAa,GAAI,UAxDxC,MAAN4N,OAAM,EAANA,EAAQvI,QAAO,SAAA+I,GAAO,OAAIA,GAAWT,EAAOpJ,OAC3C5G,SAwDF,cAAC0G,EAAA,QAAS,CAACC,QAASwJ,EAAc,SAChC,cAACtJ,EAAA,QAAI,UAAC,sBAUhB,eAACH,EAAA,QAAS,CACRC,QAASwJ,EACTvO,MAAO,CAAEa,cAAe,OAAQ,UAE/BwN,EAAOhK,SAAS+J,EAAOpJ,IACtB,cAACoK,EAAA,QAAS,CAACtR,KAAK,QAAQ+K,KAAM,GAAI9F,MAAM,UAExC,cAACqM,EAAA,QAAS,CAACtR,KAAK,QAAQ+K,KAAM,GAAI9F,MAAM,UAG1C,cAACkC,EAAA,QAAI,CAACmD,cAAe,EAAE,SAAEgG,EAAOtQ,aC7F3ByR,EApCO,SAAC9K,GAAW,IAAD,EAE7B8D,EAGE9D,EAHF8D,UACAU,EAEExE,EAFFwE,YACAqF,EACE7J,EADF6J,eAIF,EAA4B9O,mBAAS,IAAG,WAAjC6O,EAAM,KAAEmB,EAAS,KAUxB,OARA5P,qBAAU,WACR,IAAI6P,EAAqB,MAAXxG,OAAW,EAAXA,EAAanD,QAAO,SAAA+I,GAAO,OAAIA,EAAQC,aAAevG,EAAUC,QAAQsG,eAAa3I,KAAI,SAAA0I,GACrG,OAAOA,EAAQ7J,MAEjBwK,EAAUC,KAET,CAACxG,IAGF,cAACpD,EAAA,QAAI,CAAC7F,MAAO,CAAEa,cAAe,MAAOa,SAAU,QAAU,SACrC,OADqC,EACtD6G,EAAUG,cAAO,EAAjB,EAAmBvC,KAAI,SAACiI,GACvB,OACE,cAAC,EAAY,CACX7F,UAAWA,EACX6F,OAAQA,EACRC,OAAQA,EACRmB,UAAWA,EACXvG,YAAaA,EACbqF,eAAgBA,GANCF,EAAOpJ,U,ikBCxBpC,IAAM0K,GAA4BtQ,IAAMC,gBAClCsL,GAAU,SAAH,GAAsB,IAAhBpL,EAAQ,EAARA,SAEZZ,EAAaC,UAAWC,IAAI,UAAUC,MAAQ,IAAO,IAAOF,UAAWC,IAAI,UAAUC,MAGrFJ,EAAe,CACpBC,cACAI,aAJkC,GAAdJ,GAOrB,EAA0Ba,mBAASd,GAAa,WAAzCe,EAAK,KAAEC,EAAQ,KAGtB,SAASC,IACR,IAAMiL,EAAchM,UAAWC,IAAI,UAAUC,MAAQ,IAAO,IAAOF,UAAWC,IAAI,UAAUC,MACtF6Q,EAA8B,GAAdhR,EACtBe,EAAS,OAAKD,GAAK,IAAEd,YAAaiM,EAAc7L,aAAc4Q,KAG/D/P,qBAAU,WAET,OADAC,OAAOC,iBAAiB,SAAUH,GAC3B,WACNE,OAAOE,oBAAoB,SAAUJ,MAEpC,IAEH,IAAMK,EAAQC,UAAWC,OAAO,CAC/B4K,UAAW,CAEVC,WAAY,IACZrK,YAAa,EACbS,YAAa,UAEd6J,OAAQ,CACPhM,OAAQ,OACR+L,WAAY,KAEbE,eAAgB,CACfnM,MAAOW,EAAMd,YAEbyD,YAAa,GAGd+B,MAAO,CAENrF,MAAO,OACPE,OAAQ,OACRsD,WAAY,WAEb4I,WAAY,CACXC,SAAU,WACVC,OAAQ,EACRvK,cAAe,MACf8B,UAAW,UAEZ0I,KAAM,CACLtI,MAAO,QACPuI,OAAQ,EACRpJ,SAAUzC,EAAMd,YAAc,IAE/B4M,UAAW,CACVxI,MAAO,QACPuI,OAAQ,EACRpJ,SAAUzC,EAAMd,YAAc,MAKhC,OACC,cAAC+Q,GAA0B1L,SAAQ,CAClCC,MAAK,OACDxE,GAAK,IACRO,UACC,SAEDT,KCkGWqQ,GA5KK,SAACnL,GACnB,IACEoL,EACEpL,EADFoL,WAGK3L,EAAmBI,IAAnBJ,gBACP,ED2EAK,qBAAWmL,IC3EJ1P,EAAK,EAALA,MAAOrB,EAAW,EAAXA,YAId,EAAwCa,mBAAS,GAAE,WAA5CkM,EAAY,KAAEC,EAAe,KAG9BC,EAAYC,mBAGdC,EAAW,KAkCf,SAASC,IACHL,IAAiBmE,EAAWzR,OAAS,EACvCwN,EAAUI,QAAQC,SAAS,CAAEC,EAAG,EAAGC,UAAU,IAG7CP,EAAUI,QAAQC,SAAS,CAAEC,EAAGvN,GAAe+M,EAAe,GAAIS,UAAU,IAchF,OA3CAvM,qBAAU,WAMR,OALAkM,EAAWM,WAAWL,EAAa,KAK5B,kBAAMM,aAAaP,OAsC1B,eAACjG,EAAA,QAAI,CAAC7F,MAAOA,EAAM8K,UAAU,UAC3B,cAACwB,EAAA,QAAU,CAACC,IAAOX,EACjB5L,MAAOA,EAAMgL,OACbwB,eAAa,EACbC,YAAU,EACVC,gCAAgC,EAChCC,SAxCN,SAAuBC,GAIrB,IAAMC,EAAQC,KAAKC,MAAMH,EAAMI,YAAYC,cAAcf,EAAIvN,GAKzD+M,IAAiBmB,GACnBlB,EAAgBkB,IA+BdK,oBAAqBvO,EACrBwO,kBAAmB,WAlBvBd,aAAaP,IAmBTsB,gBAAiB,WAfrBtB,EAAWM,WAAWN,EAAU,MAgB5BuB,eAAgB,QAAQ,SAEb,MAAVwC,OAAU,EAAVA,EAAY1J,KAAI,SAAChC,EAAOsE,GACvB,OACE,cAAC5C,EAAA,QAAI,CAEH7F,MAAOA,EAAMiL,eAAe,SAE5B,cAAC1F,EAAA,QAAK,CACJC,OAAQ,CAAEC,IAAKvB,EAAgBC,IAC/BnE,MAAOA,EAAMmE,SALTsE,QAyBd,cAAC5C,EAAA,QAAI,CACH7F,MAAOA,EAAMkL,WAAW,SAEb,MAAV2E,OAAU,EAAVA,EAAY1J,KAAI,SAAChC,EAAOsE,GACvB,OACE,cAACxD,EAAA,QAAI,CAEHjF,MAAOyI,IAAUiD,EAAe1L,EAAMuL,UAAYvL,EAAMqL,KAAK,SAC9D,UAFM5C,YC3GNqH,GAAsB1Q,IAAMC,gBA2Q1B0Q,GA1QM,SAAH,GAA6B,IAAD,MAAvBzJ,EAAU,EAAVA,WAAYwH,EAAK,EAALA,MAClC,EAA+BxJ,IAAxBtE,EAAK,EAALA,MAAOkE,EAAe,EAAfA,gBAEd,EAII4J,EAAMC,OAHTvH,EAAM,EAANA,OACAH,EAAY,EAAZA,aACAK,EAAS,EAATA,UAID,EAAoClH,mBAAS,IAAG,WAAzCqQ,EAAU,KAAEG,EAAa,KAGhC,EAAoCxQ,mBAAS,GAAE,WAAxCyQ,EAAU,KAAEC,EAAa,KAEhC,EAAsC1Q,mBAAS,IAAG,WAA3CyJ,EAAW,KAAEqF,EAAc,KAElC,EAA0B9O,mBAAS,GAAE,WAA9B6I,EAAK,KAAE8H,EAAQ,KA8EtB,OAzEAvQ,qBAAU,WAGT,IAAIwQ,EAAW5J,EAAOL,KAAI,SAAChC,GAAK,OAAKD,EAAgBC,EAAMuB,cAC3DsK,EAAcI,KAEZ,CAAC5J,IAGJ5G,qBAAU,WAAK,IAAD,EAETsJ,EAAwC,OAAvB,EAAGxC,EAAU4B,iBAAU,EAApB,EAAsBnC,KAAI,SAACoC,GACnD,OAAOA,EAAUC,WAGbW,EAAoBzC,EAAUiC,YAGlC,IACA,IAAItK,EAAqB,MAAjB6K,OAAiB,EAAjBA,EAAmBe,MAAK,SAAA4E,GAAO,OAAIA,EAAQtF,OAAS,KAC5D,QAAUrB,IAAN7J,EACH,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAEkL,OAAS,EAAIpL,GAAK,EACxC+K,EAAkB+F,KAAK5Q,GAGvB,QAGDiQ,EAAe,GAAD,WAAKpF,EAAkBmH,QAAM,IAAKlH,QAG9C,CAACzC,IAGJ9G,qBAAU,WACT,IAAI0Q,EAAoB,MAAZjK,OAAY,EAAZA,EAAcgC,MAC1B,IACW,MAAXY,KAAa9C,KAAI,SAAA0I,GAEZ0B,OAAOC,KAAK3B,GAASxK,SAAS,SAClCiM,GAASzB,EAAQ4B,QAGjB,QAEDN,EAASG,MAEP,CAACrH,EAAa5C,IA2BhB,cAACyJ,GAAoB9L,SAAQ,CAC5BC,MAAO,CAACqK,iBAAgBrF,eAAa,SAGrC,eAACqD,EAAA,QAAU,CAACtM,MAAOA,EAAMG,cAAeyN,8BAA8B,EAAM,UAG3E,eAAC/H,EAAA,QAAI,CAAC7F,MAAOA,EAAMiQ,WAAW,UAC7B,cAAC,GAAO,UACP,cAAC,GAAW,CAACJ,WAAYA,MAI1B,eAAChK,EAAA,QAAI,WACJ,eAACZ,EAAA,QAAI,CAACjF,MAAOA,EAAM6C,WAAW,UAAEoN,EAAW,KAAG5J,EAAavI,KAAKsH,iBAGhE,cAACS,EAAA,QAAI,UACJoD,EAAY9C,KAAI,SAAC0I,EAASpG,GAC1B,OACA,eAAC5C,EAAA,QAAI,CACJ7F,MAAO,CACNa,cAAc,OACb,UAEF,eAACoE,EAAA,QAAI,CAACjF,MAAO,CAAC4B,SAAS,GAAG,UAAC,SAAEiN,EAAQ/Q,QACrC,eAACmH,EAAA,QAAI,WAAC,IAAE4J,EAAQ4B,KAAK,EAAE,eANbhI,QAaZ,eAAC5C,EAAA,QAAI,CAAC7F,MAAO,CAACa,cAAc,OAAO,UAClC,eAACgF,EAAA,QAAI,CAAC7F,MAAO,CACZa,cAAc,MACde,SAAU,GACT,UACD,cAACkD,EAAA,QAAS,CAACC,QA/DlB,WACKkL,EAAa,GACjBC,EAAcD,EAAW,IA6DgB,SAClC,cAAChL,EAAA,QAAI,CAACjF,MAAO,CACX8I,UAAW,cACX,SAAC,aAEJ,cAAC4H,EAAA,QAAS,CAACzM,MAAOgM,EAAYU,aAAcT,EAC3ClQ,MAAO,CACLlB,MAAM,GACNoD,SAAU,GACV9B,YAAa,EACbC,aAAc,KAGjB,cAACyE,EAAA,QAAS,CAACC,QAvElB,WAAsBmL,EAAcD,EAAW,IAuEV,SAC7B,cAAChL,EAAA,QAAI,CAACjF,MAAO,CACX8I,UAAW,cACV,SAAC,gBAIN,cAAC7D,EAAA,QAAI,CAACjF,MAAO,CACZkC,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,IACZL,UAAW,UACV,SAAEsN,EAAa5H,UAKnB,eAACxC,EAAA,QAAI,WACJ,eAACA,EAAA,QAAI,CAAC7F,MAAO,CAACa,cAAc,MAAMP,WAAY,IAAK,UAClD,cAAC2E,EAAA,QAAI,CACJjF,MAAO,CACN4B,SAAS,EACTM,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,KACX,SACF,gBAGD,cAACiC,EAAA,QAAI,CAACjF,MAAO,CACXkC,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,IACZD,MAAO,OACP,SAAEkN,EAAa5H,OAGlB,eAACxC,EAAA,QAAI,WACJ,cAACf,EAAA,QAAS,CAAC9E,MAAOA,EAAM0C,UACvBqC,QA/GP,WACCuB,EAAWwK,SACXxK,EAAWiB,SAAS,OAAQ,CAC3B6B,KAAM,CACLpE,GAAIqE,KAAKC,MAGTjD,aAAcA,EACd4C,YAAaA,EACbvC,UAAWA,EACXF,OAAQA,EACR6B,MAAOA,EACPkB,OAAQ0G,MAmGe,SAEnB,cAAChL,EAAA,QAAI,CAACjF,MAAO,CAAC+C,MAAM,QAASiG,UAAU,SAAU5H,aAAa,GAAG,SAAC,kBAKnE,cAAC0D,EAAA,QAAS,CAAC9E,MAAOA,EAAM0C,UACvBqC,QAAS,WACRuB,EAAWwK,UACV,SAEF,cAAC7L,EAAA,QAAI,CAACjF,MAAO,CAAC+C,MAAM,QAASiG,UAAU,SAAU5H,aAAa,GAAG,SAAC,4BAQtE,cAACyE,EAAA,QAAI,UACJ,eAACA,EAAA,QAAI,WACJ,cAACZ,EAAA,QAAI,UAAEoB,EAAavI,OAGC,OAHW,EAG/B4I,EAAU4B,iBAAU,EAApB,EAAsBnC,KAAI,SAACoC,EAAWE,GACtC,GAA0C,gCAAtCF,EAAUC,QAAQhB,gBACrB,OACC,eAAC3B,EAAA,QAAI,WACJ,cAACZ,EAAA,QAAI,UAAC,8BACN,cAAC,EAAa,CAACsD,UAAWA,EACzBU,YAAaA,EACbqF,eAAgBA,MAJP7F,MAYQ,OAHpB,EAGD/B,EAAUiC,kBAAW,EAArB,EAAuBxC,KAAI,SAAAyC,GAC3B,OACC,eAAC/C,EAAA,QAAI,CACJ7F,MAAO,CACNa,cAAc,OACb,UAEF,cAACuO,EAAA,QAAS,CAACtR,KAAK,QAAQ+K,KAAM,GAAI9F,MAAM,UACxC,cAACkC,EAAA,QAAI,UAAE2D,EAAW9K,SANR8K,EAAW5D,OAYxB,eAACa,EAAA,QAAI,WACJ,cAACZ,EAAA,QAAI,UAAC,4BACe,OADe,EACnCyB,EAAU4B,iBAAU,EAApB,EAAsBnC,KAAI,SAACoC,EAAWE,GACtC,GAA0C,gCAAtCF,EAAUC,QAAQhB,gBACrB,OACC,cAAC,EAAa,CAAae,UAAWA,EACrCU,YAAaA,EACbqF,eAAgBA,GAFG7F,oBC7PjBqH,GAAsB1Q,IAAMC,gBAkQ1B0R,GAjQO,SAAH,GAA6B,IAsEzC,MAtEiBzK,EAAU,EAAVA,WAAYwH,EAAK,EAALA,MAClC,EAAiCxJ,IAA1BtE,EAAK,EAALA,MAAOkE,EAAe,EAAfA,gBAGZ8M,EACElD,EAAMC,OADRiD,MAIF,EAAoCxR,mBAAS,IAAG,WAAzCqQ,EAAU,KAAEG,EAAa,KAGhC,EAAsCxQ,mBAAS,GAAE,WAA1CyR,EAAW,KAAEC,EAAc,KAElC,EAAsC1R,mBAAS,IAAG,WAA3CyJ,EAAW,KAAEqF,EAAc,KAElC,EAA0B9O,mBAAS,GAAE,WAA9B6I,EAAK,KAAE8H,EAAQ,KAgDtB,OA7BAvQ,qBAAU,WAGRyK,QAAQC,IAAI0G,EAAMxK,QAClB,IAAI4J,EAAWY,EAAMxK,OAAOL,KAAI,SAAChC,GAAK,OAAKD,EAAgBC,EAAMuB,cACjEsK,EAAcI,GACd/F,QAAQC,IAAI,cAAe0G,EAAMtK,UAAUiC,aAE3C2F,EAAe0C,EAAM/H,aACrBkH,EAASa,EAAM3I,OACf6I,EAAeF,EAAMzH,UACpB,CAACyH,IAGJpR,qBAAU,WACR,IAAI0Q,EAAa,MAALU,OAAK,EAALA,EAAO3K,aAAagC,MAChC,IACa,MAAXY,KAAa9C,KAAI,SAAA0I,GAEX0B,OAAOC,KAAK3B,GAASxK,SAAS,SAChCiM,GAASzB,EAAQ4B,QAGtB,QAECN,EAASG,MAEV,CAACrH,EAAa+H,IAEJ,MAATA,EAEA,cAACnL,EAAA,QAAI,UACH,cAACZ,EAAA,QAAI,UAAC,iBAMR,eAAC,GAAoBjB,SAAQ,CAC3BC,MAAO,CAACqK,iBAAgBrF,eAAa,UAEpCoB,QAAQC,IAAI,cAAerB,GAC5B,eAACqD,EAAA,QAAU,CAACtM,MAAOA,EAAMG,cAAeyN,8BAA8B,EAAM,UAG1E,eAAC/H,EAAA,QAAI,CAAC7F,MAAOA,EAAMiR,YAAY,UAC7B,cAAC,GAAO,UACN,cAAC,GAAW,CAACpB,WAAYA,MAI3B,eAAChK,EAAA,QAAI,WACH,eAACZ,EAAA,QAAI,CAACjF,MAAOA,EAAM6C,WAAW,UAAEoO,EAAY,KAAGD,EAAM3K,aAAavI,KAAKsH,iBAGvE,cAACS,EAAA,QAAI,UACFoD,EAAY9C,KAAI,SAAC0I,EAASpG,GACzB,OACE,eAAC5C,EAAA,QAAI,CAAa7F,MAAO,CACvBa,cAAc,OACd,UACA,eAACoE,EAAA,QAAI,CAACjF,MAAO,CAAC4B,SAAS,GAAG,UAAC,SAAEiN,EAAQ/Q,QACrC,eAACmH,EAAA,QAAI,WAAC,IAAE4J,EAAQ4B,KAAK,OAJZhI,QAWjB,eAAC5C,EAAA,QAAI,CAAC7F,MAAO,CAACa,cAAc,OAAO,UACjC,eAACgF,EAAA,QAAI,CAAC7F,MAAO,CACXa,cAAc,MACde,SAAU,GACV,UACA,cAACkD,EAAA,QAAS,CACRC,QAAS,WACHkM,EAAc,GAClBC,EAAeD,EAAY,IAC1B,SAEH,cAAChM,EAAA,QAAI,CAACjF,MAAO,CACtB8I,UAAW,cACX,SAAC,aAEM,cAAC4H,EAAA,QAAS,CAACzM,MAAOgN,EAAaN,aAAcO,EAAgBlR,MAAO,CAC3ElB,MAAM,GACNoD,SAAU,GACV9B,YAAa,EACbC,aAAc,KAEP,cAACyE,EAAA,QAAS,CAACC,QAAS,WAAKmM,EAAeD,EAAY,IAAI,SACtD,cAAChM,EAAA,QAAI,CAACjF,MAAO,CACtB8I,UAAW,cACV,SAAC,gBAIG,cAAC7D,EAAA,QAAI,CAACjF,MAAO,CACXkC,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,IACZL,UAAW,UACX,SAAEsO,EAAc5I,UAKtB,eAACxC,EAAA,QAAI,WACH,eAACA,EAAA,QAAI,CAAC7F,MAAO,CAACa,cAAc,MAAMP,WAAY,IAAK,UACjD,cAAC2E,EAAA,QAAI,CAACjF,MAAO,CACpB4B,SAAS,EACTM,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,KACX,SAAC,gBACK,cAACiC,EAAA,QAAI,CAACjF,MAAO,CACTkC,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,IACZD,MAAO,OACT,SAAEkO,EAAc5I,OAGpB,eAACxC,EAAA,QAAI,WACH,eAACA,EAAA,QAAI,WAEH,cAACf,EAAA,QAAS,CAAC9E,MAAOA,EAAM0C,UACtBqC,QAnJlB,WACEuB,EAAWwK,SACXxK,EAAWiB,SAAS,OAAQ,CAC1B6B,KAAM,CACJpE,GAAIgM,EAAMhM,GAGVqB,aAAc2K,EAAM3K,aACpB4C,YAAaA,EACbvC,UAAWsK,EAAMtK,UACjBF,OAAQwK,EAAMxK,OACd6B,MAAOA,EACPkB,OAAQ0H,MAuIwB,SACpB,cAAChM,EAAA,QAAI,CAACjF,MAAO,CAAC+C,MAAM,QAASiG,UAAU,UAAU,SAAC,kBAIpD,cAAClE,EAAA,QAAS,CAAC9E,MAAOA,EAAM0C,UACtBqC,QAAS,WACPuB,EAAWiB,SAAS,SACpB,SACF,cAACtC,EAAA,QAAI,CAACjF,MAAO,CAAC+C,MAAM,QAASiG,UAAU,UAAU,SAAC,wBAMtD,cAAClE,EAAA,QAAS,CAAC9E,MAAOA,EAAM0C,UACtBqC,QAAS,WACPuB,EAAWwK,UACX,SACF,cAAC7L,EAAA,QAAI,CAACjF,MAAO,CAAC+C,MAAM,QAASiG,UAAU,UAAU,SAAC,4BAM1D,eAACnD,EAAA,QAAI,WACH,eAACA,EAAA,QAAI,WACH,cAACZ,EAAA,QAAI,UAAE+L,EAAM3K,aAAavI,OAGC,OAHW,EAGrCkT,EAAMtK,UAAU4B,iBAAU,EAA1B,EAA4BnC,KAAI,SAACoC,EAAWE,GAE3C,GAA0C,gCAAtCF,EAAUC,QAAQhB,gBAEpB,OACE,eAAC3B,EAAA,QAAI,WACH,cAACZ,EAAA,QAAI,UAAC,8BACN,cAAC,EAAa,CAACsD,UAAWA,EACxBU,YAAaA,EACbqF,eAAgBA,MAJT7F,MAWW,OAH1B,EAGDuI,EAAMtK,UAAUiC,kBAAW,EAA3B,EAA6BxC,KAAI,SAACyC,EAAYH,GAO3C,OACE,eAAC5C,EAAA,QAAI,WACH,cAACuJ,EAAA,QAAS,CAACtR,KAAK,QAAQ+K,KAAM,GAAI9F,MAAM,UACxC,cAACkC,EAAA,QAAI,UAAE2D,EAAW9K,SAFT8K,EAAW5D,OAS5B,eAACa,EAAA,QAAI,WACH,cAACZ,EAAA,QAAI,UAAC,4BAEqB,OAFS,EAEnC+L,EAAMtK,UAAU4B,iBAAU,EAA1B,EAA4BnC,KAAI,SAACoC,EAAWE,GAE3C,GAA0C,gCAAtCF,EAAUC,QAAQhB,gBAEpB,OACE,cAAC,EAAa,CAAae,UAAWA,EACpCU,YAAaA,EACbqF,eAAgBA,GAFE7F,YAS9B,cAAC5C,EAAA,QAAI,c,UChPXsL,GAAQC,qBAiBCC,OAff,WAEE,OAEI,eAACF,GAAMG,UAAS,WACd,cAACH,GAAMI,OAAM,CAACzT,KAAK,OAAO0T,UAAW/D,IACrC,cAAC0D,GAAMI,OAAM,CAACzT,KAAK,QAAQ0T,UAAW3D,IAEtC,cAACsD,GAAMI,OAAM,CAACzT,KAAK,SAAS0T,UAAWzB,KACvC,cAACoB,GAAMI,OAAM,CAACzT,KAAK,WAAW0T,UAAWT,S,UCkNlCU,IAtOkBrS,IAAMC,gBAEhB,SAACoF,GACtB,MAIIH,IAHFtE,EAAK,EAALA,MAEAoD,GADO,EAAPlE,QACW,EAAXkE,aAIAsO,EAQEjN,EARFiN,aACAC,EAOElN,EAPFkN,gBACArL,EAME7B,EANF6B,WAEAsL,EAIEnN,EAJFmN,KACAC,EAGEpN,EAHFoN,QAKF,EAAuCC,mBAAW,CAAC,QAAO,WAAnDlU,EAAK,KAAEmU,EAAQ,KAAEC,EAAW,KAEnC,EAAgCxS,mBAAS,IAAG,WAArCyS,EAAQ,KAAEC,EAAW,KAC5B,EAAgC1S,mBAAS,IAAG,WAArC2S,EAAQ,KAAEC,EAAW,KAG5B,EAAwC5S,oBAAS,GAAM,WAAhD6S,EAAY,KAAEC,EAAe,KAEpC1S,qBAAU,cAGP,CAAChC,IAGJ,IAAM2U,EAAQ,SAACC,GAEbA,EAAEC,iBAKFrP,EAAYsP,KADH,QACa,CAAET,WAAUE,aAC/BxK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAACgL,GAELZ,EAAS,MAAOY,EAAS/U,OACzBmU,EAAS,WAAYE,GAGrBN,GAAgB,GAChBA,GAAgB,GAGhBvO,EAAY,gBAAiB,CACzBO,QAAS,CACPiP,cAAc,SAAUD,EAAS/U,SAItC+J,MAAK,SAAAC,GAAQ,OAAEA,EAASC,QACxBF,MAAK,SAACE,GACLgK,EAAQhK,GAEH0I,OAAOC,KAAK3I,GAAMxD,SAAS,WAC9BsN,GAAgB,UAc1B,IAAMkB,EAAQ,sBAAG,UAAOjG,GACtBA,EAAM6F,uBAIArP,EAAYsP,KADT,YAGP,CAAET,WAAUE,aAGd/F,YAAW,WACTmG,EAAM3F,KACL,QAEJ,gBAda,sCAgBd,SAASkG,IACPR,GAAiBD,GAKnB,OAAIX,EAEA,cAACpF,EAAA,QAAU,CAACtM,MAAOA,EAAMG,cAAeyN,8BAA8B,EAAM,SAE1E,eAAC/H,EAAA,QAAI,WAEH,cAAC6K,EAAA,QAAS,CAACqC,YAAY,WAAW9O,MAAOgO,EAAUtB,aAAcuB,EAC/DlS,MAAO,CACLlB,MAAOH,GACPgC,UAAW,GACXkB,aAAc,EACdmR,gBAAiB,aAIrB,cAACtC,EAAA,QAAS,CAACuC,iBAAiB,EAAMF,YAAY,WAAW9O,MAAOkO,EAAUxB,aAAcyB,EACtFpS,MAAO,CACLlB,MAAOH,GACPgC,UAAW,GACXkB,aAAc,EACdmR,gBAAiB,aAKpBX,EAEC,cAACvN,EAAA,QAAS,CAACC,QAAS8N,EAClB7S,MAAO,CACLlB,MAAO,MACPkU,gBAAiB,aACjBhQ,WAAY,OACZkQ,cAAe,YACflK,UAAW,SACXmK,cAAe,GACf7S,WAAY,GACZc,aAAc,GACd,SAEF,cAAC6D,EAAA,QAAI,CAACjF,MAAO,CACXkC,SAAU,GACVc,WAAY,KACZ,SAAC,eAIL,cAAC8B,EAAA,QAAS,CAACC,QAASwN,EAClBvS,MAAO,CACLlB,MAAO,MACPkU,gBAAiB,aACjBhQ,WAAY,OACZkQ,cAAe,YACflK,UAAW,SACXmK,cAAe,GACf7S,WAAY,GACZc,aAAc,GACd,SAEF,cAAC6D,EAAA,QAAI,CAACjF,MAAO,CACXkC,SAAU,GACVc,WAAY,KACZ,SAAC,YAINqP,EAEC,cAACvN,EAAA,QAAS,CAACC,QAAS+N,EAAc9S,MAAO,CAAEM,WAAY,IAAK,SAC1D,cAAC2E,EAAA,QAAI,CAACjF,MAAO,CACXkC,SAAU,GACVc,WAAY,KACZ,SAAC,uCAIL,cAAC8B,EAAA,QAAS,CAACC,QAAS+N,EAAc9S,MAAO,CAAEM,WAAY,IAAK,SACxD,eAAC2E,EAAA,QAAI,CAACjF,MAAO,CACXkC,SAAU,GACVc,WAAY,KACZ,UAAC,0BAAuB,cAACiC,EAAA,QAAI,CAACjF,MAAO,CAAC+C,MAAM,QAAQ,SAAC,sBAWjE,eAACuJ,EAAA,QAAU,CAACtM,MAAOA,EAAMG,cAAeyN,8BAA8B,EAAM,UAC1E,eAAC/H,EAAA,QAAI,WACH,cAACZ,EAAA,QAAI,UAAC,cACN,cAACA,EAAA,QAAI,UAAE2M,EAAKK,cAGd,eAACpM,EAAA,QAAI,WACH,cAACZ,EAAA,QAAI,UAAC,WACN,cAACA,EAAA,QAAI,UAAE2M,EAAKwB,WAGd,cAACtO,EAAA,QAAS,CAACC,QAAS,WAClBuB,EAAWiB,SAAS,SACpB,SACA,cAACtC,EAAA,QAAI,UAAC,0BAER,cAACH,EAAA,QAAS,CAACC,QAvIjB,WACEiN,EAAY,OACZA,EAAY,YACZL,GAAgB,IAqIV3R,MAAO,CACLlB,MAAO,MACPkU,gBAAiB,aACjBhQ,WAAY,OACZkQ,cAAe,YACflK,UAAW,SACXmK,cAAe,GACf7S,WAAY,GACZc,aAAc,EACdb,UAAW,GACX,SAEF,cAAC0E,EAAA,QAAI,CAACjF,MAAO,CACXkC,SAAU,GACVc,WAAY,KACZ,SAAC,kBAUPrE,GAAcC,UAAWC,IAAI,UAAUC,M,IACxBF,UAAWC,IAAI,UAAUG,OAE/BiB,UAAWC,OAAO,CAC/BmT,aAAc,GAEdC,UAAW,CAETN,gBAAiB,QACjB5R,aAAc,GAEdpC,OAAQ,OACRgC,WAAY,SACZuS,YAAa,OACbC,aAAc,CACZ1U,MAAO,EACPE,OAAQ,IAEVyU,cAAe,IACfC,aAAc,EACdC,UAAW,GAEbC,OAAQ,CACN9U,MAAO,MACPsC,aAAc,EACdyS,QAAS,GACTF,UAAW,GAEbG,WAAY,CACVd,gBAAiB,WAEnBe,YAAa,CACXf,gBAAiB,WAEnBgB,UAAW,CACTjR,MAAO,QACPC,WAAY,OACZgG,UAAW,UAEbiL,UAAW,CACTpT,cAAe,MACfG,WAAY,SACZa,aAAc,GACdqS,kBAAmB,OACnBC,kBAAmB,EACnBrV,MAAO,OACPwB,WAAY,GACZF,YAAa,EACbC,aAAc,GAEhB+T,eAAgB,CACdpR,WAAY,OACZd,SAAU,GACVN,SAAU,EACVoH,UAAW,QAEbqL,kBAAmB,CACjBtR,MAAO,QACPC,WAAY,OACZd,SAAU,M,iBC7ICoS,GAtJG,SAAC7P,GACjB,IAuDK,IAvDL,EAIIA,EAHFuM,aAAK,MAAG,GAAE,IAGRvM,EAFF8P,cAAM,MAAG,GAAE,EACXC,EACE/P,EADF+P,UAGIlO,EAAaC,0BAGnB,EAAsC/G,mBAAS,GAAE,WAA1CyR,EAAW,KAAEC,EAAc,KAElC,EAA0B1R,mBAAS,GAAE,WAA9B6I,EAAK,KAAE8H,EAAQ,KAqCtB,OAnCAvQ,qBAAU,WACRsR,EAAeF,EAAMzH,QACrB4G,EAASa,EAAM3I,SACd,CAAC2I,IAEJpR,qBAAU,WACR,GAAIqR,GAAeD,EAAMzH,OAAQ,CAC/ByH,EAAMzH,OAAS0H,EAEf,IAAIjH,EAAIuK,EAAOtK,MAAK,SAAA4E,GAAO,OAAIA,EAAQ7J,IAAMgM,EAAMhM,MAC/CyD,EAAQ8L,EAAO/V,QAAQwL,GACvByK,EAAahG,KAAKC,MAAMD,KAAKE,UAAU4F,IAC3C,IAEIE,EAAWnF,OAAO7G,EAAO,EAAGuI,GAE7B,QAEDwD,EAAUC,OAIb,CAACxD,IAa6B,GAA7BV,OAAOC,KAAKQ,GAAO5S,OAEnB,cAACyH,EAAA,QAAI,UACH,cAACZ,EAAA,QAAI,UAAC,6BAMR,eAACY,EAAA,QAAI,CAAC7F,MAAO,CACXU,YAAa,EACbS,YAAa,OACb,UACA,eAAC0E,EAAA,QAAI,CAAC7F,MAAO,CACXa,cAAc,OACd,UACA,cAACoE,EAAA,QAAI,CAACjF,MAAO,CACX4B,SAAU,EAEVoB,WAAY,IACZ4N,WAAY,qBACZsC,cAAe,YACfrR,aAAc,OACdK,SAAU,IACV,SAAO,MAAL8O,GAAmB,OAAd,EAALA,EAAO3K,mBAAF,EAAL,EAAqBvI,KAAKsH,gBAC9B,eAACS,EAAA,QAAI,CAAC7F,MAAO,CACXa,cAAe,OACf,UAEA,cAACiE,EAAA,QAAS,CACRC,QAzCZ,WACEuB,EAAWiB,SAAS,WAAY,CAC9ByJ,WAuC2B,SAEnB,cAAC0D,GAAA,QAAa,CAAC5W,KAAK,OAAO+K,KAAM,GAAI9F,MAAM,YAI7C,cAAC+B,EAAA,QAAS,CACRC,QA1CZ,WACA,IAAI4P,EAAYJ,EAAOzO,QAAO,SAAA+I,GAAO,OAAIA,EAAQ7J,IAAMgM,EAAMhM,MAC7DwP,EAAUG,IAwCoB,SAElB,cAACD,GAAA,QAAa,CAAC5W,KAAK,mBAAmB+K,KAAM,GAAI9F,MAAM,kBAM7D,cAAC8C,EAAA,QAAI,UACe,OADf,EACFmL,EAAM/H,kBAAW,EAAjB,EAAmB9C,KAAI,SAACyO,EAAMnM,GAC7B,OACE,eAACxD,EAAA,QAAI,WAAa,SAAE2P,EAAK9W,OAAd2K,QAKjB,eAAC5C,EAAA,QAAI,CAAC7F,MAAO,CACTa,cAAc,OACd,UACF,eAACgF,EAAA,QAAI,CAAC7F,MAAO,CACXa,cAAc,MACde,SAAU,GACV,UACA,cAACkD,EAAA,QAAS,CACRC,QAAS,WACHkM,EAAc,GAClBC,EAAeD,EAAY,IAC1B,SAEH,cAAChM,EAAA,QAAI,CAACjF,MAAO,CACX8I,UAAW,cACX,SAAC,aAGL,cAAC4H,EAAA,QAAS,CAAC1Q,MAAO,CACdlB,MAAM,GACNoD,SAAU,GACV9B,YAAa,EACbC,aAAc,GAEhB4D,MAAOgN,EAAaN,aAAcO,IAEpC,cAACpM,EAAA,QAAS,CAACC,QAAS,WAClBmM,EAAeD,EAAc,IAC7B,SACA,cAAChM,EAAA,QAAI,CAACjF,MAAO,CACX8I,UAAW,cACX,SAAC,gBAIP,cAAC7D,EAAA,QAAI,CAACjF,MAAO,CACXkC,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,IACZL,UAAW,UACX,SAAEsO,EAAc5I,WCsEtB1J,GAAcC,UAAWC,IAAI,UAAUC,MACvCC,GAAeH,UAAWC,IAAI,UAAUG,OAExC6V,GAAS5U,UAAWC,OAAO,CAC/BmT,aAAc,GAEdC,UAAW,CACTlT,YAAazB,GAAY,KAAMA,GAAY,KAAM,EAAE,EACnD0B,aAAc1B,GAAY,KAAMA,GAAY,KAAM,EAAE,EACpDK,OAAQD,GACRD,MAAO,OACPkU,gBAAiB,QACjB5R,aAAc,GACdP,cAAe,SACfG,WAAY,SACZuS,YAAa,OACbC,aAAc,CACZ1U,MAAO,EACPE,OAAQ,IAEVyU,cAAe,IACfC,aAAc,EACdC,UAAW,GAEbC,OAAQ,CACN9U,MAAO,MACPsC,aAAc,EACdyS,QAAS,GACTF,UAAW,GAEbG,WAAY,CACVd,gBAAiB,WAEnBe,YAAa,CACXf,gBAAiB,WAEnBgB,UAAW,CACTjR,MAAO,QACPC,WAAY,OACZgG,UAAW,UAEbiL,UAAW,CACTpT,cAAe,MACfG,WAAY,SACZa,aAAc,GACdqS,kBAAmB,OACnBC,kBAAmB,EACnBrV,MAAO,OACPwB,WAAY,GACZF,YAAa,EACbC,aAAc,GAEhB+T,eAAgB,CACdpR,WAAY,OACZd,SAAU,GACVN,SAAU,EACVoH,UAAW,QAEbqL,kBAAmB,CACjBtR,MAAO,QACPC,WAAY,OACZd,SAAU,MAIC4S,GAxRM,SAACrQ,GACpB,IACEsQ,EAGEtQ,EAHFsQ,YACAC,EAEEvQ,EAFFuQ,eAIF,EAAsC1Q,IAA9BtE,EAAK,EAALA,MAAOoD,EAAW,EAAXA,YAAaxF,EAAK,EAALA,MAM5B,EAAkC4B,mBAAS,IAAG,WAAvCyV,EAAS,KAAEC,EAAY,KA0B7B,SAASC,EAASZ,GACf,IAAIY,EAAW,EACf,IACQ,MAANZ,KAAQpO,KAAI,SAAA6K,GACV,OAAOmE,GAAYnE,EAAM3I,MAAQ2I,EAAMzH,UAEzC,QAEA,OAAO4L,GAIb,OAtBAvV,qBAAU,WAGJmV,GAfJ3R,EADS,SACQ,CAClBO,QAAS,CACRiP,cAAc,SAAUhV,KAGvB+J,MAAK,SAAAC,GAAQ,OAAEA,EAASC,QACxBF,MAAK,SAACE,GACLqN,EAAarN,QAWd,CAACkN,IAgBoB,GAApBE,EAAU7W,OAEV,cAACgX,GAAA,QAAK,CACJC,cAAc,QACdC,aAAa,EACbC,QAASR,EACTS,eAAgB,WACdR,GAAgBD,IAChB,SAEF,cAAClP,EAAA,QAAI,UACH,eAACyG,EAAA,QAAU,CAACsB,8BAA8B,EACxC5N,MAAOA,EAAMG,cAAc,UAE3B,cAAC8E,EAAA,QAAI,UAAC,kCAEN,cAACH,EAAA,QAAS,CAACC,QAAS,WAChBiQ,GAAgBD,IAElB/U,MAAO,CACLlB,MAAOH,GAAY,EACnBqU,gBAAiB,QACjBjQ,MAAO,gCACPC,WAAY,OACZkQ,cAAc,YACdlK,UAAU,SACVmK,cAAe,GACf7S,WAAY,GACZc,aAAc,EACdb,UAAW,IACX,SAEF,cAAC0E,EAAA,QAAI,UAAC,yBAYd,cAACmQ,GAAA,QAAK,CACJC,cAAc,QACdC,aAAa,EACbC,QAASR,EACTS,eAAgB,WACdR,GAAgBD,IAChB,SAEF,eAAClP,EAAA,QAAI,CAAC7F,MAAO6U,GAAOvB,UAAU,UAE5B,cAAChH,EAAA,QAAU,CAACsB,8BAA8B,EACxC5N,MAAO,CAACA,EAAMG,cAAe,CAACyB,SAAS,IAAI,SAEjC,MAATqT,OAAS,EAATA,EAAW9O,KAAI,SAAC0I,EAASpG,GACxB,OACE,eAAC5C,EAAA,QAAI,CACH7F,MAAO,CACLmB,YAAa,MACbgT,kBAAmB,EACnBtS,aAAc,GACdsR,cAAc,IACd,UAEF,cAACtN,EAAA,QAAI,UACFgJ,EAAQ0F,OAAOpO,KAAI,SAAA6K,GAAU,IAAD,IAC3B,OACE,eAACnL,EAAA,QAAI,CACH7F,MAAO,CAGLmT,cAAe,GACf,UAEF,cAAClO,EAAA,QAAI,CAACjF,MAAO,CACX4B,SAAU,EAEVoB,WAAY,IACZ4N,WAAY,qBACZsC,cAAe,YACfhR,SAAU,GACVL,aAAc,IACd,SACM,MAALmP,GAAmB,OAAd,EAALA,EAAO3K,mBAAF,EAAL,EAAqBvI,KAAKsH,gBAG7B,cAACS,EAAA,QAAI,UACe,OADf,EACFmL,EAAM/H,kBAAW,EAAjB,EAAmB9C,KAAI,SAACyO,EAAMnM,GAC7B,OACE,eAACxD,EAAA,QAAI,WAAa,SAAE2P,EAAK9W,OAAd2K,QAKjB,eAAC5C,EAAA,QAAI,CAAC7F,MAAO,CAACa,cAAc,OAAO,UACjC,eAACoE,EAAA,QAAI,CAACjF,MAAO,CAAC4B,SAAS,GAAG,UAAEiN,EAAQ0F,OAAOnW,OAAO,YAClD,cAAC6G,EAAA,QAAI,UAAE+L,EAAMzH,OAASyH,EAAM3I,aA7BrB2I,EAAMhM,SAoCvB,eAACa,EAAA,QAAI,CAAC7F,MAAO,CAACa,cAAe,MAAOP,WAAW,IAAI,UACjD,cAAC2E,EAAA,QAAI,CAACjF,MAAO,CACX4B,SAAU,EACVM,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,KACZ,SAAC,aAIH,cAACiC,EAAA,QAAI,CAACjF,MAAO,CACXkC,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,IACZD,MAAO,OACP,SACCoS,EAAStG,EAAQ0F,eAjEb9L,QA0EjB,cAAC3D,EAAA,QAAS,CACRC,QAAS,WACPiQ,GAAgBD,IAElB/U,MAAO,CACLlB,MAAO,OACPkU,gBAAiB,QACjBG,cAAe,GACf7S,WAAY,GACZc,aAAc,EACdb,UAAW,EACXyI,UAAU,UAGV,SAEF,cAAC/D,EAAA,QAAI,CAACjF,MAAO,CAEX+C,MAAO,gCACPC,WAAY,OACZkQ,cAAc,aACd,SAAC,oBCqMAuC,GA9YI,SAAChR,GACnB,IACCiN,EAMGjN,EANHiN,aAEApL,EAIG7B,EAJH6B,WACAwH,EAGGrJ,EAHHqJ,MACAiH,EAEGtQ,EAFHsQ,YACAC,EACGvQ,EADHuQ,eAKA5L,EACG0E,EAAMC,OADT3E,KAGD,EAII9E,IAHHtE,EAAK,EAALA,MACApC,EAAK,EAALA,MACAwF,EAAW,EAAXA,YAYD,EAA4B5D,mBAAS,IAAG,WAAjC+U,EAAM,KAAEC,EAAS,KAGxB,EAAwBhV,mBAAS,IAAG,WAA7BkW,EAAI,KAAEC,EAAO,KAGpB,EAAkCnW,mBAAS,IAAG,WAAvCoW,EAAS,KAAEC,EAAY,KAE9BjW,qBAAU,cAKP,CAAChC,EAAOwL,IAEX,IAAM0M,EAAS,sBAAG,YACjB,IAAIC,EAAa,MAANxB,OAAM,EAANA,EAAQpO,KAAI,SAAA6K,GACtB,MACC,CAICA,MAAOA,EAEP4E,UAAWA,MAIV5L,EAAI,CAAEuK,OAAQA,EAAQyB,aAAcD,UAGjB3S,EAAYsP,KAD1B,SACoC,CAAE7K,KAAMmC,GAAK,CACzDrG,QAAS,CACRiP,cAAc,SAAUhV,MAFlBiK,KAKR2M,EAAU,OACV,kBAtBc,mCA+Cf,SAASW,IACR,IAAIA,EAAW,EACf,IACO,MAANZ,KAAQpO,KAAI,SAAA6K,GACX,OAAOmE,GAAYnE,EAAM3I,MAAQ2I,EAAMzH,UAGxC,QAEA,OAAO4L,GAKT,OAtBAvV,qBAAU,YAfc,WACvB,IAAIqW,EAAQ1B,EAAOtK,MAAK,SAAAuI,GAAC,OAAIA,EAAExN,IAAMoE,EAAKpE,MAC1C,QAAYkD,GAARkB,EACH,QAAclB,IAAV+N,EACHzB,EAAU,GAAD,WAAKD,GAAM,CAAEnL,SAElB,CACJ,IAAIX,EAAQ8L,EAAO/V,QAAQyX,GACvBC,EAAYzH,KAAKC,MAAMD,KAAKE,UAAU4F,IAC1C,IAAM2B,EAAU5G,OAAO7G,EAAO,EAAGW,GAAO,QAC9BoL,EAAU0B,KAMtBC,KACE,CAAC/M,IAoBAsI,EAEF,cAACpF,EAAA,QAAU,CAACtM,MAAOA,EAAMG,cAAeyN,8BAA8B,EAAM,SAE3E,cAAC9I,EAAA,QAAS,CACTC,QAAS,WACRuB,EAAWiB,SAAS,aAErBvH,MAAO,CACNlB,MAAO,MACPkU,gBAAiB,aACjBhQ,WAAY,OACZkQ,cAAe,YACflK,UAAW,SACXmK,cAAe,GACf7S,WAAY,GACZc,aAAc,GACb,SAEF,cAAC6D,EAAA,QAAI,CAACjF,MAAO,CACZkC,SAAU,GACVc,WAAY,KACX,SAAC,oBAOmB,GAAjBuR,EAAOnW,OAEd,eAACkO,EAAA,QAAU,CAACtM,MAAOA,EAAMG,cAAeyN,8BAA8B,EAAM,UAC3E,cAAC,GAAY,CACZmH,YAAaA,EACbC,eAAgBA,IAEjB,cAAC/P,EAAA,QAAI,CAACjF,MAAO,GACX,SAAC,wBAGH,cAACiF,EAAA,QAAI,UAAC,qDACN,cAACH,EAAA,QAAS,CACT9E,MAAO,CACNlB,MAAO,MACPkU,gBAAiB,QACjBjQ,MAAO,gCACPC,WAAY,OACZkQ,cAAe,YACflK,UAAW,SACXmK,cAAe,GACf7S,WAAY,GACZc,aAAc,EACdb,UAAW,IAEZwE,QAAS,WACRuB,EAAWiB,SAAS,SACnB,SAEF,cAACtC,EAAA,QAAI,CAACjF,MAAO,CAAE+C,MAAO,cAAe,SAAC,gBAGvC,cAAC+B,EAAA,QAAS,CACT9E,MAAO,CACNlB,MAAO,OACPkU,gBAAiB,QACjBjQ,MAAO,gCACPC,WAAY,OACZkQ,cAAe,YACflK,UAAW,SACXmK,cAAe,GACf7S,WAAY,GACZc,aAAc,EACd+J,SAAU,QACVC,OAAQ,GAETrG,QAAS,WACRiQ,GAAe,IACd,SAEF,cAAC/P,EAAA,QAAI,CAACjF,MAAO,CAAE+C,MAAO,cAAe,SAAC,uBAQxC,eAACuJ,EAAA,QAAU,CAACtM,MAAOA,EAAMG,cAAeyN,8BAA8B,EAAM,UAC3E,cAACwH,GAAA,QAAK,CACLC,cAAc,QACdC,aAAa,EACbC,QAASR,EACTS,eAAgB,WACfR,GAAgBD,IACf,SAEF,cAAC,GAAY,CACZA,YAAaA,EACbC,eAAgBA,MAIlB,cAAC/P,EAAA,QAAI,CAACjF,MAAO,CACZgT,gBAAiB,kBACjBjQ,MAAO,gCACPC,WAAY,OACZkQ,cAAe,YACflK,UAAW,SACXlK,MAAO,OACPqU,cAAe,GACf7S,WAAY,GACZc,aAAc,GACb,SAAC,uBAEI,MAANmT,OAAM,EAANA,EAAQpO,KAAI,SAAC6K,GACb,OACC,cAAC,GAAS,CACTA,MAAOA,EACPuD,OAAQA,EACRC,UAAWA,GAHIxD,EAAMhM,OAQxB,cAAC0L,EAAA,QAAS,CAAC1Q,MAAO,CACjBlB,MAAOH,GACPgC,UAAW,GACXkB,aAAc,GACdmR,gBAAiB,WAEjBD,YAAY,uBAAuB9O,MAAOyR,EAAM/E,aAAcgF,IAG/D,eAAC9P,EAAA,QAAI,CAAC7F,MAAO,CAAElB,MAAO,QAAS,UAE9B,eAAC+G,EAAA,QAAI,CAAC7F,MAAO,CACZa,cAAe,OACd,UAED,eAACoE,EAAA,QAAI,CAACjF,MAAO,CACZ4B,SAAU,EACVoB,WAAY,KACX,UAAEuR,EAAOnW,OAAO,YAElB,cAAC6G,EAAA,QAAI,CAACjF,MAAO,CACZkC,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,IACZL,UAAW,UACV,SAAEwS,SAGL,eAACtP,EAAA,QAAI,CAAC7F,MAAO,CACZa,cAAe,MACfsS,cAAe,GACfnS,WAAY,UACX,UACD,cAAC6E,EAAA,QAAI,CAAC7F,MAAO,CACZ4B,SAAU,EACVjB,UAAW,IACV,SACD,cAAC+P,EAAA,QAAS,CAAC1Q,MAAO,CACjBlB,MAAO,OACP6B,UAAW,GACXqS,gBAAiB,WAEjB/O,MAAO2R,EAAWjF,aAAckF,EAAc9C,YAAY,2BAG5D,cAACjO,EAAA,QAAS,CAAC9E,MAAO,CACjBU,YAAa,EACbS,YAAa,OACbnC,OAAQ,GACR2D,UAAW,SACX9B,cAAe,SACfC,eAAgB,UACf,SACD,cAACmE,EAAA,QAAI,CAACjF,MAAO,CACZ6T,QAAS,EACT3R,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,KACX,SAAC,oBAML,eAAC6C,EAAA,QAAI,CAAC7F,MAAO,CACZa,cAAe,MACfsS,cAAe,IACd,UACD,cAAClO,EAAA,QAAI,CAACjF,MAAO,CACZ4B,SAAU,EACVM,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,KACX,SAAC,aAIH,cAACiC,EAAA,QAAI,CAACjF,MAAO,CACZkC,SAAU,GACV0O,WAAY,YACZC,WAAY,IACZ7N,WAAY,IACZD,MAAO,OACN,SAAEoS,SAGL,eAACtP,EAAA,QAAI,CAAC7F,MAAO,CACZmL,SAAU,QACVC,OAAQ,EACRtM,MAAO,QACN,UACD,eAAC+G,EAAA,QAAI,CAAC7F,MAAO,CACZa,cAAe,MACfC,eAAgB,iBACf,UACD,cAACgE,EAAA,QAAS,CACTC,QAAS,WACRuB,EAAWiB,SAAS,SAErBvH,MAAO,CACNlB,MAAO,MACPqU,cAAe,GACf7S,WAAY,GACZc,aAAc,EACd4R,gBAAiB,mBAChB,SAEF,cAAC/N,EAAA,QAAI,CAACjF,MAAO,CACZ+C,MAAO,gCACPC,WAAY,OACZkQ,cAAe,YACflK,UAAW,UACV,SAAC,wBAGJ,cAAClE,EAAA,QAAS,CAACC,QAAS+Q,EACnB9V,MAAO,CACNlB,MAAO,MACPqU,cAAe,GACf7S,WAAY,GACZc,aAAc,EACd4R,gBAAiB,mBAChB,SAEF,cAAC/N,EAAA,QAAI,CAACjF,MAAO,CACZ+C,MAAO,gCACPC,WAAY,OACZkQ,cAAe,YACflK,UAAW,UACV,SAAC,oBAKL,cAAClE,EAAA,QAAS,CAACC,QAAS,WACnBiQ,GAAe,IACd,SACD,cAAC/P,EAAA,QAAI,CAACjF,MAAO,CAEZgT,gBAAiB,QACjBjQ,MAAO,gCACPC,WAAY,OACZkQ,cAAe,YACflK,UAAW,SACXmK,cAAe,GACf7S,WAAY,GACZc,aAAc,EACdb,UAAW,GACV,SAAC,8BAmBJ5B,GAAcC,UAAWC,IAAI,UAAUC,M,IACxBF,UAAWC,IAAI,UAAUG,OAE/BiB,UAAWC,OAAO,CAChCmT,aAAc,GAEdC,UAAW,CAEVN,gBAAiB,QACjB5R,aAAc,GAEdpC,OAAQ,OACRgC,WAAY,SACZuS,YAAa,OACbC,aAAc,CACb1U,MAAO,EACPE,OAAQ,IAETyU,cAAe,IACfC,aAAc,EACdC,UAAW,GAEZC,OAAQ,CACP9U,MAAO,MACPsC,aAAc,EACdyS,QAAS,GACTF,UAAW,GAEZG,WAAY,CACXd,gBAAiB,WAElBe,YAAa,CACZf,gBAAiB,WAElBgB,UAAW,CACVjR,MAAO,QACPC,WAAY,OACZgG,UAAW,UAEZiL,UAAW,CACVpT,cAAe,MACfG,WAAY,SACZa,aAAc,GACdqS,kBAAmB,OACnBC,kBAAmB,EACnBrV,MAAO,OACPwB,WAAY,GACZF,YAAa,EACbC,aAAc,GAEf+T,eAAgB,CACfpR,WAAY,OACZd,SAAU,GACVN,SAAU,EACVoH,UAAW,QAEZqL,kBAAmB,CAClBtR,MAAO,QACPC,WAAY,OACZd,SAAU,M,6kBCxcZ,IAGMkU,GAAMC,oBA0GGC,UAxGH,WAEV,MAAwC9W,oBAAS,GAAK,WAA/CkS,EAAY,KAAEC,EAAe,KAGpC,EAAsCnS,oBAAS,GAAM,WAA9CuV,EAAW,KAAEC,EAAc,KAElC,EAAwBxV,mBAAS,IAAG,WAA7BoS,EAAI,KAAEC,EAAO,KAwBpB,OAPAjS,qBAAU,WAZRyD,kBAASnE,wBAAwB,CAACyE,QAAQ,CAACiP,cAAc,SAAShV,KACjE+J,MAAK,SAAAC,GAAQ,OAAEA,EAASC,QACxBF,MAAK,SAACE,GACLgK,EAAQhK,GAEH0I,OAAOC,KAAK3I,GAAMxD,SAAS,WAC9BsN,GAAgB,QAUnB,CAAC/T,IAIF,cAAC2Y,GAAA,QAAe,UACd,cAAC,EAAW,UACV,cAACC,EAAA,QAAmB,UAClB,eAACJ,GAAI9E,UAAS,CACZmF,iBAzCK,OA0CLC,cAAe,gBAAG5I,EAAK,EAALA,MAAK,MAAQ,CAC7B6I,WAAY,YAA+B,IACrCC,EADSC,EAAO,EAAPA,QAAS9T,EAAK,EAALA,MAAO8F,EAAI,EAAJA,KAEzBiO,EAAKhJ,EAAMhQ,KAWf,MAxDC,SA+CGgZ,EACFF,EAAWC,EAAU,OAAS,eA/C/B,SAiDQC,EACPF,EAAWC,EAAU,OAAS,eAjD3B,aAmDIC,IACPF,EAAWC,EAAU,WAAa,oBAGlC,cAACE,EAAA,QAAQ,CAACjZ,KAAM8Y,EAAU/N,KAAMA,EAAM9F,MAAOA,KAMjDiU,aAAa,EACbC,YAAa,CAAEjE,gBAAiB,cAChCkE,WAAY,CAAE/D,cAAe,GAAIjR,SAAU,IAC3ClC,MAAO,CAAE6T,QAAS,GAAI7U,OAAQ,MAC7B,UAGH,cAACoX,GAAI7E,OAAM,CAACzT,KAtEP,OAsEuB0T,UAAW2F,KAEvC,cAACf,GAAI7E,OAAM,CAACzT,KAvEP,OAyEHyB,SAAU,SAAAkF,GAAK,OACb,cAAC,GAAU,SAAKA,GAAK,IACnBiN,aAAcA,EACdC,gBAAiBA,EACjBoD,YAAaA,EACbC,eAAgBA,MAIpBoC,cAAe,CACb,UAAQlP,KAGZ,cAACkO,GAAI7E,OAAM,CAACzT,KArFH,WAuFPyB,SAAU,SAAAkF,GAAK,OACb,cAAC,GAAc,SAAKA,GAAK,IACvBiN,aAAcA,EACdC,gBAAiBA,EACjBC,KAAMA,EACNC,QAASA,EACTkD,YAAaA,EACbC,eAAgBA,mB","file":"static/js/app.a0cf6293.chunk.js","sourcesContent":["import { StyleSheet, Dimensions } from 'react-native'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\n// To void error when try to get undefined cookie, use this function istead of package\r\nfunction getCookie(cname) {\r\n  let name = cname + \"=\";\r\n  let ca = document.cookie.split(';');\r\n  for(let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nconst token = getCookie('kfc')\r\nconst host = (process.env.NODE_ENV === \"development\") ? \"http://127.0.0.1:8000\" : \"\"\r\nconst baseURL = `${host}/api/v1/`\r\n\r\nconst initialState = {\r\n  windowWidth: Dimensions.get('window').width,\r\n  windowHeight: Dimensions.get('window').height,\r\n  token: token,\r\n  host: host,\r\n  baseURL: baseURL,\r\n}\r\n\r\nconst AppContext = React.createContext()\r\nconst AppProvider = ({ children }) => {\r\n\r\n  const [state, setState] = useState(initialState)\r\n\r\n  function handleWindowSizeChange() {\r\n    // setWindowWidth(Dimensions.get('window').width)\r\n    // setWindowHeight(Dimensions.get('window').height)\r\n    setState({...state, windowWidth: Dimensions.get('window').width, windowHeight: Dimensions.get('window').height})\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleWindowSizeChange)\r\n    return () => {\r\n      window.removeEventListener('resize', handleWindowSizeChange);\r\n    }\r\n  }, [])\r\n\r\n\r\n  const style = StyleSheet.create({\r\n    // HomeScreen\r\n    homeContainer: {\r\n      width: state.windowWidth > 1000 ? 1000 : state.windowWidth,\r\n      // maxWidth: 1000,\r\n      // paddingLeft: windowWidth > 1000 ? (windowWidth - 1000)/2 : 5,\r\n      paddingLeft: state.windowWidth > 1000 ? 'auto' : 5,\r\n      // paddingRight: windowWidth > 1000 ? (windowWidth - 1000)/2 : 5,\r\n      paddingRight: state.windowWidth > 1000 ? 'auto' : 5,\r\n      paddingTop: 5,\r\n      height: state.windowHeight - 100,\r\n      marginTop: 10,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      // borderColor: 'green',\r\n      borderWidth: 1,\r\n      minHeight: state.windowHeight - 100,\r\n      height: 'auto',\r\n      // borderLeftWidth: 1,\r\n      // borderRightWidth: 1,\r\n    },\r\n    homeCategories: {\r\n      flexDirection: 'row',\r\n      // borderColor: 'violet',\r\n      borderWidth: 1,\r\n      justifyContent: \"space-around\",\r\n      marginTop: 10,\r\n    },\r\n    homeCategory: {\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 0.2 * state.windowWidth,\r\n      maxWidth: 200,\r\n      height: 0.1 * state.windowWidth,\r\n      maxHeight: 200,\r\n      borderColor: 'lightblue',\r\n      borderWidth: 1,\r\n      borderRadius: 10,\r\n    },\r\n    homeCategoryChosen: {\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 0.2 * state.windowWidth,\r\n      height: 0.1 * state.windowWidth,\r\n      borderWidth: 2,\r\n      borderColor: 'orange',\r\n      borderRadius: 8,\r\n    },\r\n    homeSingleItemCategory: {\r\n      width: 0.2 * state.windowWidth,\r\n      maxWidth: 200,\r\n      height: 0.2 * state.windowWidth,\r\n      maxHeight: 200,\r\n      borderColor: 'lightblue',\r\n      borderWidth: 1,\r\n      borderRadius: 10,\r\n    },\r\n    homeSingleItemCategoryChosen: {\r\n      borderWidth: 2,\r\n      borderRadius: 8,\r\n      width: 0.2 * state.windowWidth,\r\n      height: 0.2 * state.windowWidth,\r\n      borderColor: 'orange',\r\n    },\r\n    homeFoodListCover: {\r\n      // textAlign:'center',\r\n      marginTop: 10,\r\n    },\r\n    homeFoodList: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      // borderWidth: 2,\r\n      // borderColor: 'Crimson',\r\n      // justifyContent: 'flex-start',\r\n      // justifyContent: 'space-around',\r\n      justifyContent: 'center',\r\n    },\r\n    dishContainer: {\r\n      // borderColor: 'green',\r\n      borderWidth: 1,\r\n      width: 0.32 * state.windowWidth,\r\n      height: 'fit-content',\r\n      paddingLeft: state.windowWidth > 1000 ? '2.5%' : 0.033 * state.windowWidth,\r\n      paddingRight: state.windowWidth > 1000 ? '2.5%' : 0.033 * state.windowWidth,\r\n      maxWidth: 0.9*state.windowWidth/2 > 240 ? 240 : 0.9*state.windowWidth/2,\r\n      flexDirection: 'column',\r\n      flexGrow: 1,\r\n      marginBottom: 20,\r\n    },\r\n    dishName: {\r\n      // borderWidth: 1,\r\n      // borderColor: 'chartreuse',\r\n      // height: state.windowWidth > 1000 ? '2%' : 0.16*state.windowWidth,\r\n      overflow: 'hidden',\r\n      wordWrap: 'break-word',\r\n      hyphens: 'auto',\r\n      width: '100%',\r\n      height: 18,\r\n      fontSize: 14,\r\n    },\r\n    dishImageContainer: {\r\n      width: '100%',\r\n      // height: state.windowWidth > 1000 ? 0.07 * state.windowWidth : 0.25 * state.windowWidth,\r\n      // height: \"70%\",\r\n      aspectRatio: 1,\r\n    },\r\n    DishImage: {\r\n      flexGrow: 1,\r\n      borderRadius: 10,\r\n      borderColor: 'red',\r\n      borderWidth: 1,\r\n      borderRadius: 10,\r\n      marginRight: 10,\r\n      resizeMode: 'stretch',\r\n      minHeight: 50,\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n    dishInfo: {\r\n      // borderColor: 'red',\r\n      // borderWidth: 1,\r\n      // minHeight: windowWidth > 1000 ? '80%' : 0.35*windowWidth,\r\n    },\r\n    dishInfoHide: {\r\n      borderWidth: 1,\r\n      borderColor: 'yellowBlanchedAlmond',\r\n      height: state.windowWidth > 1000 ? 0.04 * state.windowWidth : 0.15 * state.windowWidth,\r\n      maxHeight: 60,\r\n      overflow: 'hidden',\r\n    },\r\n    dishInfoShow: {\r\n      borderWidth: 1,\r\n      borderColor: 'yellowBlanchedAlmond',\r\n      minHeight: state.windowWidth > 1000 ? 0.04 * state.windowWidth : 0.15 * state.windowWidth,\r\n    },\r\n    customBtn: {\r\n      marginTop: 8,\r\n      alignSelf: 'center',\r\n      width: '70%',\r\n      height: 25,\r\n      borderWidth: 2,\r\n      borderColor: 'rgba(var(--b6a, 219, 219, 219), 1)',\r\n    },\r\n    // CUSTOM SCREEN\r\n    customOrder: {\r\n      width: '100%',\r\n    },\r\n    customName: {\r\n      fontStyle: 'italic',\r\n      fontSize: '1.333333333333333em',\r\n      color: 'black',\r\n      fontWeight: 'bold',\r\n      wordWrap: 'break-word',\r\n    },\r\n    customList: {\r\n\r\n    },\r\n    // DEALS SCREEN\r\n    dealImageContainer: {\r\n      width: state.windowWidth,\r\n      height: 0.45 * state.windowWidth,\r\n    },\r\n    dealImage: {\r\n      width: '100%',\r\n      aspectRatio: 2,\r\n      resizeMode: 'stretch',\r\n    }\r\n  })\r\n\r\n  // fetch without token\r\n  const customAxios = axios.create({\r\n    baseURL: state.baseURL,\r\n  })\r\n\r\n  // THIS SHIT WON'T WORK\r\n  // fetch with token\r\n  const authFetch = axios.create({\r\n    baseURL: state.baseURL,\r\n  })\r\n\r\n  // THIS SHIT WON'T WORK\r\n  authFetch.interceptors.request.use(\r\n    (config) => {\r\n      config.headers.common['Authorization'] = `Token ${token}`\r\n      return config\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  // Change iamge url, on development, react need host to serve image files\r\n  // On production, we don't need host\r\n  function changeImagePath(image) {\r\n    const baseUrl = `${state.host}`\r\n    if ((image || '').includes(baseUrl)) {\r\n      return image\r\n    }\r\n    else {\r\n      return baseUrl + image\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{ \r\n        ...state,\r\n        style,\r\n        customAxios,\r\n        authFetch,\r\n        changeImagePath,\r\n       }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nconst useAppContext = () => { return (useContext(AppContext)) }\r\n\r\n\r\nexport { useAppContext, AppProvider, baseURL, token }","import React, { useEffect, useState } from 'react'\r\nimport { Pressable, Text } from 'react-native'\r\nimport { useAppContext } from '../../../context/appContext';\r\n// import style from \"../../Style\";\r\n\r\nconst Category = (props) => {\r\n  const { style } = useAppContext()\r\n  const {\r\n    category,\r\n    setShowSingleItems,\r\n    categoryChosen,\r\n    setCategoryChosen,\r\n  } = props\r\n\r\n  return (\r\n    <Pressable\r\n      onPress={() => {\r\n        setCategoryChosen(category.id)\r\n        setShowSingleItems(false)\r\n      }}\r\n      style={categoryChosen === category.id ? style.homeCategoryChosen : style.homeCategory}\r\n    >\r\n      <Text>\r\n        {category.field.replace('combo-', '').toUpperCase()}\r\n      </Text>\r\n\r\n    </Pressable>\r\n  )\r\n}\r\n\r\nexport default Category","import React from 'react'\r\nimport { Pressable, Image } from 'react-native'\r\nimport { useAppContext } from '../../../context/appContext'\r\n// import style from \"../../Style\";\r\n\r\nconst SingleItemCategory = (props) => {\r\n  const { style, changeImagePath, } = useAppContext()\r\n  const {\r\n    singleItemCategory,\r\n    categoryChosen,\r\n    setCategoryChosen,\r\n  } = props\r\n  // console.log(singleItemCategory)\r\n\r\n  return (\r\n    <Pressable\r\n      onPress={() => {\r\n        setCategoryChosen(singleItemCategory.id)\r\n      }} \r\n    >\r\n      <Image source={{uri: changeImagePath(singleItemCategory.image_url)}} \r\n        style={singleItemCategory.id === categoryChosen ? style.homeSingleItemCategoryChosen : style.homeSingleItemCategory}\r\n        />\r\n    </Pressable>\r\n  )\r\n}\r\n\r\n\r\nexport default SingleItemCategory","import React from 'react'\r\nimport { View } from 'react-native'\r\nimport { useAppContext } from '../../../context/appContext';\r\nimport SingleItemCategory from './SingleItemCategory'\r\n\r\nconst SingleItemCategories = (props) => {\r\n  const { style } = useAppContext()\r\n  const {\r\n    categories,\r\n    categoryChosen,\r\n    setCategoryChosen,\r\n  } = props\r\n\r\n  function filterSingleItems(input) {\r\n    if (Boolean(input.field.startsWith('singleItems-')) === true) {\r\n      return input\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={style.homeCategories}>\r\n      {categories.filter(singleItemCategory => filterSingleItems(singleItemCategory)).map((singleItemCategory)=>{\r\n        return(\r\n          <SingleItemCategory key={singleItemCategory.id}\r\n            singleItemCategory={singleItemCategory}\r\n            categoryChosen={categoryChosen}\r\n            setCategoryChosen={setCategoryChosen}\r\n          />\r\n        )\r\n      })}\r\n    </View>\r\n  )\r\n}\r\n\r\n// const singleItemCategories = [\r\n//   {\r\n//     id: 0,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a01.png',\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a13.png',\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_f18.png',\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_g01_201125.png',\r\n//   },\r\n// ]\r\n\r\nexport default SingleItemCategories","import React, { useState, useEffect } from \"react\";\r\nimport { View, Image, Text, Pressable, } from \"react-native\";\r\nimport { BiDownArrow } from 'react-icons/bi';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useAppContext } from \"../../../context/appContext\";\r\n\r\nexport const Dish = (props) => {\r\n  const {\r\n    categoryDish,\r\n  } = props\r\n\r\n  const { style, customAxios, changeImagePath } = useAppContext()\r\n\r\n  const navigation = useNavigation()\r\n\r\n\r\n  // Dish images\r\n  const [images, setImages] = useState([])\r\n\r\n  // Dish items\r\n  const [dishItems, setDishItems] = useState({})\r\n\r\n  // Show another things before finishing loading\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Hide detail info if category is drink or snack\r\n  const [hideInfo, setHideInfo] = useState(false)\r\n\r\n  // Change dish info height to shorten or show text\r\n  const [shorten, setShorten] = useState(true)\r\n\r\n  // HIDE DRINK AND SNACK DISH INFO\r\n  function hideDishInfo(categoryDish) {\r\n    if ([`singleItems-desserts-drinks`, `singleItems-snacks`].includes(categoryDish.category__field)) {\r\n      setHideInfo(true)\r\n    }\r\n  }\r\n\r\n\r\n  function imagePath() {\r\n    let p\r\n    if (images === undefined || images.length === 0) {\r\n      // array empty or does not exist\r\n      p = ''\r\n    }\r\n    else {\r\n      p = images[0].image_url\r\n    }\r\n    return { uri: changeImagePath(p) }\r\n  }\r\n\r\n\r\n  function choicesText(array) {\r\n    let text = ''\r\n    try {\r\n      for (let i = 0; i < array.length; i += 1) {\r\n        text += `/${array[i].name}`\r\n      }\r\n    }\r\n    finally {\r\n      if (text[0] == '/') {\r\n        return text.substr(1, text.length)\r\n      }\r\n      else {\r\n        return text\r\n      }\r\n    }\r\n  }\r\n\r\n  function customProps() {\r\n    navigation.navigate('Custom', {\r\n      images,\r\n      categoryDish,\r\n      dishItems,\r\n    })\r\n\r\n  }\r\n\r\n  function cartPrams() {\r\n    let itemsChosen\r\n    try {\r\n      let selectionsDefault = dishItems.selections?.map((selection) => {\r\n        return selection.default\r\n      })\r\n      let singleItemDefault = dishItems.singleItems\r\n      itemsChosen = [...selectionsDefault, ...singleItemDefault]\r\n    }\r\n    finally {\r\n      // console.log(`Dish-itemsChosen`, itemsChosen)\r\n      navigation.navigate('Cart', {\r\n        dish: {\r\n          id: Date.now(), // use index for key, because we can order a dish two times\r\n          categoryDish: categoryDish,\r\n          itemsChosen: itemsChosen,\r\n          dishItems: dishItems,\r\n          images: images,\r\n          price: categoryDish.price,  //one set only\r\n          amount: 1,\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    // console.log('categoryDish', categoryDish)\r\n\r\n    hideDishInfo(categoryDish)\r\n    \r\n    const url = `item_images/${categoryDish.id}/`\r\n    // GET ITEM IMAGES\r\n    customAxios(url)\r\n    .then((response)=>{\r\n      return response.data\r\n    })\r\n    .then((data) => {\r\n      setImages(data)\r\n      // console.log('images', data)\r\n    })\r\n\r\n    const url1 = `dish_items/${categoryDish.id}/`\r\n    // GET DISH ITEMS\r\n    customAxios(url1)\r\n    .then(response=>response.data)\r\n    .then((data) => {\r\n      // console.log(`dishItems:`, data)\r\n      setDishItems(data)\r\n    })\r\n    .finally(() => {\r\n      setLoading(false)\r\n    })\r\n  }, [])\r\n\r\n  // If have not finished loading\r\n  if (loading) {\r\n    return (\r\n      <View style={style.homeFoodContainer}>\r\n        <Text>Data is loading...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={style.dishContainer}>\r\n      <Pressable style={style.dishImageContainer}\r\n        onPress={customProps}\r\n      >\r\n        {/* Dish image */}\r\n        <Image\r\n          style={style.DishImage}\r\n          source={imagePath()}\r\n        />\r\n      </Pressable>\r\n\r\n      <View>\r\n        <Text numberOfLines={1} style={style.dishName}>\r\n          {categoryDish.name}\r\n        </Text>\r\n        <Text>{categoryDish.price}</Text>\r\n      </View>\r\n\r\n      <View style={shorten ? style.dishInfo : [style.dishInfo, { height: 'fit-content' }]}>\r\n        {/* IF DISH IS DRINK, HIDE INFO */}\r\n        {hideInfo ||\r\n          // Dish ITEMS\r\n          <View style={shorten ? style.dishInfoHide : style.dishInfoShow}>\r\n\r\n            {/* SELECTIONS TEXT */}\r\n            {dishItems.selections?.filter(selection =>\r\n              selection.default.category__field != 'singleItems-desserts-drinks'\r\n            ).map((selection, index) => {\r\n              return (\r\n                <Text key={index}>\r\n                  {choicesText(selection.choices)}\r\n                </Text>\r\n              )\r\n            })}\r\n\r\n            {/* SINGLE ITEM TEXT */}\r\n            {dishItems.singleItems?.map((singleItem, index) => {\r\n              return (\r\n                <Text key={index}>\r\n                  {singleItem.name}\r\n                </Text>\r\n              )\r\n            })}\r\n\r\n            {/* DRINK TEXT */}\r\n            {dishItems.selections?.filter(selection =>\r\n              selection.default.category__field == 'singleItems-desserts-drinks'\r\n            ).map((selection, index) => {\r\n              return (\r\n                <Text key={index}>\r\n                  {selection.default.name}\r\n                </Text>\r\n              )\r\n            })}\r\n\r\n          </View>\r\n        }\r\n\r\n        <Pressable style={{ alignSelf: 'center' }}\r\n          onPress={() => setShorten(!shorten)}\r\n        >\r\n          <BiDownArrow name=\"keyboard-arrow-down\" size={24} color=\"black\" style={shorten ? { transform: 'rotate(0deg)', transitionDuration: '500ms' } : { transform: 'rotate(180deg)', transitionDuration: '500ms' }} />\r\n        </Pressable>\r\n\r\n        <Pressable style={style.customBtn}\r\n          onPress={customProps}\r\n        >\r\n          <Text style={{ color: 'green', textAlign: 'center' }}>Cumtom</Text>\r\n        </Pressable>\r\n\r\n        <Pressable style={style.customBtn}\r\n          onPress={cartPrams}\r\n        >\r\n          <Text style={{ color: 'green', textAlign: 'center' }}>Order</Text>\r\n        </Pressable>\r\n      </View>\r\n\r\n    </View>\r\n\r\n\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { BiDownArrowCircle } from 'react-icons/bi';\r\n// import style from \"../../Style\";\r\nimport { Dish } from \"./Dish\";\r\nimport { useAppContext } from \"../../../context/appContext\";\r\n\r\n// Width and height of device\r\n// const windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n// const windowHeight = Dimensions.get('window').height \r\n\r\nexport const Dishes = (props) => {\r\n  const { style } = useAppContext()\r\n  const {\r\n    categoryDishes,\r\n  } = props\r\n\r\n  return (\r\n    <View style={style.homeFoodListCover}>\r\n      {/* Arrow icon */}\r\n      <BiDownArrowCircle size={24} color=\"blue\"\r\n        style={{ marginLeft: 'auto', marginRight: 'auto' }} />\r\n\r\n      <View\r\n        style={{\r\n          // maxHeight:windowHeight*0.45, \r\n          marginTop: 10\r\n        }}\r\n      >\r\n        {/* Food list */}\r\n        <View style={style.homeFoodList}>\r\n          {categoryDishes.map((categoryDish) => {\r\n            return (\r\n              <Dish key={categoryDish.id}\r\n                categoryDish={categoryDish} />\r\n            )\r\n          })}\r\n\r\n        </View>\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\n// export const nigiri = [\r\n//   {\r\n//     id: 0,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a01.png',\r\n//     // name: 'Combo Fried Chicken',\r\n//     // price: 78000,\r\n//     // compose: {\r\n//     //   singleItem: '1 Pepsi Can',\r\n//     //   selection: '2 Pcs of Hot & Spicy Chicken / 2 Pcs of Non Spicy Crispy Chicken / 2 Pcs of Original Recipe Chicken',\r\n//     // }\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a02.png',\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a43.png',\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a49.png',\r\n//   },\r\n//   {\r\n//     id: 4,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b02.png',\r\n//   },\r\n//   {\r\n//     id: 5,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b03.png',\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b06.png',\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b07.png',\r\n//   },\r\n// ]","import React, { useState, useEffect } from 'react'\r\nimport { Pressable, Text, View } from 'react-native'\r\nimport Category from './Category'\r\nimport SingleItemCategories from './SingleItemCategories'\r\nimport { Dishes } from './Dishes'\r\nimport { useAppContext } from '../../../context/appContext';\r\n\r\nconst Categories = () => {\r\n  const {\r\n    style,\r\n    customAxios\r\n  } = useAppContext()\r\n\r\n  // Category Array\r\n  const [categories, setCategories] = useState([])\r\n\r\n  // Category Items\r\n  const [categoryDishes, setCategoryDishes] = useState([])\r\n\r\n  // Press on Category\r\n  const [categoryChosen, setCategoryChosen] = useState(0)\r\n\r\n  // Show Category Items\r\n  const [showSingleItems, setShowSingleItems] = useState(false)\r\n\r\n  \r\n  function getCategoryItems(categoryId) {\r\n    const url = `category_items/${categoryId}`\r\n    customAxios(url)\r\n    .then(response=>response.data)\r\n    .then((data) => {\r\n      setCategoryDishes(data)\r\n    })\r\n  }\r\n\r\n  \r\n  function findFirstComboId(categories) {\r\n    var jsonPromise = new Promise(function (resolve, reject) {\r\n      let a = categories.find(category => category.field.startsWith('combo-'))\r\n      if (a) {\r\n        resolve(a)\r\n      }\r\n      else {\r\n        reject(Error(\"There are no combo categoreis\"))\r\n      }\r\n\r\n    })\r\n\r\n    jsonPromise.then((data) => {\r\n      // This never happens:\r\n      // console.log(\"It worked!\", data.id);\r\n      // Set first combo id to category id\r\n      setCategoryChosen(data.id)\r\n    }).catch((err) => {\r\n      // Instead, this happens:\r\n      // console.log(\"It failed!\", err);\r\n    })\r\n    console.log()\r\n  }\r\n\r\n  function findFirstSingleItemId() {\r\n    var jsonPromise = new Promise(function (resolve, reject) {\r\n      let a = categories.find(category => category.field.startsWith('singleItems-'))\r\n      if (a) {\r\n        resolve(a)\r\n      }\r\n      else {\r\n        reject(Error(\"There are no combo categoreis\"))\r\n      }\r\n\r\n    })\r\n\r\n    jsonPromise.then(function (data) {\r\n      // console.log(\"It worked!\", data.id);\r\n      // Set first combo id to category id\r\n      setCategoryChosen(data.id)\r\n\r\n    }).catch(function (err) {\r\n      // Instead, this happens:\r\n      // console.log(\"It failed!\", err);\r\n    })\r\n  }\r\n\r\n  function filterCombo(input) {\r\n    if (Boolean(input.field.startsWith('combo-')) === true) {\r\n      return input\r\n    }\r\n  }\r\n\r\n  const getCategories = async () => {\r\n    const url = `get_categories/`\r\n    const { data } = await customAxios(url)\r\n    // console.log('get_categories:',data);\r\n    setCategories(data)\r\n    findFirstComboId(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log('categories useEffect')\r\n    getCategories()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // console.log('categories useEffect1')\r\n    if (categoryChosen !== 0) {\r\n      getCategoryItems(categoryChosen)\r\n    }\r\n  }, [categoryChosen])\r\n\r\n  return (\r\n    <View style={{\r\n      width: '100%',\r\n      // borderColor: 'gray',\r\n      // borderWidth: 1,\r\n    }}>\r\n      <View style={[style.homeCategories, { alignContent: 'stretch' }]}>\r\n        {categories.filter(category => filterCombo(category)).map((category) => {\r\n          return (\r\n            <Category key={category.id}\r\n              category={category}\r\n              setShowSingleItems={setShowSingleItems}\r\n              categoryChosen={categoryChosen}\r\n              setCategoryChosen={setCategoryChosen} />\r\n          )\r\n        })}\r\n\r\n        {/* For Single-Items-Category */}\r\n        <Pressable\r\n          onPress={() => {\r\n            setShowSingleItems(true)\r\n            findFirstSingleItemId()\r\n          }}\r\n          style={showSingleItems ? style.homeCategoryChosen : style.homeCategory}\r\n        >\r\n          <Text>\r\n            SINGLE ITEMS\r\n          </Text>\r\n\r\n        </Pressable>\r\n\r\n      </View>\r\n\r\n      {/* Single item Categories */}\r\n      {showSingleItems &&\r\n        <SingleItemCategories\r\n          categories={categories}\r\n          categoryChosen={categoryChosen}\r\n          setCategoryChosen={setCategoryChosen}\r\n        />\r\n      }\r\n\r\n      {/* {console.log('categoryDishes:', categoryDishes)} */}\r\n      <Dishes categoryDishes={categoryDishes} />\r\n\r\n    </View>\r\n\r\n  )\r\n}\r\nexport default Categories\r\n\r\n// const categories = [\r\n//   {\r\n//     id: 0,\r\n//     name: 'FOR ONE',\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: 'FOR SHARING',\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: 'HOT DEALS',\r\n//   },\r\n//   // {\r\n//   //   id: 3,\r\n//   //   name: 'SINGLE ITEM',\r\n//   // },\r\n// ]\r\n\r\n\r\n\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { StyleSheet, Dimensions } from \"react-native\";\r\n\r\nconst DealsSliderWrapperContext = React.createContext()\r\nconst Wrapper = ({ children }) => {\r\n\r\n  const windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n  const windowHeight = windowWidth * 0.4\r\n\r\n  const initialState = {\r\n    windowWidth,\r\n    windowHeight,\r\n  }\r\n\r\n\tconst [state, setState] = useState(initialState)\r\n\t// console.log(state.windowWidth, state.windowHeight);\r\n\r\n\tfunction handleWindowSizeChange() {\r\n\t\tconst windowWidth1 = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n        const windowHeight1 = windowWidth * 0.4\r\n\t\tsetState({ ...state, windowWidth: windowWidth1, windowHeight: windowHeight1 })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', handleWindowSizeChange)\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', handleWindowSizeChange);\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst style = StyleSheet.create({\r\n        container: {\r\n          // height, \r\n          maxHheight: 300,\r\n          borderWidth: 2,\r\n          borderColor: 'violet',\r\n          // paddingLeft: '10px', \r\n          // paddingRight: '10px', \r\n          // paddingTop: '10px',\r\n        },\r\n        scroll: {\r\n          height: '100%',\r\n          maxHheight: 300,\r\n        },\r\n        imageContainer: {\r\n          width: state.windowWidth,\r\n        //   height: state.windowHeight,\r\n        //   width: '100%',\r\n          aspectRatio: 2,\r\n          // maxHeight:300,\r\n        },\r\n        image: {\r\n          // flex: 1,\r\n          width: '100%',\r\n          height: '100%',\r\n          resizeMode: 'stretch',\r\n        },\r\n        pagination: {\r\n          position: 'absolute',\r\n          bottom: 0,\r\n          flexDirection: 'row',\r\n          alignSelf: 'center',\r\n        },\r\n        dots: {\r\n          color: 'white',\r\n          margin: 3,\r\n          fontSize: state.windowWidth / 30,\r\n        },\r\n        dotActive: {\r\n          color: 'green',\r\n          margin: 3,\r\n          fontSize: state.windowWidth / 30,\r\n        },\r\n      })\r\n\r\n\r\n\treturn (\r\n\t\t<DealsSliderWrapperContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\t...state,\r\n\t\t\t\tstyle,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</DealsSliderWrapperContext.Provider>\r\n\t)\r\n}\r\n\r\nconst useDealsSliderWrapperContext = () => {\r\n\treturn (\r\n\t\tuseContext(DealsSliderWrapperContext)\r\n\t)\r\n}\r\n\r\nexport { Wrapper, useDealsSliderWrapperContext }","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, Pressable } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useAppContext } from \"../../../context/appContext\";\r\nimport { useDealsSliderWrapperContext } from \"../../../assets/wrappers/DealsSlider\";\r\n\r\n// const windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n// const windowHeight = windowWidth * 0.4\r\n\r\nconst DealsSlider = (props) => {\r\n  const { changeImagePath } = useAppContext()\r\n  const {\r\n    deals,\r\n  } = props\r\n\r\n  const { style, windowWidth } = useDealsSliderWrapperContext()\r\n\r\n  const navigation = useNavigation()\r\n\r\n  // Dot state\r\n  const [currentSlide, setCurrentSlide] = useState(0)\r\n\r\n  // Scroll state\r\n  const scrollRef = useRef()\r\n  // const scrollRef = React.createRef()\r\n\r\n  var autoPlay = null\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`scrollRef:`, scrollRef)\r\n  // }, [scrollRef.current])\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`currentSlide:`, currentSlide)\r\n  // }, [currentSlide])\r\n\r\n  useEffect(() => {\r\n    autoPlay = setTimeout(changeSlide, 2000)\r\n\r\n    // clearTimeout right after setTimeout in infinity useEffect can help\r\n    // function run one time to one time\r\n    // this resolves turbulent-slide-problem after users swipe on their own\r\n    return () => clearTimeout(autoPlay)\r\n  })\r\n\r\n  // Change active dot\r\n  function onSlideChange(event) {\r\n    // clearInterval(autoPlay)\r\n\r\n    // const slide = Math.round(event.nativeEvent.contentOffset.x / event.nativeEvent.layoutMeasurement.width)\r\n    const slide = Math.round(event.nativeEvent.contentOffset.x / windowWidth)\r\n    // console.log(`slide: ${slide}`)\r\n    // console.log(`contentOffset.x: `, event.nativeEvent.contentOffset.x)\r\n    // console.log(`layoutMeasurement.width:`, event.nativeEvent.layoutMeasurement.width)\r\n\r\n    if (currentSlide !== slide) {\r\n      setCurrentSlide(slide)\r\n    }\r\n  }\r\n\r\n  function changeSlide() {\r\n    if (currentSlide === deals.length - 1) {\r\n      scrollRef.current.scrollTo({ x: 0, animated: true })\r\n    }\r\n    else {\r\n      scrollRef.current.scrollTo({ x: windowWidth * (currentSlide + 1), animated: true })\r\n    }\r\n  }\r\n\r\n  // var autoPlay = setTimeout(changeSlide, 2000)\r\n\r\n  function userBeginDrag() {\r\n    clearTimeout(autoPlay)\r\n  }\r\n\r\n  function userEndDrag() {\r\n    autoPlay = setTimeout(autoPlay, 5000)\r\n  }\r\n\r\n  function imagePress(deal) {\r\n    navigation.navigate('Deals', {\r\n      deal,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <View style={style.container}>\r\n\r\n      <ScrollView ref={scrollRef}\r\n        style={style.scroll}\r\n        pagingEnabled\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        onScroll={onSlideChange}\r\n        scrollEventThrottle={windowWidth}\r\n        onScrollBeginDrag={() => userBeginDrag()}\r\n        onScrollEndDrag={() => userEndDrag()}\r\n        overScrollMode={'never'}\r\n      >\r\n        {deals.map((deal) => {\r\n          return (\r\n            <Pressable\r\n              key={deal.id}\r\n              style={style.imageContainer}\r\n              onPress={() => imagePress(deal)}\r\n            >\r\n              <Image\r\n                source={{ uri: changeImagePath(deal.image_url) }}\r\n                style={style.image}\r\n              />\r\n            </Pressable>\r\n          )\r\n        })}\r\n      </ScrollView>\r\n\r\n      {/* <Text \r\n        style={{\r\n          position:'absolute',\r\n          bottom:0,\r\n          flexDirection:'row',\r\n          alignSelf: 'start',\r\n          fontSize: 22,\r\n          fontWeight:500,\r\n          color: '#0066ff',\r\n        }}>\r\n          Deals\r\n        </Text> */}\r\n\r\n      <View\r\n        style={style.pagination}\r\n      >\r\n        {deals.map((image, index) => {\r\n          return (\r\n            <Text\r\n              key={index}\r\n              style={index === currentSlide ? style.dotActive : style.dots}\r\n            >\r\n              ⬤\r\n            </Text>\r\n          )\r\n        })}\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\n// const style = StyleSheet.create({\r\n//   container: {\r\n//     // height, \r\n//     maxHheight: 300,\r\n//     borderWidth: 2,\r\n//     borderColor: 'violet',\r\n//     // paddingLeft: '10px', \r\n//     // paddingRight: '10px', \r\n//     // paddingTop: '10px',\r\n//   },\r\n//   scroll: {\r\n//     height: '100%',\r\n//     maxHheight: 300,\r\n//   },\r\n//   imageContainer: {\r\n//     width: windowWidth,\r\n//     height: windowHeight,\r\n//     // maxHeight:300,\r\n//   },\r\n//   image: {\r\n//     // flex: 1,\r\n//     width: '100%',\r\n//     height: '100%',\r\n//     resizeMode: 'stretch',\r\n//   },\r\n//   pagination: {\r\n//     position: 'absolute',\r\n//     bottom: 0,\r\n//     flexDirection: 'row',\r\n//     alignSelf: 'center',\r\n//   },\r\n//   dots: {\r\n//     color: 'white',\r\n//     margin: 3,\r\n//     fontSize: windowWidth / 30,\r\n//   },\r\n//   dotActive: {\r\n//     color: 'green',\r\n//     margin: 3,\r\n//     fontSize: windowWidth / 30,\r\n//   },\r\n// })\r\n\r\nexport default DealsSlider","import React, { useState, useEffect } from \"react\";\r\nimport { View, ScrollView } from \"react-native\";\r\nimport Categories from \"./components/Categories\";\r\nimport DealsSlider from \"./components/DealsSlider\";\r\nimport { useAppContext } from \"../../context/appContext\";\r\nimport { Wrapper } from \"../../assets/wrappers/DealsSlider\";\r\n\r\n// Width and height of device\r\n// const windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n// const windowHeight = Dimensions.get('window').height \r\n\r\nexport const HomeScreenContext = React.createContext()\r\nconst HomeScreen = ({ navigation }) => {\r\n  const {\r\n    style,\r\n    customAxios,\r\n  } = useAppContext()\r\n\r\n  // ALL DEALS\r\n  const [deals, setDeals] = useState([])\r\n\r\n  const getDeals = async () => {\r\n    const url = `get_deals/`\r\n    const { data } = await customAxios(url)\r\n    setDeals(data)\r\n    // console.log(`deals`, data)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getDeals()\r\n  }, [])\r\n\r\n  return (\r\n    <HomeScreenContext.Provider\r\n      value={{\r\n      }}\r\n    >\r\n      <ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\r\n        {/* Deals recommendation */}\r\n        <View>\r\n          <Wrapper>\r\n            <DealsSlider deals={deals} />\r\n          </Wrapper>\r\n        </View>\r\n\r\n        {/* Categories */}\r\n        <Categories navigation={navigation} />\r\n\r\n      </ScrollView>\r\n    </HomeScreenContext.Provider>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useEffect} from \"react\";\nimport { View, Image, ScrollView, Text } from \"react-native\";\nimport { useAppContext } from \"../../context/appContext\";\n// import style from \"../Style\";\n\nconst DealsScreen = ({navigation, route}) => {\n  const {style, changeImagePath} = useAppContext()\n\n  const {\n    deal,\n  } = route.params\n\n  // useEffect(()=>{\n  //   console.log('deal', deal)\n  // }, [])\n\n  return (\n    <ScrollView showsVerticalScrollIndicator={false}>\n      <Text>{deal.title}</Text>\n      <Text>{deal.description}</Text>\n      <Text>{deal.hashtag}</Text>\n      <View style={style.dealImageContainer}>\n        {/* Deal image */}\n        <Image\n          style={style.dealImage}\n          source={{uri: changeImagePath(deal.image_url)}}\n        />\n      </View>\n    </ScrollView>\n  )\n}\n\nexport default DealsScreen","import React from \"react\";\r\nimport { View, Image, Text, Pressable, } from \"react-native\";\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport { useAppContext } from \"../../../context/appContext\";\r\n\r\nconst CustomChoice = (props) => {\r\n  const { style, changeImagePath, } = useAppContext()\r\n  const {\r\n    selection,\r\n    choice,\r\n    chosen,\r\n    // setChosen,\r\n    itemsChosen,\r\n    setItemsChosen,\r\n  } = props\r\n\r\n  function imagePath() {\r\n    return changeImagePath(choice.image__image_url)\r\n  }\r\n\r\n  function replaceChoice() {\r\n    // console.log(choice.selectionId)\r\n    let newItemsChosen = JSON.parse(JSON.stringify(itemsChosen))\r\n    let otherSelections = newItemsChosen?.filter(element => element.selectionId != choice.selectionId)\r\n    let changedSelection = newItemsChosen?.filter(element => element.selectionId == choice.selectionId)\r\n    try {\r\n      // console.log(`otherSelections`, otherSelections)\r\n      // console.log(`changedSelection`, changedSelection)\r\n      changedSelection.shift()\r\n      changedSelection.push(choice)\r\n    }\r\n    finally {\r\n      // console.log(`newItemsChosen`, newItemsChosen)\r\n      setItemsChosen([...otherSelections, ...changedSelection])\r\n    }\r\n  }\r\n\r\n  function subtractPress() {\r\n    // console.log(choice.selectionId)\r\n    let newItemsChosen = JSON.parse(JSON.stringify(itemsChosen))\r\n    if (choice.id != selection.default.id && choice.selectionId == selection.default.selectionId) {\r\n      let a = newItemsChosen?.find(element => JSON.stringify(element) == JSON.stringify(choice))\r\n      // console.log(`choice`, choice)\r\n      let b = newItemsChosen.indexOf(a)\r\n      try {\r\n        newItemsChosen.splice(b, 1)\r\n        newItemsChosen.push(selection.default)\r\n      }\r\n      finally {\r\n        // console.log(`newItemsChosen`, newItemsChosen)\r\n        setItemsChosen([...newItemsChosen])\r\n      }\r\n    }\r\n  }\r\n\r\n  function itemNumber() {\r\n    let number = chosen?.filter(element => element == choice.id)\r\n    return number.length\r\n  }\r\n\r\n  return (\r\n    <View style={style.dishContainer}>\r\n      {choice.image__image ?\r\n        // THERE IS IMAGE\r\n        <Pressable\r\n          onPress={replaceChoice}\r\n        >\r\n          <View style={style.dishImageContainer}>\r\n            <Image\r\n              style={style.DishImage}\r\n              source={imagePath()}\r\n            />\r\n          </View>\r\n\r\n          <View>\r\n            <Text numberOfLines={1}\r\n              style={{\r\n                width: '100%',\r\n                maxHeight: 18,\r\n                fontSize: 14,\r\n              }}\r\n            >\r\n              {choice.name}\r\n            </Text>\r\n            <View style={{ flexDirection: 'row' }}>\r\n              {chosen.includes(choice.id) ?\r\n                // CHOSEN\r\n                <EvilIcons name=\"check\" size={24} color=\"green\" />\r\n                :\r\n                // NOT CHOSEN\r\n                <EvilIcons name=\"check\" size={24} color=\"black\" />\r\n              }\r\n              {selection.default.id == choice.id ?\r\n                // IS DEFAULT\r\n                <Text>\r\n                  Included\r\n                </Text>\r\n                :\r\n                // IS NOT DEFAULT\r\n                <Text>\r\n                  {(choice.price - selection.default.price > 0 ? `+${choice.price - selection.default.price}đ` : `+0đ`)}\r\n                </Text>\r\n              }\r\n            </View>\r\n\r\n            {selection.default.amount != 1 &&\r\n              <View style={{ flexDirection: 'row', }}>\r\n                <Pressable\r\n                  onPress={subtractPress}\r\n                >\r\n                  <Text>⊖</Text>\r\n                </Pressable>\r\n                <Text style={{ marginLeft: 5, marginRight: 5 }}>{itemNumber()}</Text>\r\n                <Pressable onPress={replaceChoice}>\r\n                  <Text>⊕</Text>\r\n                </Pressable>\r\n              </View>\r\n\r\n            }\r\n          </View>\r\n\r\n        </Pressable>\r\n        :\r\n        // THERE ARE NOT IMAGES\r\n        <Pressable\r\n          onPress={replaceChoice}\r\n          style={{ flexDirection: 'row' }}\r\n        >\r\n          {chosen.includes(choice.id) ?\r\n            <EvilIcons name=\"check\" size={24} color=\"green\" />\r\n            :\r\n            <EvilIcons name=\"check\" size={24} color=\"black\" />\r\n          }\r\n\r\n          <Text numberOfLines={3}>{choice.name}</Text>\r\n        </Pressable>\r\n      }\r\n\r\n    </View>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default CustomChoice","import React, { useEffect, useState } from 'react'\r\nimport { View } from 'react-native'\r\n// import style from '../../Style'\r\nimport CustomChoice from './CustomChoice'\r\n\r\nconst CustomChoices = (props) => {\r\n  const {\r\n    selection,\r\n    itemsChosen,\r\n    setItemsChosen,\r\n  } = props\r\n\r\n  // CHANGE STYLE WHEN CHOSEN\r\n  const [chosen, setChosen] = useState([])\r\n\r\n  useEffect(() => {\r\n    let itemIds = itemsChosen?.filter(element => element.selectionId == selection.default.selectionId).map(element => {\r\n      return element.id\r\n    })\r\n    setChosen(itemIds)\r\n    // console.log(`chosen`, itemIds)\r\n  }, [itemsChosen])\r\n\r\n  return (\r\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap', }}>\r\n      {selection.choices?.map((choice) => {\r\n        return (\r\n          <CustomChoice key={choice.id}\r\n            selection={selection}\r\n            choice={choice}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n            itemsChosen={itemsChosen}\r\n            setItemsChosen={setItemsChosen}\r\n          />\r\n        )\r\n      })}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default CustomChoices","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { StyleSheet, Dimensions } from \"react-native\";\r\n\r\nconst ImageSliderWrapperContext = React.createContext()\r\nconst Wrapper = ({ children }) => {\r\n\r\n\tconst windowWidth= Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n\tconst windowHeight = windowWidth * 0.4\r\n\r\n\tconst initialState = {\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n\t}\r\n\r\n\tconst [state, setState] = useState(initialState)\r\n\t// console.log(state.windowWidth, state.windowHeight);\r\n\r\n\tfunction handleWindowSizeChange() {\r\n\t\tconst windowWidth1= Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n\t\tconst windowHeight2 = windowWidth * 0.4\r\n\t\tsetState({ ...state, windowWidth: windowWidth1, windowHeight: windowHeight2 })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', handleWindowSizeChange)\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', handleWindowSizeChange);\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst style = StyleSheet.create({\r\n\t\tcontainer: {\r\n\t\t\t// height, \r\n\t\t\tmaxHheight: 300,\r\n\t\t\tborderWidth: 2,\r\n\t\t\tborderColor: 'violet',\r\n\t\t},\r\n\t\tscroll: {\r\n\t\t\theight: '100%',\r\n\t\t\tmaxHheight: 300,\r\n\t\t},\r\n\t\timageContainer: {\r\n\t\t\twidth: state.windowWidth,\r\n\t\t\t// height: state.windowHeight,\r\n\t\t\taspectRatio: 2,\r\n\t\t\t// maxHeight:300,\r\n\t\t},\r\n\t\timage: {\r\n\t\t\t// flex: 1,\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\tresizeMode: 'stretch',\r\n\t\t},\r\n\t\tpagination: {\r\n\t\t\tposition: 'absolute',\r\n\t\t\tbottom: 0,\r\n\t\t\tflexDirection: 'row',\r\n\t\t\talignSelf: 'center',\r\n\t\t},\r\n\t\tdots: {\r\n\t\t\tcolor: 'white',\r\n\t\t\tmargin: 3,\r\n\t\t\tfontSize: state.windowWidth / 30,\r\n\t\t},\r\n\t\tdotActive: {\r\n\t\t\tcolor: 'green',\r\n\t\t\tmargin: 3,\r\n\t\t\tfontSize: state.windowWidth / 30,\r\n\t\t},\r\n\t})\r\n\r\n\r\n\treturn (\r\n\t\t<ImageSliderWrapperContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\t...state,\r\n\t\t\t\tstyle,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</ImageSliderWrapperContext.Provider>\r\n\t)\r\n}\r\n\r\nconst useImageSliderWrapperContext = () => {\r\n\treturn (\r\n\t\tuseContext(ImageSliderWrapperContext)\r\n\t)\r\n}\r\n\r\nexport { Wrapper, useImageSliderWrapperContext }","import React, {useState, useEffect, useRef} from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, } from \"react-native\";\r\nimport { useImageSliderWrapperContext} from \"../../../assets/wrappers/ImageSlider\";\r\nimport { useAppContext } from \"../../../context/appContext\";\r\n\r\nconst ImageSlider = (props) => {\r\n  const {\r\n    imageArray,\r\n  } = props\r\n\r\n  const {changeImagePath} = useAppContext()\r\n  const {style, windowWidth} = useImageSliderWrapperContext()\r\n\r\n  \r\n  // Dot state\r\n  const [currentSlide, setCurrentSlide] = useState(0)\r\n\r\n  // Scroll state\r\n  const scrollRef = useRef()\r\n  // const scrollRef = React.createRef()\r\n\r\n  var autoPlay = null\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`scrollRef:`, scrollRef)\r\n  // }, [scrollRef.current])\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`currentSlide:`, currentSlide)\r\n  // }, [currentSlide])\r\n\r\n  useEffect(()=>{\r\n    autoPlay = setTimeout(changeSlide, 2000)\r\n    \r\n    // clearTimeout right after setTimeout in infinity useEffect can help\r\n    // function run one time to one time\r\n    // this resolves turbulent-slide-problem after users swipe on their own\r\n    return () => clearTimeout(autoPlay)\r\n  })\r\n\r\n  // Change active dot\r\n  function onSlideChange(event) {\r\n    // clearInterval(autoPlay)\r\n\r\n    // const slide = Math.round(event.nativeEvent.contentOffset.x / event.nativeEvent.layoutMeasurement.width)\r\n    const slide = Math.round(event.nativeEvent.contentOffset.x / windowWidth)\r\n    // console.log(`slide: ${slide}`)\r\n    // console.log(`contentOffset.x: `, event.nativeEvent.contentOffset.x)\r\n    // console.log(`layoutMeasurement.width:`, event.nativeEvent.layoutMeasurement.width)\r\n\r\n    if (currentSlide !== slide) {\r\n      setCurrentSlide(slide)\r\n    }\r\n  }\r\n\r\n  function changeSlide() {\r\n    if (currentSlide === imageArray.length - 1) {\r\n      scrollRef.current.scrollTo({ x: 0, animated: true })\r\n    }\r\n    else {\r\n      scrollRef.current.scrollTo({ x: windowWidth * (currentSlide + 1), animated: true })\r\n    }\r\n  }\r\n\r\n  function userBeginDrag() {\r\n    clearTimeout(autoPlay)\r\n  }\r\n\r\n  function userEndDrag() {\r\n    autoPlay = setTimeout(autoPlay, 5000)\r\n  }\r\n\r\n  // console.log(windowWidth, windowHeight, style);\r\n\r\n  return (\r\n    <View style={style.container}>\r\n      <ScrollView ref = {scrollRef}\r\n        style={style.scroll}\r\n        pagingEnabled\r\n        horizontal \r\n        showsHorizontalScrollIndicator={false}\r\n        onScroll={onSlideChange}\r\n        scrollEventThrottle={windowWidth}\r\n        onScrollBeginDrag={()=>userBeginDrag()}\r\n        onScrollEndDrag={()=>userEndDrag()}\r\n        overScrollMode={'never'}\r\n      >\r\n        {imageArray?.map((image, index) => {\r\n          return (\r\n            <View\r\n              key={ index }\r\n              style={style.imageContainer} \r\n            >\r\n              <Image \r\n                source={{ uri: changeImagePath(image) }}\r\n                style={style.image} \r\n              />\r\n            </View>\r\n          )\r\n        })}\r\n      </ScrollView>\r\n\r\n      {/* <Text \r\n        style={{\r\n          position:'absolute',\r\n          bottom:0,\r\n          flexDirection:'row',\r\n          alignSelf: 'start',\r\n          fontSize: 22,\r\n          fontWeight:500,\r\n          color: '#0066ff',\r\n        }}>\r\n          Deals\r\n        </Text> */}\r\n      \r\n      <View\r\n        style={style.pagination}\r\n      >\r\n        {imageArray?.map((image, index)=>{\r\n          return (\r\n            <Text \r\n              key={index}\r\n              style={index === currentSlide ? style.dotActive : style.dots} \r\n            >\r\n              ⬤ \r\n            </Text>\r\n          )\r\n        })}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\n\r\n// const windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n// const windowHeight = windowWidth * 0.4\r\n\r\n// const style = StyleSheet.create({\r\n//   container: {\r\n//     // height, \r\n//     maxHheight: 300,\r\n//     borderWidth: 2,\r\n//     borderColor: 'violet',\r\n//   },\r\n//   scroll: {\r\n//     height:'100%',\r\n//     maxHheight:300,\r\n//   },\r\n//   imageContainer: { \r\n//     width: windowWidth, \r\n//     height: windowHeight,\r\n//     // maxHeight:300,\r\n//   },\r\n//   image: {\r\n//     // flex: 1,\r\n//     width: '100%',\r\n//     height: '100%',\r\n//     resizeMode: 'stretch',\r\n//   },\r\n//   pagination: {\r\n//     position: 'absolute', \r\n//     bottom: 0, \r\n//     flexDirection: 'row',\r\n//     alignSelf: 'center',\r\n//   },\r\n//   dots: {\r\n//     color: 'white',\r\n//     margin: 3,\r\n//     fontSize: windowWidth/30,\r\n//   },\r\n//   dotActive: {\r\n//     color: 'green',\r\n//     margin: 3,\r\n//     fontSize: windowWidth/30,\r\n//   },\r\n// })\r\n\r\nexport default ImageSlider","import React, { useEffect, useState } from 'react'\r\nimport { View, Text, Pressable, ScrollView, TextInput } from 'react-native'\r\n// import style from '../Style'\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport CustomChoices from './components/CustomChoices'\r\nimport ImageSlider from './components/ImageSlider'\r\n// import { useCookies } from 'react-cookie';\r\nimport { useAppContext } from '../../context/appContext';\r\nimport { Wrapper } from '../../assets/wrappers/ImageSlider';\r\n\r\n// Width and height of device\r\n// const windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n// const windowHeight = Dimensions.get('window').height \r\n\r\nexport const CustomScreenContext = React.createContext()\r\nconst CustomScreen = ({navigation, route}) => {\r\n\tconst {style, changeImagePath}=useAppContext()\r\n\r\n\tconst {\r\n\t\timages,\r\n\t\tcategoryDish, \r\n\t\tdishItems,\r\n\t} = route.params\r\n\r\n\t// ARRAY OF DISH IMAGES\r\n\tconst [imageArray, setImageArray] = useState([])\r\n\r\n\t// NUMBER OR DISHES\r\n\tconst [orderTotal, setOrderTotal] = useState(1)\r\n\r\n\tconst [itemsChosen, setItemsChosen] = useState([])\r\n\r\n\tconst [price, setPrice] = useState(0)\r\n\r\n\t// const [token, setToken] = useCookies(['kfc'])\r\n\r\n\t// IMAGE ARRAY\r\n\tuseEffect(() => {\r\n\t\t// CHANGE IMAGES OBJECT ARRAY TO ARRAY\r\n\t\t// console.log('custom dishItem', dishItems)\r\n\t\tlet imgArray = images.map((image) => changeImagePath(image.image_url))\r\n\t\tsetImageArray(imgArray)\r\n\t\t// console.log(`singleItems`, dishItems.singleItems)\r\n\t}, [images])\r\n\r\n\t// SET itemsChosen\r\n\tuseEffect(()=>{\r\n\t\t// Cannot setState inside map\r\n\t\tlet selectionsDefault = dishItems.selections?.map((selection) => {\r\n\t\treturn selection.default\r\n\t\t})\r\n\r\n\t\tlet singleItemDefault = dishItems.singleItems\r\n\t\t// console.log('singleItemDefault', singleItemDefault)\r\n\t\t\r\n\t\ttry {\r\n\t\tlet c = selectionsDefault?.find(element => element.amount > 1)\r\n\t\tif (c !== undefined) {\r\n\t\t\tfor (let i = 0; i < c.amount - 1 ; i += 1) {\r\n\t\t\tselectionsDefault.push(c)\r\n\t\t\t}\r\n\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t// console.log(`selectionsDefault`, selectionsDefault)\r\n\t\tsetItemsChosen([...selectionsDefault.sort(), ...singleItemDefault])  \r\n\t\t}\r\n\t\t\r\n\t}, [dishItems])\r\n\r\n\t// SET PRICE\r\n\tuseEffect(() => {\r\n\t\tlet total = categoryDish?.price\r\n\t\ttry {\r\n\t\titemsChosen?.map(element => {\r\n\t\t\t// CHECK FOR SINGLE ITEM\r\n\t\t\tif (Object.keys(element).includes('due')) {\r\n\t\t\ttotal += element.due\r\n\t\t\t}\r\n\t\t})\r\n\t\t}\r\n\t\tfinally {\r\n\t\tsetPrice(total)\r\n\t\t}\r\n\t}, [itemsChosen, categoryDish])\r\n\r\n\tfunction subtractAmount() {\r\n\t\tif (orderTotal > 1) {\r\n\t\tsetOrderTotal(orderTotal-1)\r\n\t}}\r\n\r\n\tfunction addAmount() {setOrderTotal(orderTotal+1)}\r\n\r\n\tfunction addToCart() {\r\n\t\tnavigation.goBack()\r\n\t\tnavigation.navigate('Cart', {\r\n\t\t\tdish: {\r\n\t\t\t\tid: Date.now(), // use time for key, because we can order a dish two times\r\n\t\t\t\t// dishId: categoryDish.id,\r\n\t\t\t\t// name: categoryDish.name,\r\n\t\t\t\tcategoryDish: categoryDish,\r\n\t\t\t\titemsChosen: itemsChosen,\r\n\t\t\t\tdishItems: dishItems,\r\n\t\t\t\timages: images,\r\n\t\t\t\tprice: price, //one set only\r\n\t\t\t\tamount: orderTotal,\r\n\t\t\t},\r\n\t\t})\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<CustomScreenContext.Provider\r\n\t\t\tvalue={{setItemsChosen, itemsChosen}}\r\n\t\t>\r\n\t\t\t{/* {console.log(`itemsChosen`, itemsChosen)} */}\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\r\n\t\t\t\t{/* ORDER AND COST */}\r\n\t\t\t\t<View style={style.orderTotal}>\r\n\t\t\t\t\t<Wrapper>\r\n\t\t\t\t\t\t<ImageSlider imageArray={imageArray} />\r\n\t\t\t\t\t</Wrapper>\r\n\r\n\t\t\t\t\t{/* DASHBOARD */}\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<Text style={style.customName}>{orderTotal}X {categoryDish.name.toUpperCase()}</Text>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* CHOSEN ITEM LIST */}\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t{itemsChosen.map((element, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<View key={index}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{flexGrow:1}}>・{element.name}</Text>\r\n\t\t\t\t\t\t\t\t<Text>+{element.due||0} đ</Text>\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<View style={{flexDirection:'row'}}>\r\n\t\t\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Pressable onPress={subtractAmount}>\r\n\t\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t}}>⊖</Text>\r\n\t\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t\t\t<TextInput value={orderTotal} onChangeText={setOrderTotal}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth:30,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingLeft: 5,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 5,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Pressable onPress={addAmount}>\r\n\t\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t\t}}>⊕</Text>\r\n\t\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\t}}>{orderTotal * price}</Text>\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<View style={{flexDirection:'row',paddingTop: 10,}}>\r\n\t\t\t\t\t\t\t<Text \r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tflexGrow:1,\r\n\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tORDER TOTAL\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t\t}}>{orderTotal * price}</Text>\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<Pressable style={style.customBtn} \r\n\t\t\t\t\t\t\t\tonPress={addToCart}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{color:'green', textAlign:'center', borderRadius:5}}>\r\n\t\t\t\t\t\t\t\t\tADD TO CART\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t\t\t<Pressable style={style.customBtn}\r\n\t\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\t\tnavigation.goBack()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{color:'green', textAlign:'center', borderRadius:5}}>\r\n\t\t\t\t\t\t\t\t\tBACK TO MENU\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<View>\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<Text>{categoryDish.name}</Text>\r\n\r\n\t\t\t\t\t\t{/* SELECT NON-DRINK ITEMS FIRST */}\r\n\t\t\t\t\t\t{dishItems.selections?.map((selection, index) => { \r\n\t\t\t\t\t\t\tif (selection.default.category__field !== 'singleItems-desserts-drinks') {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<View key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<Text>SELECT 1 IN OPTIONS BELOW</Text>\r\n\t\t\t\t\t\t\t\t\t\t<CustomChoices selection={selection}\r\n\t\t\t\t\t\t\t\t\t\t\titemsChosen={itemsChosen}\r\n\t\t\t\t\t\t\t\t\t\t\tsetItemsChosen={setItemsChosen} \r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t) \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t{/* SINGLE ITEMS */}\r\n\t\t\t\t\t\t{dishItems.singleItems?.map(singleItem => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<View key={singleItem.id}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<EvilIcons name=\"check\" size={24} color=\"green\" />\r\n\t\t\t\t\t\t\t\t\t<Text>{singleItem.name}</Text>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t{/* DINK SELECTION */}\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<Text>UP SIZE DESSERTS DRINKS</Text>\r\n\t\t\t\t\t\t\t{dishItems.selections?.map((selection, index) => {  \r\n\t\t\t\t\t\t\t\tif (selection.default.category__field === 'singleItems-desserts-drinks') {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<CustomChoices key={index} selection={selection}\r\n\t\t\t\t\t\t\t\t\t\t\titemsChosen={itemsChosen}\r\n\t\t\t\t\t\t\t\t\t\t\tsetItemsChosen={setItemsChosen}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t</View>\r\n\r\n\t\t\t</ScrollView>\r\n\r\n\t\t</CustomScreenContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default CustomScreen","import React, { useEffect, useState, useContext } from 'react'\r\nimport { View, Text, Image, Pressable, Dimensions, ScrollView, TextInput, CheckBox } from 'react-native'\r\nimport { DishContext } from './components/Dish'\r\n// import style from '../Style'\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport CustomChoices from './components/CustomChoices'\r\nimport ImageSlider from './components/ImageSlider';\r\nimport { useAppContext } from '../../context/appContext';\r\nimport { Wrapper } from '../../assets/wrappers/ImageSlider';\r\n\r\nexport const CustomScreenContext = React.createContext()\r\nconst CartEditOrder = ({navigation, route}) => {\r\n  const {style, changeImagePath} = useAppContext()\r\n\r\n  const {\r\n    order,\r\n  } = route.params\r\n\r\n  // ARRAY OF DISH IMAGES\r\n  const [imageArray, setImageArray] = useState([])\r\n\r\n  // NUMBER OR DISHES\r\n  const [orderAmount, setOrderAmount] = useState(1)\r\n\r\n  const [itemsChosen, setItemsChosen] = useState([])\r\n\r\n  const [price, setPrice] = useState(0)\r\n\r\n  function updateCart() {\r\n    navigation.goBack()\r\n    navigation.navigate('Cart', {\r\n      dish: {\r\n        id: order.id, // use time for key, because we can order a dish two times\r\n        // dishId: categoryDish.id,\r\n        // name: categoryDish.name,\r\n        categoryDish: order.categoryDish,\r\n        itemsChosen: itemsChosen,\r\n        dishItems: order.dishItems,\r\n        images: order.images,\r\n        price: price,\r\n        amount: orderAmount,\r\n      },\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // CHANGE IMAGES OBJECT ARRAY TO ARRAY\r\n    // console.log('custom dishItem', dishItems)\r\n    console.log(order.images)\r\n    let imgArray = order.images.map((image) => changeImagePath(image.image_url))\r\n    setImageArray(imgArray)\r\n    console.log(`singleItems`, order.dishItems.singleItems)\r\n\r\n    setItemsChosen(order.itemsChosen)\r\n    setPrice(order.price)\r\n    setOrderAmount(order.amount)\r\n  }, [order])\r\n\r\n  // SET PRICE\r\n  useEffect(() => {\r\n    let total = order?.categoryDish.price\r\n    try {\r\n      itemsChosen?.map(element => {\r\n        // CHECK FOR SINGLE ITEM\r\n        if (Object.keys(element).includes('due')) {\r\n          total += element.due\r\n        }\r\n      })\r\n    }\r\n    finally {\r\n      setPrice(total)\r\n    }\r\n  }, [itemsChosen, order])\r\n  \r\n  if (order == null) {\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <CustomScreenContext.Provider\r\n        value={{setItemsChosen, itemsChosen}}\r\n      >\r\n        {console.log(`itemsChosen`, itemsChosen)}\r\n        <ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n          \r\n          {/* ORDER AND COST */}\r\n          <View style={style.orderAmount}>\r\n            <Wrapper>\r\n              <ImageSlider imageArray={imageArray} />\r\n            </Wrapper>\r\n\r\n            {/* DASHBOARD */}\r\n            <View>\r\n              <Text style={style.customName}>{orderAmount}X {order.categoryDish.name.toUpperCase()}</Text>\r\n\r\n              {/* CHOSEN ITEM LIST */}\r\n              <View>\r\n                {itemsChosen.map((element, index) => {\r\n                  return (\r\n                    <View key={index} style={{\r\n                      flexDirection:'row',\r\n                    }}>\r\n                      <Text style={{flexGrow:1}}>・{element.name}</Text>\r\n                      <Text>+{element.due||0}</Text>\r\n                    </View>\r\n  \r\n                  )\r\n                })}\r\n              </View>\r\n              \r\n              <View style={{flexDirection:'row'}}>\r\n                <View style={{\r\n                  flexDirection:'row',\r\n                  flexGrow: 1,\r\n                }}>\r\n                  <Pressable \r\n                    onPress={()=>{\r\n                      if (orderAmount > 1) {\r\n                      setOrderAmount(orderAmount-1)\r\n                    }}}\r\n                  >\r\n                    <Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t}}>⊖</Text>\r\n                  </Pressable>\r\n                  <TextInput value={orderAmount} onChangeText={setOrderAmount} style={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth:30,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingLeft: 5,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 5,\r\n\t\t\t\t\t\t\t\t\t\t}} />\r\n                  <Pressable onPress={()=>{setOrderAmount(orderAmount+1)}}>\r\n                    <Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t\t}}>⊕</Text>\r\n                  </Pressable>\r\n                </View>\r\n  \r\n                <Text style={{\r\n                  fontSize: 18,\r\n                  fontFamily: \"National2\",\r\n                  lineHeight: 1.5,\r\n                  fontWeight: 600,\r\n                  alignSelf: 'center',\r\n                }}>{orderAmount * price}</Text>\r\n              </View>\r\n  \r\n            </View>\r\n  \r\n            <View>\r\n              <View style={{flexDirection:'row',paddingTop: 10,}}>\r\n                <Text style={{\r\n\t\t\t\t\t\t\t\t\tflexGrow:1,\r\n\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\t}}>ORDER TOTAL</Text>\r\n                <Text style={{\r\n                    fontSize: 18,\r\n                    fontFamily: \"National2\",\r\n                    lineHeight: 1.5,\r\n                    fontWeight: 600,\r\n                    color: 'red',\r\n                }}>{orderAmount * price}</Text>\r\n              </View>\r\n  \r\n              <View>\r\n                <View>\r\n                  {/* UPDATE CART */}\r\n                  <Pressable style={style.customBtn}\r\n                    onPress={updateCart}>\r\n                    <Text style={{color:'green', textAlign:'center'}}>UPDATE CART</Text>\r\n                  </Pressable>\r\n                  \r\n                  {/* BACK TO HOME */}\r\n                  <Pressable style={style.customBtn} \r\n                    onPress={()=>{\r\n                      navigation.navigate('Home')\r\n                    }}>\r\n                    <Text style={{color:'green', textAlign:'center'}}>ADD MORE COMBO</Text>\r\n                  </Pressable>\r\n  \r\n                </View>\r\n                \r\n                {/* GO BACK TO CART */}\r\n                <Pressable style={style.customBtn}\r\n                  onPress={() => {\r\n                    navigation.goBack()\r\n                  }}>\r\n                  <Text style={{color:'green', textAlign:'center'}}>BACK TO CART</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </View>\r\n  \r\n          <View>\r\n            <View>\r\n              <Text>{order.categoryDish.name}</Text>\r\n  \r\n              {/* SELECT NON-DRINK ITEMS FIRST */}\r\n              {order.dishItems.selections?.map((selection, index) => { \r\n  \r\n                if (selection.default.category__field !== 'singleItems-desserts-drinks')\r\n                {\r\n                  return (\r\n                    <View key={index} >\r\n                      <Text>SELECT 1 IN OPTIONS BELOW</Text>\r\n                      <CustomChoices selection={selection}\r\n                        itemsChosen={itemsChosen}\r\n                        setItemsChosen={setItemsChosen} />\r\n                    </View>\r\n                  ) \r\n                }\r\n              })}\r\n  \r\n              {/* SINGLE ITEMS */}\r\n              {order.dishItems.singleItems?.map((singleItem, index) => {\r\n                // if (singleItem === undefined || singleItem.length == 0) {\r\n                //   return (\r\n                //     <Text key={index}></Text>\r\n                //   )\r\n                // }\r\n                // else {\r\n                  return (\r\n                    <View key={singleItem.id}>\r\n                      <EvilIcons name=\"check\" size={24} color=\"green\" />\r\n                      <Text>{singleItem.name}</Text>\r\n                    </View>\r\n                  )\r\n                // }\r\n              })}\r\n  \r\n              {/* DINK SELECTION */}\r\n              <View>\r\n                <Text>UP SIZE DESSERTS DRINKS</Text>\r\n  \r\n                {order.dishItems.selections?.map((selection, index) => {  \r\n  \r\n                  if (selection.default.category__field === 'singleItems-desserts-drinks')\r\n                  {\r\n                    return (\r\n                      <CustomChoices key={index} selection={selection}\r\n                        itemsChosen={itemsChosen}\r\n                        setItemsChosen={setItemsChosen} />\r\n                    ) \r\n                  }\r\n                })}\r\n              </View>\r\n            </View>\r\n  \r\n            <View>\r\n  \r\n            </View>\r\n          </View>\r\n  \r\n        </ScrollView>\r\n  \r\n      </CustomScreenContext.Provider>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default CartEditOrder","import React from \"react\";\r\n// import { Dimensions} from \"react-native\";\r\nimport HomeScreen from \"../stacks/HomeScreen\";\r\nimport DealsScreen from \"../stacks/DealsScreen\";\r\n// import ComboScreen from \"../stacks/ComboScreen\";\r\nimport CustomScreen from '../stacks/CustomScreen'\r\nimport CartEditOrder from \"../stacks/CartEditOrder\";\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n// import { NavigationContainer } from \"@react-navigation/native\";\r\n// import { CookiesProvider } from \"react-cookie\";\r\n\r\n// Width and height of device\r\n// const windowWidth = Dimensions.get('window').width\r\n// const windowHeight = Dimensions.get('window').height\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction MyStack() {\r\n\r\n  return (\r\n    // <CookiesProvider>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n        <Stack.Screen name=\"Deals\" component={DealsScreen} />\r\n        {/* <Stack.Screen name=\"Combo\" component={ComboScreen} /> */}\r\n        <Stack.Screen name=\"Custom\" component={CustomScreen} />\r\n        <Stack.Screen name=\"EditCart\" component={CartEditOrder} />\r\n      </Stack.Navigator>\r\n    // </CookiesProvider>      \r\n  );\r\n}\r\n\r\nexport default MyStack","// import { getFocusedRouteNameFromRoute } from '@react-navigation/native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Text, View, ScrollView, StyleSheet, Dimensions, TextInput, Pressable } from 'react-native'\r\nimport { useCookies } from 'react-cookie';\r\nimport { useAppContext } from '../../context/appContext';\r\n\r\nexport const CartScreenContext = React.createContext()\r\n\r\nconst SettingsScreen = (props) => {\r\n  const {\r\n    style,\r\n    baseURL,\r\n    customAxios,\r\n  } = useAppContext()\r\n\r\n  const {\r\n    modalVisible,\r\n    setModalVisible,\r\n    navigation,\r\n    // route,\r\n    user,\r\n    setUser,\r\n    // showHistory,\r\n    // setShowHistory,\r\n  } = props\r\n\r\n  const [token, setToken, removeToken] = useCookies(['kfc'])\r\n\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  // Change button\r\n  const [showRegister, setShowRegister] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // console.log('cookie:', token['kfc'])\r\n    // getUser()\r\n  }, [token])\r\n\r\n  // Login handle\r\n  const login = (e) => {\r\n    // console.log(`login run`)\r\n    e.preventDefault()\r\n\r\n    // console.log(`username: ${username}, password: ${password}`)\r\n    // Get token then push to cookie\r\n    const url = `auth/`\r\n    customAxios.post(url, { username, password })\r\n      .then(response => response.data)\r\n      .then((jsonData) => {\r\n        // console.log(`token:`, jsonData)\r\n        setToken(\"kfc\", jsonData.token)\r\n        setToken('username', username)\r\n\r\n        // DONT KNOW WHY BUT IT NEED DOUBLE\r\n        setModalVisible(false)\r\n        setModalVisible(false)\r\n\r\n        // GET USER\r\n        customAxios(`current_user/`, {\r\n            headers: {\r\n              Authorization: `Token ${jsonData.token}`\r\n            }\r\n          }\r\n        )\r\n        .then(response=>response.data)\r\n        .then((data) => {\r\n          setUser(data)\r\n          // console.log('User:', data)\r\n          if (!Object.keys(data).includes('detail')) {\r\n            setModalVisible(false)\r\n            // console.log('Already login')\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  function logout() {\r\n    removeToken('kfc')\r\n    removeToken('username')\r\n    setModalVisible(true)\r\n  }\r\n\r\n  // Register handle\r\n  const register = async (event) => {\r\n    event.preventDefault()\r\n    // console.log(`register run: ${username} and password`)\r\n    \r\n    const url = `register/`\r\n    await customAxios.post(\r\n      url,\r\n      { username, password }\r\n    )\r\n    // console.log(data)\r\n    setTimeout(()=>{\r\n      login(event)\r\n    }, 500)\r\n\r\n  }\r\n\r\n  function changeButton() {\r\n    setShowRegister(!showRegister)\r\n  }\r\n\r\n  // To log in \r\n  // console.log(modalVisible);\r\n  if (modalVisible) {\r\n    return (\r\n      <ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\r\n        <View>\r\n\r\n          <TextInput placeholder='Username' value={username} onChangeText={setUsername}\r\n            style={{\r\n              width: windowWidth,\r\n              minHeight: 50,\r\n              marginBottom: 5,\r\n              backgroundColor: '#d0d5db',\r\n            }}\r\n          />\r\n\r\n          <TextInput secureTextEntry={true} placeholder='Password' value={password} onChangeText={setPassword}\r\n            style={{\r\n              width: windowWidth,\r\n              minHeight: 50,\r\n              marginBottom: 5,\r\n              backgroundColor: '#d0d5db',\r\n            }}\r\n          />\r\n\r\n          {/* BUTTOM */}\r\n          {showRegister ?\r\n            // Register\r\n            <Pressable onPress={register}\r\n              style={{\r\n                width: '50%',\r\n                backgroundColor: 'chartreuse',\r\n                fontWeight: 'bold',\r\n                textTransform: 'uppercase',\r\n                textAlign: 'center',\r\n                paddingBottom: 10,\r\n                paddingTop: 10,\r\n                borderRadius: 6,\r\n              }}\r\n            >\r\n              <Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Register</Text>\r\n            </Pressable>\r\n            :\r\n            // Login\r\n            <Pressable onPress={login}\r\n              style={{\r\n                width: '50%',\r\n                backgroundColor: 'chartreuse',\r\n                fontWeight: 'bold',\r\n                textTransform: 'uppercase',\r\n                textAlign: 'center',\r\n                paddingBottom: 10,\r\n                paddingTop: 10,\r\n                borderRadius: 6,\r\n              }}\r\n            >\r\n              <Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Login</Text>\r\n            </Pressable>\r\n          }\r\n\r\n          {showRegister ?\r\n            // CHANGE TO LOGIN\r\n            <Pressable onPress={changeButton} style={{ paddingTop: 15 }}>\r\n              <Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Already have an account? Sign in</Text>\r\n            </Pressable>\r\n            :\r\n            // CHANGE TO REGISTER\r\n            <Pressable onPress={changeButton} style={{ paddingTop: 15 }}>\r\n                <Text style={{\r\n                  fontSize: 16,\r\n                  fontWeight: 500,\r\n                }}>Don't have an account? <Text style={{color:'blue'}}>Sign up</Text></Text>\r\n            </Pressable>\r\n          }\r\n        </View>\r\n\r\n      </ScrollView>\r\n    )\r\n  }\r\n  // AFTER LOGIN\r\n  else {\r\n    return (\r\n      <ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n        <View>\r\n          <Text>Username:</Text>\r\n          <Text>{user.username}</Text>\r\n        </View>\r\n\r\n        <View>\r\n          <Text>Email:</Text>\r\n          <Text>{user.email}</Text>\r\n        </View>\r\n\r\n        <Pressable onPress={() => {\r\n          navigation.navigate('Cart')\r\n        }}>\r\n          <Text>Transaction History</Text>\r\n        </Pressable>\r\n        <Pressable onPress={logout}\r\n          style={{\r\n            width: '50%',\r\n            backgroundColor: 'chartreuse',\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase',\r\n            textAlign: 'center',\r\n            paddingBottom: 10,\r\n            paddingTop: 10,\r\n            borderRadius: 6,\r\n            marginTop: 5,\r\n          }}\r\n        >\r\n          <Text style={{\r\n            fontSize: 16,\r\n            fontWeight: 500,\r\n          }}>Logout</Text>\r\n        </Pressable>\r\n      </ScrollView>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default SettingsScreen\r\n\r\nconst windowWidth = Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n  },\r\n  modalView: {\r\n    // margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    // padding: '100%',\r\n    height: '100%',\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 20\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    width: '95%',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    borderBottomColor: 'gray',\r\n    borderBottomWidth: 1,\r\n    width: '100%',\r\n    paddingTop: 20,\r\n    paddingLeft: 7,\r\n    paddingRight: 7,\r\n  },\r\n  modalInnerText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n  },\r\n  modalChoosingText: {\r\n    color: 'green',\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\n","import { getFocusedRouteNameFromRoute } from '@react-navigation/native'\r\nimport React, {useContext, useEffect, useState} from 'react'\r\nimport { Text, View, Image, ScrollView, StyleSheet, Dimensions, Button, TextInput, Pressable } from 'react-native'\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst CartOrder = (props) => {\r\n  const {\r\n    order = {},\r\n    orders = [],\r\n    setOrders,\r\n  } = props\r\n\r\n  const navigation = useNavigation()\r\n  \r\n  // NUMBER OR DISHES\r\n  const [orderAmount, setOrderAmount] = useState(1)\r\n\r\n  const [price, setPrice] = useState(0)\r\n\r\n  useEffect(()=>{\r\n    setOrderAmount(order.amount)\r\n    setPrice(order.price)\r\n  }, [order])\r\n\r\n  useEffect(() => {\r\n    if (orderAmount != order.amount) {\r\n      order.amount = orderAmount\r\n      // order.price = orderAmount * order.price\r\n      let a = orders.find(element => element.id == order.id)\r\n      let index = orders.indexOf(a)\r\n      let ordersCopy = JSON.parse(JSON.stringify(orders))\r\n      try\r\n        {\r\n          ordersCopy.splice(index, 1, order)\r\n          // console.log('order:', order)\r\n        }\r\n      finally {\r\n        setOrders(ordersCopy)\r\n      }\r\n    }\r\n\r\n  }, [orderAmount])\r\n\r\n  function editOrder() {\r\n    navigation.navigate('EditCart', {\r\n      order,\r\n    })\r\n  }\r\n\r\n  function delOrder() {\r\n\t\tlet newOrders = orders.filter(element => element.id != order.id)\r\n\t\tsetOrders(newOrders)\r\n\t}\r\n\r\n  if (Object.keys(order).length == 0) {\r\n    return (\r\n      <View>\r\n        <Text>There are nothing here</Text>\r\n      </View>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <View style={{\r\n        borderWidth: 1,\r\n        borderColor: 'red',\r\n      }}>\r\n        <View style={{\r\n          flexDirection:'row',\r\n        }}>\r\n          <Text style={{\r\n            flexGrow: 1,\r\n            // color: '#000',\r\n            fontWeight: 600,\r\n            fontFamily: 'National2Condensed',\r\n            textTransform: 'uppercase',\r\n            marginBottom: '1rem',\r\n            fontSize: 26,\r\n          }}>{order?.categoryDish?.name.toUpperCase()}</Text>\r\n          <View style={{\r\n            flexDirection: 'row',\r\n          }}>\r\n            {/* EDIT ORDER */}\r\n            <Pressable\r\n              onPress={editOrder}\r\n            >\r\n              <MaterialIcons name=\"edit\" size={24} color=\"black\" />\r\n            </Pressable>\r\n  \r\n            {/* DELETE ORDER */}\r\n            <Pressable\r\n              onPress={delOrder}\r\n            >\r\n              <MaterialIcons name=\"highlight-remove\" size={24} color=\"black\" />\r\n            </Pressable>\r\n\r\n          </View>\r\n        </View>\r\n  \r\n        <View>\r\n          {order.itemsChosen?.map((item, index) => {\r\n            return (\r\n              <Text key={index}>・{item.name}</Text>\t\r\n            )\r\n          })}\r\n        </View>\r\n  \r\n        <View style={{\r\n            flexDirection:'row',\r\n          }}>\r\n          <View style={{\r\n            flexDirection:'row',\r\n            flexGrow: 1,\r\n          }}>\r\n            <Pressable \r\n              onPress={()=>{\r\n                if (orderAmount > 1) {\r\n                setOrderAmount(orderAmount-1)\r\n              }}}\r\n            >\r\n              <Text style={{\r\n                transform: 'scale(1.5)',\r\n              }}>⊖</Text>\r\n            </Pressable>\r\n\r\n            <TextInput style={{\r\n                width:30,\r\n                fontSize: 18,\r\n                paddingLeft: 5,\r\n                paddingRight: 5,\r\n              }}\r\n              value={orderAmount} onChangeText={setOrderAmount} />\r\n\r\n            <Pressable onPress={()=>{\r\n              setOrderAmount(orderAmount + 1)\r\n            }}>\r\n              <Text style={{\r\n                transform: 'scale(1.5)',\r\n              }}>⊕</Text>\r\n            </Pressable>\r\n          </View>\r\n  \r\n          <Text style={{\r\n            fontSize: 18,\r\n            fontFamily: \"National2\",\r\n            lineHeight: 1.5,\r\n            fontWeight: 600,\r\n            alignSelf: 'center',\r\n          }}>{orderAmount * price}</Text>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CartOrder","import React, {useState, useEffect} from \"react\";\r\nimport { View, ScrollView, Dimensions, Text, StyleSheet, Pressable, Modal} from \"react-native\";\r\nimport { useAppContext } from \"../../../context/appContext\";\r\n\r\nconst OrderHistory = (props) => {\r\n  const {\r\n    showHistory,\r\n    setShowHistory,\r\n    // modalVisible,\r\n  } = props\r\n  \r\n  const { style, customAxios, token } = useAppContext()\r\n  \r\n  // const navigation = useNavigation()\r\n\r\n  // const [token, setToken, removeToken] = useCookies(['kfc'])\r\n\r\n  const [allOrders, setAllOrders] = useState([])\r\n  \r\n  function getOrderHistory() {\r\n    const uri = `order/`\r\n    customAxios(uri, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Token ${token}`\r\n\t\t\t}\r\n\t\t})\r\n    .then(response=>response.data)\r\n    .then((data)=>{\r\n      setAllOrders(data)\r\n      // console.log(`allOrders:`, data)\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    // GET ORDER HISTORY\r\n\r\n    if (showHistory) {\r\n      getOrderHistory()\r\n    }\r\n  }, [showHistory])\r\n\r\n\r\n\r\n  \tfunction priceSum(orders) {\r\n      let priceSum = 0\r\n      try {\r\n        orders?.map(order => {\r\n          return priceSum += order.price * order.amount\r\n        }\r\n      )}\r\n      finally {\r\n        return priceSum\r\n      }\r\n    }\r\n  \r\n  if (allOrders.length == 0) {\r\n    return (\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={showHistory}\r\n        onRequestClose={() => {\r\n          setShowHistory(!showHistory)\r\n        }}\r\n      >\r\n        <View>\r\n          <ScrollView showsVerticalScrollIndicator={false}\r\n            style={style.homeContainer} \r\n          >\r\n            <Text>You have not ordered anything</Text>\r\n\r\n            <Pressable onPress={()=>{\r\n                setShowHistory(!showHistory)\r\n              }}\r\n              style={{\r\n                width: windowWidth/2,\r\n                backgroundColor: 'green',\r\n                color: 'rgb(232, 230, 227) !important',\r\n                fontWeight: 'bold',\r\n                textTransform:'uppercase',\r\n                textAlign:'center',\r\n                paddingBottom: 15,\r\n                paddingTop: 15,\r\n                borderRadius: 8,\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Text>\r\n                Close Modal\r\n              </Text>\r\n            </Pressable>\r\n\r\n          </ScrollView>\r\n        </View>\r\n      </Modal>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={showHistory}\r\n        onRequestClose={() => {\r\n          setShowHistory(!showHistory)\r\n        }}\r\n      >\r\n        <View style={styles.modalView}>\r\n\r\n          <ScrollView showsVerticalScrollIndicator={false}\r\n            style={[style.homeContainer, {flexGrow:1}]} \r\n          >\r\n            {allOrders?.map((element, index) => {\r\n              return (\r\n                <View key={index}\r\n                  style={{\r\n                    borderColor: 'red',\r\n                    borderBottomWidth: 1,\r\n                    marginBottom: 10,\r\n                    paddingBottom:20,\r\n                  }}\r\n                >\r\n                  <View>\r\n                    {element.orders.map(order => {\r\n                      return (\r\n                        <View key={order.id}\r\n                          style={{\r\n                            // borderColor: 'green',\r\n                            // borderWidth: 1,\r\n                            paddingBottom: 5,\r\n                          }}\r\n                        >\r\n                          <Text style={{\r\n                            flexGrow: 1,\r\n                            // color: '#000',\r\n                            fontWeight: 600,\r\n                            fontFamily: 'National2Condensed',\r\n                            textTransform: 'uppercase',\r\n                            fontSize: 26,\r\n                            marginBottom: 10,\r\n                          }}>\r\n                            {order?.categoryDish?.name.toUpperCase()}\r\n                          </Text>\r\n                    \r\n                          <View>\r\n                            {order.itemsChosen?.map((item, index) => {\r\n                              return (\r\n                                <Text key={index}>・{item.name}</Text>\t\r\n                              )\r\n                            })}\r\n                          </View>\r\n                    \r\n                          <View style={{flexDirection:'row'}}>\r\n                            <Text style={{flexGrow:1}}>{element.orders.length} Items</Text>\r\n                            <Text>{order.amount * order.price}</Text>\r\n                          </View>\r\n                        </View>\r\n                      )\r\n                    })}\r\n                  </View>\r\n            \r\n                  <View style={{flexDirection: 'row', paddingTop:20}}>\r\n                    <Text style={{\r\n                      flexGrow: 1,\r\n                      fontSize: 18,\r\n                      fontFamily: \"National2\",\r\n                      lineHeight: 1.5,\r\n                      fontWeight: 600,\r\n                    }}>\r\n                      SUBTOTAL\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                      fontSize: 18,\r\n                      fontFamily: \"National2\",\r\n                      lineHeight: 1.5,\r\n                      fontWeight: 600,\r\n                      color: 'red',\r\n                    }}>\r\n                      {priceSum(element.orders)}\r\n                    </Text>\r\n                  </View>\r\n          \r\n                </View>\r\n              )\r\n            })}\r\n          </ScrollView>\r\n        \r\n          <Pressable\r\n            onPress={() => {\r\n              setShowHistory(!showHistory)\r\n            }}\r\n            style={{\r\n              width: '100%',\r\n              backgroundColor: 'green',\r\n              paddingBottom: 15,\r\n              paddingTop: 15,\r\n              borderRadius: 8,\r\n              marginTop: 5,\r\n              textAlign:'center',\r\n              // position: 'fixed',\r\n              // bottom: 0,\r\n            }}\r\n          >\r\n            <Text style={{\r\n              // width: '100%',\r\n              color: 'rgb(232, 230, 227) !important',\r\n              fontWeight: 'bold',\r\n              textTransform:'uppercase',\r\n            }}>\r\n              GO BACK\r\n            </Text>\r\n          </Pressable>\r\n        </View>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nconst windowWidth = Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n  },\r\n  modalView: {\r\n    paddingLeft: windowWidth>1000?(windowWidth-1000)/2:5,\r\n    paddingRight: windowWidth>1000?(windowWidth-1000)/2:5,\r\n    height: windowHeight,\r\n    width: '100%',\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    flexDirection: 'column',\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 20\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    width: '95%',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    borderBottomColor: 'gray',\r\n    borderBottomWidth: 1,\r\n    width: '100%',\r\n    paddingTop: 20,\r\n    paddingLeft: 7,\r\n    paddingRight: 7,\r\n  },\r\n  modalInnerText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n  },\r\n  modalChoosingText: {\r\n    color: 'green',\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n  },  \r\n});\r\n\r\nexport default OrderHistory;","// import { getFocusedRouteNameFromRoute } from '@react-navigation/native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Text, View, ScrollView, StyleSheet, Dimensions, TextInput, Pressable, Modal } from 'react-native'\r\nimport CartOrder from '../stacks/components/CartOrder';\r\nimport { useCookies } from 'react-cookie';\r\nimport OrderHistory from '../stacks/components/OrderHistory';\r\nimport { useAppContext } from '../../context/appContext';\r\n\r\nconst CartScreen = (props) => {\r\n\tconst {\r\n\t\tmodalVisible,\r\n\t\t// setModalVisible,\r\n\t\tnavigation,\r\n\t\troute,\r\n\t\tshowHistory,\r\n\t\tsetShowHistory,\r\n\t} = props\r\n\t\r\n\t// DISH NEED INITIAL VALUE, DEFINED IN APP INITIALPARAMS\r\n\tconst {\r\n\t\tdish,\r\n\t} = route.params\r\n\r\n\tconst {\r\n\t\tstyle,\r\n\t\ttoken,\r\n\t\tcustomAxios,\r\n\t} = useAppContext()\t\r\n\r\n\t// const [token, setToken, removeToken] = useCookies(['kfc'])\r\n\r\n\t// const [username, setUsername] = useState(\"\")\r\n\t// const [password, setPassword] = useState(\"\")\r\n\r\n\t// Change button\r\n\t// const [showRegister, setShowRegister] = useState(false)\r\n\r\n\t// ALL ITEMS\r\n\tconst [orders, setOrders] = useState([])\r\n\r\n\t// NOTE FOR ORDER\r\n\tconst [note, setNote] = useState('')\r\n\r\n\t// PROMOTION\r\n\tconst [promotion, setPromotion] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log('dish', dish)\r\n\t\t// console.log('cookie:', token['kfc'])\r\n\t\t// getUser()\r\n\r\n\t}, [token, dish])\r\n\r\n\tconst sendOrder = async () => {\r\n\t\tlet body = orders?.map(order => {\r\n\t\t\treturn (\r\n\t\t\t\t{\r\n\t\t\t\t\t// orderId: order.id,\r\n\t\t\t\t\t// dish: order.categoryDish.id, \r\n\t\t\t\t\t// amount: order.amount,\r\n\t\t\t\t\torder: order,\r\n\t\t\t\t\t// price: order.price,\r\n\t\t\t\t\tpromotion: promotion,\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t})\r\n\t\tlet a = { orders: orders, orderDetails: body }\r\n\r\n\t\tconst url = `order/`\r\n\t\tconst { data } = await customAxios.post(url, { data: a }, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Token ${token}`\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetOrders([])\r\n\t}\r\n\r\n\tconst initializeOrder = () => {\r\n\t\tlet check = orders.find(e => e.id == dish.id)\r\n\t\tif (dish != undefined) {\r\n\t\t\tif (check === undefined) {\r\n\t\t\t\tsetOrders([...orders, dish])\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet index = orders.indexOf(check)\r\n\t\t\t\tlet copyArray = JSON.parse(JSON.stringify(orders))\r\n\t\t\t\ttry { copyArray.splice(index, 1, dish) }\r\n\t\t\t\tfinally { setOrders(copyArray) }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tinitializeOrder()\r\n\t}, [dish])\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log(`orders:`, orders)\r\n\t// }, [orders])\r\n\r\n\tfunction priceSum() {\r\n\t\tlet priceSum = 0\r\n\t\ttry {\r\n\t\t\torders?.map(order => {\r\n\t\t\t\treturn priceSum += order.price * order.amount\r\n\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\treturn priceSum\r\n\t\t}\r\n\t}\r\n\r\n\t// HAVE NOT LOGIN\r\n\tif (modalVisible) {\r\n\t\treturn (\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tnavigation.navigate('Settings')\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '50%',\r\n\t\t\t\t\t\tbackgroundColor: 'chartreuse',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tpaddingBottom: 10,\r\n\t\t\t\t\t\tpaddingTop: 10,\r\n\t\t\t\t\t\tborderRadius: 6,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\tfontSize: 16,\r\n\t\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\t}}>LOGIN FIRST</Text>\r\n\t\t\t\t</Pressable>\r\n\r\n\t\t\t</ScrollView>\r\n\t\t)\r\n\t}\r\n\t// HAVE NOT ORDER ANYTHING\r\n\telse if (orders.length == 0) {\r\n\t\treturn (\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\t\t\t\t<OrderHistory\r\n\t\t\t\t\tshowHistory={showHistory}\r\n\t\t\t\t\tsetShowHistory={setShowHistory}\r\n\t\t\t\t/>\r\n\t\t\t\t<Text style={{\r\n\t\t\t\t}}>\r\n\t\t\t\t\tYour Cart is empty?\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text>Making order to enjoy KFC special secret recipes</Text>\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '50%',\r\n\t\t\t\t\t\tbackgroundColor: 'green',\r\n\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tnavigation.navigate('Main')\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{ color: 'chartreuse' }}>ORDER NOW</Text>\r\n\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\tbackgroundColor: 'green',\r\n\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tsetShowHistory(true)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{ color: 'chartreuse' }}>ORDER HISTORY</Text>\r\n\t\t\t\t</Pressable>\r\n\t\t\t</ScrollView>\r\n\t\t)\r\n\t}\r\n\t// Ordered\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tanimationType=\"slide\"\r\n\t\t\t\t\ttransparent={true}\r\n\t\t\t\t\tvisible={showHistory}\r\n\t\t\t\t\tonRequestClose={() => {\r\n\t\t\t\t\t\tsetShowHistory(!showHistory)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<OrderHistory\r\n\t\t\t\t\t\tshowHistory={showHistory}\r\n\t\t\t\t\t\tsetShowHistory={setShowHistory}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t<Text style={{\r\n\t\t\t\t\tbackgroundColor: 'rgb(182, 0, 34)',\r\n\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t}}>PROCEED TO PAYMENT</Text>\r\n\r\n\t\t\t\t{orders?.map((order) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<CartOrder key={order.id}\r\n\t\t\t\t\t\t\torder={order}\r\n\t\t\t\t\t\t\torders={orders}\r\n\t\t\t\t\t\t\tsetOrders={setOrders}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t<TextInput style={{\r\n\t\t\t\t\twidth: windowWidth,\r\n\t\t\t\t\tminHeight: 50,\r\n\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\tbackgroundColor: '#d0d5db',\r\n\t\t\t\t}}\r\n\t\t\t\t\tplaceholder='Notes for your order' value={note} onChangeText={setNote}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<View style={{ width: '100%' }}>\r\n\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t}}>{orders.length} Items</Text>\r\n\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tfontSize: 20,\r\n\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t}}>{priceSum()}</Text>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\tpaddingBottom: 20,\r\n\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\tminHeight: 50,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<TextInput style={{\r\n\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\tminHeight: 50,\r\n\t\t\t\t\t\t\t\tbackgroundColor: '#d0d5db',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={promotion} onChangeText={setPromotion} placeholder='Enter promotion code' />\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<Pressable style={{\r\n\t\t\t\t\t\t\tborderWidth: 1,\r\n\t\t\t\t\t\t\tborderColor: 'gray',\r\n\t\t\t\t\t\t\theight: 50,\r\n\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\tpadding: 5,\r\n\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tAPPLY CODE\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\tpaddingBottom: 20,\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tSUBTOTAL\r\n\t\t\t\t\t\t</Text>\r\n\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t}}>{priceSum()}</Text>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Pressable\r\n\t\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\t\tnavigation.navigate('Main')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgb(182, 0, 34)',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\t}}>CONTINUE ORDERING</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t\t\t<Pressable onPress={sendOrder}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgb(182, 0, 34)',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\t}}>SEND ORDER</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<Pressable onPress={() => {\r\n\t\t\t\t\t\t\tsetShowHistory(true)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t// width: '100%',\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'green',\r\n\t\t\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\t\t\tmarginTop: 5,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tORDER HISTORY\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t</View>\r\n\r\n\r\n\r\n\t\t\t</ScrollView>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default CartScreen\r\n\r\nconst windowWidth = Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nconst styles = StyleSheet.create({\r\n\tcenteredView: {\r\n\t},\r\n\tmodalView: {\r\n\t\t// margin: 20,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tborderRadius: 20,\r\n\t\t// padding: '100%',\r\n\t\theight: '100%',\r\n\t\talignItems: \"center\",\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 20\r\n\t\t},\r\n\t\tshadowOpacity: 0.25,\r\n\t\tshadowRadius: 4,\r\n\t\televation: 5\r\n\t},\r\n\tbutton: {\r\n\t\twidth: '95%',\r\n\t\tborderRadius: 5,\r\n\t\tpadding: 10,\r\n\t\televation: 2\r\n\t},\r\n\tbuttonOpen: {\r\n\t\tbackgroundColor: \"#F194FF\",\r\n\t},\r\n\tbuttonClose: {\r\n\t\tbackgroundColor: \"#2196F3\",\r\n\t},\r\n\ttextStyle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontWeight: \"bold\",\r\n\t\ttextAlign: \"center\"\r\n\t},\r\n\tmodalText: {\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t\tmarginBottom: 15,\r\n\t\tborderBottomColor: 'gray',\r\n\t\tborderBottomWidth: 1,\r\n\t\twidth: '100%',\r\n\t\tpaddingTop: 20,\r\n\t\tpaddingLeft: 7,\r\n\t\tpaddingRight: 7,\r\n\t},\r\n\tmodalInnerText: {\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 14,\r\n\t\tflexGrow: 1,\r\n\t\ttextAlign: 'left',\r\n\t},\r\n\tmodalChoosingText: {\r\n\t\tcolor: 'green',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 14,\r\n\t},\r\n});\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons'\r\nimport MainContainer from './navigation/bottomTabs/MainContainer';\r\nimport SettingsScreen from './navigation/bottomTabs/SettingsScreen'\r\nimport CartScreen from './navigation/bottomTabs/CartScreen'\r\nimport { CookiesProvider} from 'react-cookie'\r\nimport { AppProvider, baseURL, token} from './context/appContext';\r\nimport axios from 'axios';\r\n\r\nconst homeName = 'Main'\r\nconst cartName = 'Cart'\r\nconst settingsName = 'Settings'\r\nconst Tab = createBottomTabNavigator()\r\n\r\nconst App = () => {\r\n  // SHOW LOGIN MODAL\r\n  const [modalVisible, setModalVisible] = useState(true)\r\n\r\n  // SHOW ORDER HISTOPRY\r\n  const [showHistory, setShowHistory] = useState(false)\r\n\r\n  const [user, setUser] = useState([])\r\n\r\n  const getUser = () => {\r\n    // console.log(baseURL, token);\r\n\r\n    axios(`${baseURL}current_user/`, {headers:{Authorization:`Token ${token}`}})\r\n    .then(response=>response.data)\r\n    .then((data)=>{\r\n      setUser(data)\r\n      // console.log('User:', data)\r\n      if (!Object.keys(data).includes('detail')) {\r\n        setModalVisible(false)\r\n        // console.log('Already login')\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // CHECK CURRENT TOKEN\r\n    // console.log('Check login');\r\n    getUser()\r\n  }, [token])\r\n\r\n\r\n  return (\r\n    <CookiesProvider>\r\n      <AppProvider>\r\n        <NavigationContainer>\r\n          <Tab.Navigator\r\n            initialRouteName={homeName}\r\n            screenOptions={({ route }) => ({\r\n              tabBarIcon: ({ focused, color, size }) => {\r\n                let iconName\r\n                let rn = route.name\r\n\r\n                if (rn === homeName) {\r\n                  iconName = focused ? 'home' : 'home-outline'\r\n                }\r\n                else if (rn === cartName) {\r\n                  iconName = focused ? 'cart' : 'cart-outline'\r\n                }\r\n                else if (rn === settingsName) {\r\n                  iconName = focused ? 'settings' : 'settings-outline'\r\n                }\r\n                return (\r\n                  <Ionicons name={iconName} size={size} color={color} />\r\n                )\r\n              },\r\n              // activeTinColor: 'tomato',\r\n              // inactiveTinColor: 'grey',\r\n              // title: 'Hello',\r\n              headerShown: false,\r\n              headerStyle: { backgroundColor: 'papayawhip' },\r\n              labelStyle: { paddingBottom: 10, fontSize: 10 },\r\n              style: { padding: 10, height: 70 },\r\n            })}\r\n          >\r\n\r\n            <Tab.Screen name={homeName} component={MainContainer} />\r\n\r\n            <Tab.Screen name={cartName}\r\n              // component={CartScreen}\r\n              children={props => (\r\n                <CartScreen {...props}\r\n                  modalVisible={modalVisible}\r\n                  setModalVisible={setModalVisible}\r\n                  showHistory={showHistory}\r\n                  setShowHistory={setShowHistory}\r\n                />\r\n              )}\r\n\r\n              initialParams={{\r\n                'dish': undefined,\r\n              }}\r\n            />\r\n            <Tab.Screen name={settingsName}\r\n              //  component={SettingsScreen} \r\n              children={props => (\r\n                <SettingsScreen {...props}\r\n                  modalVisible={modalVisible}\r\n                  setModalVisible={setModalVisible}\r\n                  user={user}\r\n                  setUser={setUser}\r\n                  showHistory={showHistory}\r\n                  setShowHistory={setShowHistory}\r\n                />\r\n              )}\r\n            />\r\n\r\n          </Tab.Navigator>\r\n        </NavigationContainer>\r\n      </AppProvider>\r\n    </CookiesProvider>\r\n\r\n  )\r\n}\r\n\r\nexport default App"],"sourceRoot":""}