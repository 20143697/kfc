{"version":3,"sources":["context/appContext.js","navigation/stacks/components/Category.js","navigation/stacks/components/SingleItemCategory.js","navigation/stacks/components/SingleItemCategories.js","navigation/stacks/components/Dish.js","navigation/stacks/components/Dishes.js","navigation/stacks/components/Categories.js","assets/wrappers/DealsSlider.js","navigation/stacks/components/DealsSlider.js","navigation/stacks/HomeScreen.js","navigation/stacks/DealsScreen.js","navigation/stacks/components/CustomChoice.js","navigation/stacks/components/CustomChoices.js","assets/wrappers/ImageSlider.js","navigation/stacks/components/ImageSlider.js","navigation/stacks/CustomScreen.js","navigation/stacks/CartEditOrder.js","navigation/bottomTabs/MainContainer.js","navigation/bottomTabs/SettingsScreen.js","navigation/stacks/components/CartOrder.js","navigation/stacks/components/OrderHistory.js","navigation/bottomTabs/CartScreen.js","App.js"],"names":["token","cname","name","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","getCookie","initialState","windowWidth","Dimensions","get","width","windowHeight","height","host","baseURL","AppContext","React","createContext","AppProvider","children","useState","state","setState","handleWindowSizeChange","useEffect","window","addEventListener","removeEventListener","style","StyleSheet","create","homeContainer","paddingLeft","paddingRight","paddingTop","marginTop","marginLeft","marginRight","borderColor","borderWidth","minHeight","homeCategories","flexDirection","justifyContent","homeCategory","alignItems","maxWidth","maxHeight","borderRadius","homeCategoryChosen","homeSingleItemCategory","homeSingleItemCategoryChosen","homeFoodListCover","homeFoodList","flexWrap","dishContainer","flexGrow","marginBottom","dishName","overflow","wordWrap","hyphens","fontSize","dishImageContainer","aspectRatio","DishImage","resizeMode","dishInfo","dishInfoHide","textOverflow","dishInfoShow","customBtn","alignSelf","customOrder","customName","fontStyle","color","fontWeight","customList","dealImageContainer","dealImage","customAxios","axios","authFetch","interceptors","request","use","config","headers","common","error","Promise","reject","Provider","value","changeImagePath","image","baseUrl","includes","useAppContext","useContext","Category","props","category","setShowSingleItems","categoryChosen","setCategoryChosen","Pressable","onPress","id","Text","field","replace","toUpperCase","SingleItemCategory","singleItemCategory","Image","source","uri","image_url","SingleItemCategories","categories","View","filter","input","Boolean","startsWith","filterSingleItems","map","Dish","categoryDish","navigation","useNavigation","images","setImages","dishItems","setDishItems","loading","setLoading","hideInfo","setHideInfo","shorten","setShorten","choicesText","array","text","substr","customProps","navigate","console","log","category__field","hideDishInfo","url","then","response","data","url1","finally","homeFoodContainer","p","undefined","imagePath","numberOfLines","price","selections","selection","default","index","choices","singleItems","singleItem","MaterialIcons","size","transform","transitionDuration","textAlign","itemsChosen","selectionsDefault","singleItemDefault","dish","Date","now","amount","Dishes","categoryDishes","AntDesign","Categories","setCategories","setCategoryDishes","showSingleItems","getCategories","resolve","a","find","Error","catch","err","findFirstComboId","alignContent","filterCombo","DealsSliderWrapperContext","Wrapper","windowWidth1","windowHeight1","container","maxHheight","scroll","imageContainer","pagination","position","bottom","dots","margin","dotActive","DealsSlider","deals","currentSlide","setCurrentSlide","scrollRef","useRef","autoPlay","changeSlide","current","scrollTo","x","animated","setTimeout","clearTimeout","ScrollView","ref","pagingEnabled","horizontal","showsHorizontalScrollIndicator","onScroll","event","slide","Math","round","nativeEvent","contentOffset","scrollEventThrottle","onScrollBeginDrag","onScrollEndDrag","overScrollMode","deal","imagePress","HomeScreenContext","HomeScreen","setDeals","getDeals","showsVerticalScrollIndicator","DealsScreen","route","params","title","description","hashtag","CustomChoice","choice","chosen","setItemsChosen","replaceChoice","selectionId","newItemsChosen","JSON","parse","stringify","otherSelections","element","changedSelection","shift","push","image__image","image__image_url","EvilIcons","b","splice","CustomChoices","setChosen","itemIds","ImageSliderWrapperContext","windowHeight2","ImageSlider","imageArray","CustomScreenContext","CustomScreen","setImageArray","orderTotal","setOrderTotal","setPrice","imgArray","sort","total","Object","keys","due","TextInput","onChangeText","fontFamily","lineHeight","goBack","CartEditOrder","order","orderAmount","setOrderAmount","Stack","createNativeStackNavigator","MyStack","Navigator","Screen","component","SettingsScreen","modalVisible","setModalVisible","user","setUser","useCookies","setToken","removeToken","username","setUsername","password","setPassword","showRegister","setShowRegister","login","e","preventDefault","post","jsonData","Authorization","register","changeButton","placeholder","backgroundColor","secureTextEntry","textTransform","paddingBottom","email","centeredView","modalView","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","button","padding","buttonOpen","buttonClose","textStyle","modalText","borderBottomColor","borderBottomWidth","modalInnerText","modalChoosingText","CartOrder","orders","setOrders","ordersCopy","newOrders","item","styles","OrderHistory","showHistory","setShowHistory","allOrders","setAllOrders","priceSum","Modal","animationType","transparent","visible","onRequestClose","CartScreen","note","setNote","promotion","setPromotion","sendOrder","body","orderDetails","check","copyArray","initializeOrder","Tab","createBottomTabNavigator","App","CookiesProvider","NavigationContainer","initialRouteName","screenOptions","tabBarIcon","iconName","focused","rn","Ionicons","headerShown","headerStyle","labelStyle","MainContainer","initialParams"],"mappings":"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","file":"static/js/app.c17bcc9d.chunk.js","sourcesContent":["import { StyleSheet, Dimensions } from 'react-native'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\n// To void error when try to get undefined cookie, use this function istead of package\r\nfunction getCookie(cname) {\r\n  let name = cname + \"=\";\r\n  let ca = document.cookie.split(';');\r\n  for(let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nconst token = getCookie('kfc')\r\nconst host = (process.env.NODE_ENV === \"development\") ? \"http://127.0.0.1:8000\" : \"\"\r\nconst baseURL = `${host}/api/v1/`\r\n\r\nconst initialState = {\r\n  windowWidth: Dimensions.get('window').width,\r\n  windowHeight: Dimensions.get('window').height,\r\n  token: token,\r\n  host: host,\r\n  baseURL: baseURL,\r\n}\r\n\r\nconst AppContext = React.createContext()\r\nconst AppProvider = ({ children }) => {\r\n\r\n  const [state, setState] = useState(initialState)\r\n\r\n  function handleWindowSizeChange() {\r\n    // setWindowWidth(Dimensions.get('window').width)\r\n    // setWindowHeight(Dimensions.get('window').height)\r\n    setState({...state, windowWidth: Dimensions.get('window').width, windowHeight: Dimensions.get('window').height})\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleWindowSizeChange)\r\n    return () => {\r\n      window.removeEventListener('resize', handleWindowSizeChange);\r\n    }\r\n  }, [])\r\n\r\n\r\n  const style = StyleSheet.create({\r\n    // HomeScreen\r\n    homeContainer: {\r\n      width: state.windowWidth > 1000 ? 1000 : state.windowWidth,\r\n      // maxWidth: 1000,\r\n      // paddingLeft: windowWidth > 1000 ? (windowWidth - 1000)/2 : 5,\r\n      paddingLeft: state.windowWidth > 1000 ? 'auto' : 5,\r\n      // paddingRight: windowWidth > 1000 ? (windowWidth - 1000)/2 : 5,\r\n      paddingRight: state.windowWidth > 1000 ? 'auto' : 5,\r\n      paddingTop: 5,\r\n      height: state.windowHeight - 100,\r\n      marginTop: 10,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      borderColor: 'green',\r\n      borderWidth: 3,\r\n      minHeight: state.windowHeight - 100,\r\n      height: 'auto',\r\n      // borderLeftWidth: 1,\r\n      // borderRightWidth: 1,\r\n    },\r\n    homeCategories: {\r\n      flexDirection: 'row',\r\n      borderColor: 'violet',\r\n      borderWidth: 2,\r\n      justifyContent: \"space-around\",\r\n      marginTop: 10,\r\n    },\r\n    homeCategory: {\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: 0.2 * state.windowWidth,\r\n      maxWidth: 200,\r\n      height: 0.1 * state.windowWidth,\r\n      maxHeight: 200,\r\n      borderColor: 'lightblue',\r\n      borderWidth: 1,\r\n      borderRadius: 10,\r\n    },\r\n    homeCategoryChosen: {\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderWidth: 2,\r\n      borderRadius: 8,\r\n      width: 0.2 * state.windowWidth,\r\n      height: 0.1 * state.windowWidth,\r\n      borderColor: 'orange',\r\n    },\r\n    homeSingleItemCategory: {\r\n      width: 0.2 * state.windowWidth,\r\n      maxWidth: 200,\r\n      height: 0.2 * state.windowWidth,\r\n      maxHeight: 200,\r\n      borderColor: 'lightblue',\r\n      borderWidth: 1,\r\n      borderRadius: 10,\r\n    },\r\n    homeSingleItemCategoryChosen: {\r\n      borderWidth: 2,\r\n      borderRadius: 8,\r\n      width: 0.2 * state.windowWidth,\r\n      height: 0.2 * state.windowWidth,\r\n      borderColor: 'orange',\r\n    },\r\n    homeFoodListCover: {\r\n      // textAlign:'center',\r\n      marginTop: 10,\r\n    },\r\n    homeFoodList: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      borderWidth: 2,\r\n      borderColor: 'Crimson',\r\n      // justifyContent: 'flex-start',\r\n      // justifyContent: 'space-around',\r\n      justifyContent: 'center',\r\n    },\r\n    dishContainer: {\r\n      borderColor: 'green',\r\n      borderWidth: 1,\r\n      width: 0.32 * state.windowWidth,\r\n      height: 'fit-content',\r\n      paddingLeft: state.windowWidth > 1000 ? '2.5%' : 0.033 * state.windowWidth,\r\n      paddingRight: state.windowWidth > 1000 ? '2.5%' : 0.033 * state.windowWidth,\r\n      maxWidth: 240,\r\n      flexDirection: 'column',\r\n      flexGrow: 1,\r\n      marginBottom: 20,\r\n    },\r\n    dishName: {\r\n      borderWidth: 1,\r\n      borderColor: 'chartreuse',\r\n      // height: state.windowWidth > 1000 ? '2%' : 0.16*state.windowWidth,\r\n      overflow: 'hidden',\r\n      wordWrap: 'break-word',\r\n      hyphens: 'auto',\r\n      width: '100%',\r\n      height: 18,\r\n      fontSize: 14,\r\n      // textOverflow: 'ellipsis',\r\n      // overflow: 'hidden',\r\n      // whiteSpace:'wrap',\r\n    },\r\n    dishImageContainer: {\r\n      width: '100%',\r\n      // height: state.windowWidth > 1000 ? 0.07 * state.windowWidth : 0.25 * state.windowWidth,\r\n      // height: \"70%\",\r\n      aspectRatio: 1,\r\n    },\r\n    DishImage: {\r\n      flexGrow: 1,\r\n      borderRadius: 10,\r\n      borderColor: 'red',\r\n      borderWidth: 1,\r\n      borderRadius: 10,\r\n      marginRight: 10,\r\n      resizeMode: 'stretch',\r\n      minHeight: 50,\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n    dishInfo: {\r\n      borderColor: 'red',\r\n      borderWidth: 1,\r\n      // minHeight: windowWidth > 1000 ? '80%' : 0.35*windowWidth,\r\n    },\r\n    dishInfoHide: {\r\n      borderWidth: 1,\r\n      borderColor: 'yellowBlanchedAlmond',\r\n      height: state.windowWidth > 1000 ? 0.04 * state.windowWidth : 0.15 * state.windowWidth,\r\n      maxHeight: 60,\r\n      overflow: 'hidden',\r\n      wordWrap: 'break-word',\r\n      textOverflow: 'ellipsis',\r\n      hyphens: 'auto',\r\n    },\r\n    dishInfoShow: {\r\n      borderWidth: 1,\r\n      borderColor: 'yellowBlanchedAlmond',\r\n      minHeight: state.windowWidth > 1000 ? 0.04 * state.windowWidth : 0.15 * state.windowWidth,\r\n    },\r\n    customBtn: {\r\n      marginTop: 8,\r\n      alignSelf: 'center',\r\n      width: '70%',\r\n      height: 25,\r\n      borderWidth: 2,\r\n      borderColor: 'rgba(var(--b6a, 219, 219, 219), 1)',\r\n    },\r\n    // CUSTOM SCREEN\r\n    customOrder: {\r\n      width: '100%',\r\n    },\r\n    customName: {\r\n      fontStyle: 'italic',\r\n      fontSize: '1.333333333333333em',\r\n      color: 'rgb(232, 230, 227)',\r\n      fontWeight: 'bold',\r\n      wordWrap: 'break-word',\r\n    },\r\n    customList: {\r\n\r\n    },\r\n    // DEALS SCREEN\r\n    dealImageContainer: {\r\n      width: state.windowWidth,\r\n      height: 0.45 * state.windowWidth,\r\n    },\r\n    dealImage: {\r\n      width: '100%',\r\n      aspectRatio: 2,\r\n      resizeMode: 'stretch',\r\n    }\r\n  })\r\n\r\n  // fetch without token\r\n  const customAxios = axios.create({\r\n    baseURL: state.baseURL,\r\n  })\r\n\r\n  // THIS SHIT WON'T WORK\r\n  // fetch with token\r\n  const authFetch = axios.create({\r\n    baseURL: state.baseURL,\r\n  })\r\n\r\n  // THIS SHIT WON'T WORK\r\n  authFetch.interceptors.request.use(\r\n    (config) => {\r\n      config.headers.common['Authorization'] = `Token ${token}`\r\n      return config\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  // Change iamge url, on development, react need host to serve image files\r\n  // On production, we don't need host\r\n  function changeImagePath(image) {\r\n    const baseUrl = `${state.host}`\r\n    if ((image || '').includes(baseUrl)) {\r\n      return image\r\n    }\r\n    else {\r\n      return baseUrl + image\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{ \r\n        ...state,\r\n        style,\r\n        customAxios,\r\n        authFetch,\r\n        changeImagePath,\r\n       }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nconst useAppContext = () => { return (useContext(AppContext)) }\r\n\r\n\r\nexport { useAppContext, AppProvider, baseURL, token }","import React, { useEffect, useState } from 'react'\r\nimport { Pressable, Text } from 'react-native'\r\nimport { useAppContext } from '../../../context/appContext';\r\n// import style from \"../../Style\";\r\n\r\nconst Category = (props) => {\r\n  const { style } = useAppContext()\r\n  const {\r\n    category,\r\n    setShowSingleItems,\r\n    categoryChosen,\r\n    setCategoryChosen,\r\n  } = props\r\n\r\n  return (\r\n    <Pressable\r\n      onPress={() => {\r\n        setCategoryChosen(category.id)\r\n        setShowSingleItems(false)\r\n      }}\r\n      style={categoryChosen === category.id ? style.homeCategoryChosen : style.homeCategory}\r\n    >\r\n      <Text>\r\n        {category.field.replace('combo-', '').toUpperCase()}\r\n      </Text>\r\n\r\n    </Pressable>\r\n  )\r\n}\r\n\r\nexport default Category","import React from 'react'\nimport { Pressable, Image } from 'react-native'\nimport { useAppContext } from '../../../context/appContext'\n// import style from \"../../Style\";\n\nconst SingleItemCategory = (props) => {\n  const { style, changeImagePath, } = useAppContext()\n  const {\n    singleItemCategory,\n    categoryChosen,\n    setCategoryChosen,\n  } = props\n  // console.log(singleItemCategory)\n\n  return (\n    <Pressable\n      onPress={() => {\n        setCategoryChosen(singleItemCategory.id)\n      }} \n    >\n      <Image source={{uri: changeImagePath(singleItemCategory.image_url)}} \n        style={singleItemCategory.id === categoryChosen ? style.homeSingleItemCategoryChosen : style.homeSingleItemCategory}\n        />\n    </Pressable>\n  )\n}\n\n\nexport default SingleItemCategory","import React from 'react'\r\nimport { View } from 'react-native'\r\nimport { useAppContext } from '../../../context/appContext';\r\nimport SingleItemCategory from './SingleItemCategory'\r\n\r\nconst SingleItemCategories = (props) => {\r\n  const { style } = useAppContext()\r\n  const {\r\n    categories,\r\n    categoryChosen,\r\n    setCategoryChosen,\r\n  } = props\r\n\r\n  function filterSingleItems(input) {\r\n    if (Boolean(input.field.startsWith('singleItems-')) === true) {\r\n      return input\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={style.homeCategories}>\r\n      {categories.filter(singleItemCategory => filterSingleItems(singleItemCategory)).map((singleItemCategory)=>{\r\n        return(\r\n          <SingleItemCategory key={singleItemCategory.id}\r\n            singleItemCategory={singleItemCategory}\r\n            categoryChosen={categoryChosen}\r\n            setCategoryChosen={setCategoryChosen}\r\n          />\r\n        )\r\n      })}\r\n    </View>\r\n  )\r\n}\r\n\r\n// const singleItemCategories = [\r\n//   {\r\n//     id: 0,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a01.png',\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a13.png',\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_f18.png',\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_g01_201125.png',\r\n//   },\r\n// ]\r\n\r\nexport default SingleItemCategories","import React, { useState, useEffect } from \"react\";\r\nimport { View, Image, Text, Pressable, } from \"react-native\";\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useAppContext } from \"../../../context/appContext\";\r\n\r\nexport const Dish = (props) => {\r\n  const {\r\n    categoryDish,\r\n  } = props\r\n\r\n  const { style, customAxios, changeImagePath } = useAppContext()\r\n\r\n  const navigation = useNavigation()\r\n\r\n\r\n  // Dish images\r\n  const [images, setImages] = useState([])\r\n\r\n  // Dish items\r\n  const [dishItems, setDishItems] = useState({})\r\n\r\n  // Show another things before finishing loading\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Hide detail info if category is drink or snack\r\n  const [hideInfo, setHideInfo] = useState(false)\r\n\r\n  // Change dish info height to shorten or show text\r\n  const [shorten, setShorten] = useState(true)\r\n\r\n  // HIDE DRINK AND SNACK DISH INFO\r\n  function hideDishInfo(categoryDish) {\r\n    if ([`singleItems-desserts-drinks`, `singleItems-snacks`].includes(categoryDish.category__field)) {\r\n      setHideInfo(true)\r\n    }\r\n  }\r\n\r\n\r\n  function imagePath() {\r\n    let p\r\n    if (images === undefined || images.length === 0) {\r\n      // array empty or does not exist\r\n      p = ''\r\n    }\r\n    else {\r\n      p = images[0].image_url\r\n    }\r\n    return { uri: changeImagePath(p) }\r\n  }\r\n\r\n\r\n  function choicesText(array) {\r\n    let text = ''\r\n    try {\r\n      for (let i = 0; i < array.length; i += 1) {\r\n        text += `/${array[i].name}`\r\n      }\r\n    }\r\n    finally {\r\n      if (text[0] == '/') {\r\n        return text.substr(1, text.length)\r\n      }\r\n      else {\r\n        return text\r\n      }\r\n    }\r\n  }\r\n\r\n  function customProps() {\r\n    navigation.navigate('Custom', {\r\n      images,\r\n      categoryDish,\r\n      dishItems,\r\n    })\r\n\r\n  }\r\n\r\n  function cartPrams() {\r\n    let itemsChosen\r\n    try {\r\n      let selectionsDefault = dishItems.selections?.map((selection) => {\r\n        return selection.default\r\n      })\r\n      let singleItemDefault = dishItems.singleItems\r\n      itemsChosen = [...selectionsDefault, ...singleItemDefault]\r\n    }\r\n    finally {\r\n      // console.log(`Dish-itemsChosen`, itemsChosen)\r\n      navigation.navigate('Cart', {\r\n        dish: {\r\n          id: Date.now(), // use index for key, because we can order a dish two times\r\n          categoryDish: categoryDish,\r\n          itemsChosen: itemsChosen,\r\n          dishItems: dishItems,\r\n          images: images,\r\n          price: categoryDish.price,  //one set only\r\n          amount: 1,\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    console.log('categoryDish', categoryDish)\r\n\r\n    hideDishInfo(categoryDish)\r\n    \r\n    const url = `item_images/${categoryDish.id}/`\r\n    // GET ITEM IMAGES\r\n    customAxios(url)\r\n    .then((response)=>{\r\n      return response.data\r\n    })\r\n    .then((data) => {\r\n      setImages(data)\r\n      console.log('images', data)\r\n    })\r\n\r\n    const url1 = `dish_items/${categoryDish.id}/`\r\n    // GET DISH ITEMS\r\n    customAxios(url1)\r\n    .then(response=>response.data)\r\n    .then((data) => {\r\n      console.log(`dishItems:`, data)\r\n      setDishItems(data)\r\n    })\r\n    .finally(() => {\r\n      setLoading(false)\r\n    })\r\n  }, [])\r\n\r\n  // If have not finished loading\r\n  if (loading) {\r\n    return (\r\n      <View style={style.homeFoodContainer}>\r\n        <Text>Data is loading...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={style.dishContainer}>\r\n      <Pressable style={style.dishImageContainer}\r\n        onPress={customProps}\r\n      >\r\n        {/* Dish image */}\r\n        <Image\r\n          style={style.DishImage}\r\n          source={imagePath()}\r\n        />\r\n      </Pressable>\r\n\r\n      <View>\r\n        <Text numberOfLines={1} style={style.dishName}>\r\n          {categoryDish.name}\r\n        </Text>\r\n        <Text>{categoryDish.price}</Text>\r\n      </View>\r\n\r\n      <View style={shorten ? style.dishInfo : [style.dishInfo, { height: 'fit-content' }]}>\r\n        {/* IF DISH IS DRINK, HIDE INFO */}\r\n        {hideInfo ||\r\n          // Dish ITEMS\r\n          <View style={shorten ? style.dishInfoHide : style.dishInfoShow}>\r\n\r\n            {/* SELECTIONS TEXT */}\r\n            {dishItems.selections?.filter(selection =>\r\n              selection.default.category__field != 'singleItems-desserts-drinks'\r\n            ).map((selection, index) => {\r\n              return (\r\n                <Text key={index}>\r\n                  {choicesText(selection.choices)}\r\n                </Text>\r\n              )\r\n            })}\r\n\r\n            {/* SINGLE ITEM TEXT */}\r\n            {dishItems.singleItems?.map((singleItem, index) => {\r\n              return (\r\n                <Text key={index}>\r\n                  {singleItem.name}\r\n                </Text>\r\n              )\r\n            })}\r\n\r\n            {/* DRINK TEXT */}\r\n            {dishItems.selections?.filter(selection =>\r\n              selection.default.category__field == 'singleItems-desserts-drinks'\r\n            ).map((selection, index) => {\r\n              return (\r\n                <Text key={index}>\r\n                  {selection.default.name}\r\n                </Text>\r\n              )\r\n            })}\r\n\r\n          </View>\r\n        }\r\n\r\n        <Pressable style={{ alignSelf: 'center' }}\r\n          onPress={() => setShorten(!shorten)}\r\n        >\r\n          <MaterialIcons name=\"keyboard-arrow-down\" size={24} color=\"black\" style={shorten ? { transform: 'rotate(0deg)', transitionDuration: '500ms' } : { transform: 'rotate(180deg)', transitionDuration: '500ms' }} />\r\n        </Pressable>\r\n\r\n        <Pressable style={style.customBtn}\r\n          onPress={customProps}\r\n        >\r\n          <Text style={{ color: 'green', textAlign: 'center' }}>Cumtom</Text>\r\n        </Pressable>\r\n\r\n        <Pressable style={style.customBtn}\r\n          onPress={cartPrams}\r\n        >\r\n          <Text style={{ color: 'green', textAlign: 'center' }}>Order</Text>\r\n        </Pressable>\r\n      </View>\r\n\r\n    </View>\r\n\r\n\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { AntDesign } from '@expo/vector-icons';\r\n// import style from \"../../Style\";\r\nimport { Dish } from \"./Dish\";\r\nimport { useAppContext } from \"../../../context/appContext\";\r\n\r\n// Width and height of device\r\n// const windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n// const windowHeight = Dimensions.get('window').height \r\n\r\nexport const Dishes = (props) => {\r\n  const { style } = useAppContext()\r\n  const {\r\n    categoryDishes,\r\n  } = props\r\n\r\n  return (\r\n    <View style={style.homeFoodListCover}>\r\n      {/* Arrow icon */}\r\n      <AntDesign name=\"downcircleo\" size={24} color=\"black\"\r\n        style={{ marginLeft: 'auto', marginRight: 'auto' }} />\r\n\r\n      <View\r\n        style={{\r\n          // maxHeight:windowHeight*0.45, \r\n          marginTop: 10\r\n        }}\r\n      >\r\n        {/* Food list */}\r\n        <View style={style.homeFoodList}>\r\n          {categoryDishes.map((categoryDish) => {\r\n            return (\r\n              <Dish key={categoryDish.id}\r\n                categoryDish={categoryDish} />\r\n            )\r\n          })}\r\n\r\n        </View>\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\n// export const nigiri = [\r\n//   {\r\n//     id: 0,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a01.png',\r\n//     // name: 'Combo Fried Chicken',\r\n//     // price: 78000,\r\n//     // compose: {\r\n//     //   singleItem: '1 Pepsi Can',\r\n//     //   selection: '2 Pcs of Hot & Spicy Chicken / 2 Pcs of Non Spicy Crispy Chicken / 2 Pcs of Original Recipe Chicken',\r\n//     // }\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a02.png',\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a43.png',\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_a49.png',\r\n//   },\r\n//   {\r\n//     id: 4,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b02.png',\r\n//   },\r\n//   {\r\n//     id: 5,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b03.png',\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b06.png',\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     uri: 'https://www.akindo-sushiro.co.jp/en/img/top/sushi/menu_b07.png',\r\n//   },\r\n// ]","import React, { useState, useEffect } from 'react'\r\nimport { Pressable, Text, View } from 'react-native'\r\nimport Category from './Category'\r\nimport SingleItemCategories from './SingleItemCategories'\r\nimport { Dishes } from './Dishes'\r\nimport { useAppContext } from '../../../context/appContext';\r\n\r\nconst Categories = () => {\r\n  const {\r\n    style,\r\n    customAxios\r\n  } = useAppContext()\r\n\r\n  // Category Array\r\n  const [categories, setCategories] = useState([])\r\n\r\n  // Category Items\r\n  const [categoryDishes, setCategoryDishes] = useState([])\r\n\r\n  // Press on Category\r\n  const [categoryChosen, setCategoryChosen] = useState(0)\r\n\r\n  // Show Category Items\r\n  const [showSingleItems, setShowSingleItems] = useState(false)\r\n\r\n  \r\n  function getCategoryItems(categoryId) {\r\n    const url = `category_items/${categoryId}`\r\n    customAxios(url)\r\n    .then(response=>response.data)\r\n    .then((data) => {\r\n      setCategoryDishes(data)\r\n    })\r\n  }\r\n\r\n  \r\n  function findFirstComboId(categories) {\r\n    var jsonPromise = new Promise(function (resolve, reject) {\r\n      let a = categories.find(category => category.field.startsWith('combo-'))\r\n      if (a) {\r\n        resolve(a)\r\n      }\r\n      else {\r\n        reject(Error(\"There are no combo categoreis\"))\r\n      }\r\n\r\n    })\r\n\r\n    jsonPromise.then((data) => {\r\n      // This never happens:\r\n      console.log(\"It worked!\", data.id);\r\n      // Set first combo id to category id\r\n      setCategoryChosen(data.id)\r\n    }).catch((err) => {\r\n      // Instead, this happens:\r\n      console.log(\"It failed!\", err);\r\n    })\r\n    console.log()\r\n  }\r\n\r\n  function findFirstSingleItemId() {\r\n    var jsonPromise = new Promise(function (resolve, reject) {\r\n      let a = categories.find(category => category.field.startsWith('singleItems-'))\r\n      if (a) {\r\n        resolve(a)\r\n      }\r\n      else {\r\n        reject(Error(\"There are no combo categoreis\"))\r\n      }\r\n\r\n    })\r\n\r\n    jsonPromise.then(function (data) {\r\n      console.log(\"It worked!\", data.id);\r\n      // Set first combo id to category id\r\n      setCategoryChosen(data.id)\r\n\r\n    }).catch(function (err) {\r\n      // Instead, this happens:\r\n      console.log(\"It failed!\", err);\r\n    })\r\n    console.log()\r\n  }\r\n\r\n  function filterCombo(input) {\r\n    if (Boolean(input.field.startsWith('combo-')) === true) {\r\n      return input\r\n    }\r\n  }\r\n\r\n  const getCategories = async () => {\r\n    const url = `get_categories/`\r\n    const { data } = await customAxios(url)\r\n    console.log('get_categories:',data);\r\n    setCategories(data)\r\n    findFirstComboId(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('categories useEffect')\r\n    getCategories()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log('categories useEffect1')\r\n    if (categoryChosen !== 0) {\r\n      getCategoryItems(categoryChosen)\r\n    }\r\n  }, [categoryChosen])\r\n\r\n  return (\r\n    <View style={{\r\n      width: '100%',\r\n      borderColor: 'gray',\r\n      borderWidth: 1,\r\n    }}>\r\n      <View style={[style.homeCategories, { alignContent: 'stretch' }]}>\r\n        {categories.filter(category => filterCombo(category)).map((category) => {\r\n          return (\r\n            <Category key={category.id}\r\n              category={category}\r\n              setShowSingleItems={setShowSingleItems}\r\n              categoryChosen={categoryChosen}\r\n              setCategoryChosen={setCategoryChosen} />\r\n          )\r\n        })}\r\n\r\n        {/* For Single-Items-Category */}\r\n        <Pressable\r\n          onPress={() => {\r\n            setShowSingleItems(true)\r\n            findFirstSingleItemId()\r\n          }}\r\n          style={showSingleItems ? style.homeCategoryChosen : style.homeCategory}\r\n        >\r\n          <Text>\r\n            SINGLE ITEMS\r\n          </Text>\r\n\r\n        </Pressable>\r\n\r\n      </View>\r\n\r\n      {/* Single item Categories */}\r\n      {showSingleItems &&\r\n        <SingleItemCategories\r\n          categories={categories}\r\n          categoryChosen={categoryChosen}\r\n          setCategoryChosen={setCategoryChosen}\r\n        />\r\n      }\r\n\r\n      {console.log('categoryDishes:', categoryDishes)}\r\n      <Dishes categoryDishes={categoryDishes} />\r\n\r\n    </View>\r\n\r\n  )\r\n}\r\nexport default Categories\r\n\r\n// const categories = [\r\n//   {\r\n//     id: 0,\r\n//     name: 'FOR ONE',\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: 'FOR SHARING',\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: 'HOT DEALS',\r\n//   },\r\n//   // {\r\n//   //   id: 3,\r\n//   //   name: 'SINGLE ITEM',\r\n//   // },\r\n// ]\r\n\r\n\r\n\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { StyleSheet, Dimensions } from \"react-native\";\r\n\r\nconst windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\nconst windowHeight = windowWidth * 0.4\r\n\r\nconst initialState = {\r\n\twindowWidth,\r\n\twindowHeight,\r\n}\r\n\r\nconst DealsSliderWrapperContext = React.createContext()\r\nconst Wrapper = ({ children }) => {\r\n\r\n\tconst [state, setState] = useState(initialState)\r\n\t// console.log(state.windowWidth, state.windowHeight);\r\n\r\n\tfunction handleWindowSizeChange() {\r\n\t\tconst windowWidth1 = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n        const windowHeight1 = windowWidth * 0.4\r\n\t\tsetState({ ...state, windowWidth: windowWidth1, windowHeight: windowHeight1 })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', handleWindowSizeChange)\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', handleWindowSizeChange);\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst style = StyleSheet.create({\r\n        container: {\r\n          // height, \r\n          maxHheight: 300,\r\n          borderWidth: 2,\r\n          borderColor: 'violet',\r\n          // paddingLeft: '10px', \r\n          // paddingRight: '10px', \r\n          // paddingTop: '10px',\r\n        },\r\n        scroll: {\r\n          height: '100%',\r\n          maxHheight: 300,\r\n        },\r\n        imageContainer: {\r\n          width: state.windowWidth,\r\n        //   height: state.windowHeight,\r\n        //   width: '100%',\r\n          aspectRatio: 2,\r\n          // maxHeight:300,\r\n        },\r\n        image: {\r\n          // flex: 1,\r\n          width: '100%',\r\n          height: '100%',\r\n          resizeMode: 'stretch',\r\n        },\r\n        pagination: {\r\n          position: 'absolute',\r\n          bottom: 0,\r\n          flexDirection: 'row',\r\n          alignSelf: 'center',\r\n        },\r\n        dots: {\r\n          color: 'white',\r\n          margin: 3,\r\n          fontSize: state.windowWidth / 30,\r\n        },\r\n        dotActive: {\r\n          color: 'green',\r\n          margin: 3,\r\n          fontSize: state.windowWidth / 30,\r\n        },\r\n      })\r\n\r\n\r\n\treturn (\r\n\t\t<DealsSliderWrapperContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\t...state,\r\n\t\t\t\tstyle,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</DealsSliderWrapperContext.Provider>\r\n\t)\r\n}\r\n\r\nconst useDealsSliderWrapperContext = () => {\r\n\treturn (\r\n\t\tuseContext(DealsSliderWrapperContext)\r\n\t)\r\n}\r\n\r\nexport { Wrapper, useDealsSliderWrapperContext }","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, Pressable } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useAppContext } from \"../../../context/appContext\";\r\nimport { useDealsSliderWrapperContext } from \"../../../assets/wrappers/DealsSlider\";\r\n\r\n// const windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n// const windowHeight = windowWidth * 0.4\r\n\r\nconst DealsSlider = (props) => {\r\n  const { changeImagePath } = useAppContext()\r\n  const {\r\n    deals,\r\n  } = props\r\n\r\n  const { style, windowWidth } = useDealsSliderWrapperContext()\r\n\r\n  const navigation = useNavigation()\r\n\r\n  // Dot state\r\n  const [currentSlide, setCurrentSlide] = useState(0)\r\n\r\n  // Scroll state\r\n  const scrollRef = useRef()\r\n  // const scrollRef = React.createRef()\r\n\r\n  var autoPlay = null\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`scrollRef:`, scrollRef)\r\n  // }, [scrollRef.current])\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`currentSlide:`, currentSlide)\r\n  // }, [currentSlide])\r\n\r\n  useEffect(() => {\r\n    autoPlay = setTimeout(changeSlide, 2000)\r\n\r\n    // clearTimeout right after setTimeout in infinity useEffect can help\r\n    // function run one time to one time\r\n    // this resolves turbulent-slide-problem after users swipe on their own\r\n    return () => clearTimeout(autoPlay)\r\n  })\r\n\r\n  // Change active dot\r\n  function onSlideChange(event) {\r\n    // clearInterval(autoPlay)\r\n\r\n    // const slide = Math.round(event.nativeEvent.contentOffset.x / event.nativeEvent.layoutMeasurement.width)\r\n    const slide = Math.round(event.nativeEvent.contentOffset.x / windowWidth)\r\n    // console.log(`slide: ${slide}`)\r\n    // console.log(`contentOffset.x: `, event.nativeEvent.contentOffset.x)\r\n    // console.log(`layoutMeasurement.width:`, event.nativeEvent.layoutMeasurement.width)\r\n\r\n    if (currentSlide !== slide) {\r\n      setCurrentSlide(slide)\r\n    }\r\n  }\r\n\r\n  function changeSlide() {\r\n    if (currentSlide === deals.length - 1) {\r\n      scrollRef.current.scrollTo({ x: 0, animated: true })\r\n    }\r\n    else {\r\n      scrollRef.current.scrollTo({ x: windowWidth * (currentSlide + 1), animated: true })\r\n    }\r\n  }\r\n\r\n  // var autoPlay = setTimeout(changeSlide, 2000)\r\n\r\n  function userBeginDrag() {\r\n    clearTimeout(autoPlay)\r\n  }\r\n\r\n  function userEndDrag() {\r\n    autoPlay = setTimeout(autoPlay, 5000)\r\n  }\r\n\r\n  function imagePress(deal) {\r\n    navigation.navigate('Deals', {\r\n      deal,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <View style={style.container}>\r\n\r\n      <ScrollView ref={scrollRef}\r\n        style={style.scroll}\r\n        pagingEnabled\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        onScroll={onSlideChange}\r\n        scrollEventThrottle={windowWidth}\r\n        onScrollBeginDrag={() => userBeginDrag()}\r\n        onScrollEndDrag={() => userEndDrag()}\r\n        overScrollMode={'never'}\r\n      >\r\n        {deals.map((deal) => {\r\n          return (\r\n            <Pressable\r\n              key={deal.id}\r\n              style={style.imageContainer}\r\n              onPress={() => imagePress(deal)}\r\n            >\r\n              <Image\r\n                source={{ uri: changeImagePath(deal.image_url) }}\r\n                style={style.image}\r\n              />\r\n            </Pressable>\r\n          )\r\n        })}\r\n      </ScrollView>\r\n\r\n      {/* <Text \r\n        style={{\r\n          position:'absolute',\r\n          bottom:0,\r\n          flexDirection:'row',\r\n          alignSelf: 'start',\r\n          fontSize: 22,\r\n          fontWeight:500,\r\n          color: '#0066ff',\r\n        }}>\r\n          Deals\r\n        </Text> */}\r\n\r\n      <View\r\n        style={style.pagination}\r\n      >\r\n        {deals.map((image, index) => {\r\n          return (\r\n            <Text\r\n              key={index}\r\n              style={index === currentSlide ? style.dotActive : style.dots}\r\n            >\r\n              ⬤\r\n            </Text>\r\n          )\r\n        })}\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\n// const style = StyleSheet.create({\r\n//   container: {\r\n//     // height, \r\n//     maxHheight: 300,\r\n//     borderWidth: 2,\r\n//     borderColor: 'violet',\r\n//     // paddingLeft: '10px', \r\n//     // paddingRight: '10px', \r\n//     // paddingTop: '10px',\r\n//   },\r\n//   scroll: {\r\n//     height: '100%',\r\n//     maxHheight: 300,\r\n//   },\r\n//   imageContainer: {\r\n//     width: windowWidth,\r\n//     height: windowHeight,\r\n//     // maxHeight:300,\r\n//   },\r\n//   image: {\r\n//     // flex: 1,\r\n//     width: '100%',\r\n//     height: '100%',\r\n//     resizeMode: 'stretch',\r\n//   },\r\n//   pagination: {\r\n//     position: 'absolute',\r\n//     bottom: 0,\r\n//     flexDirection: 'row',\r\n//     alignSelf: 'center',\r\n//   },\r\n//   dots: {\r\n//     color: 'white',\r\n//     margin: 3,\r\n//     fontSize: windowWidth / 30,\r\n//   },\r\n//   dotActive: {\r\n//     color: 'green',\r\n//     margin: 3,\r\n//     fontSize: windowWidth / 30,\r\n//   },\r\n// })\r\n\r\nexport default DealsSlider","import React, { useState, useEffect } from \"react\";\r\nimport { View, ScrollView } from \"react-native\";\r\n// import { AntDesign } from '@expo/vector-icons';\r\nimport Categories from \"./components/Categories\";\r\nimport DealsSlider from \"./components/DealsSlider\";\r\nimport { useAppContext } from \"../../context/appContext\";\r\nimport { Wrapper } from \"../../assets/wrappers/DealsSlider\";\r\n\r\n// Width and height of device\r\n// const windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n// const windowHeight = Dimensions.get('window').height \r\n\r\nexport const HomeScreenContext = React.createContext()\r\nconst HomeScreen = ({ navigation }) => {\r\n  const {\r\n    style,\r\n    customAxios,\r\n  } = useAppContext()\r\n\r\n  // ALL DEALS\r\n  const [deals, setDeals] = useState([])\r\n\r\n  const getDeals = async () => {\r\n    const url = `get_deals/`\r\n    const { data } = await customAxios(url)\r\n    setDeals(data)\r\n    console.log(`deals`, data)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getDeals()\r\n  }, [])\r\n\r\n  return (\r\n    <HomeScreenContext.Provider\r\n      value={{\r\n      }}\r\n    >\r\n      <ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\r\n        {/* Deals recommendation */}\r\n        <View>\r\n          <Wrapper>\r\n            <DealsSlider deals={deals} />\r\n          </Wrapper>\r\n        </View>\r\n\r\n        {/* Categories */}\r\n        <Categories navigation={navigation} />\r\n\r\n      </ScrollView>\r\n    </HomeScreenContext.Provider>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useEffect} from \"react\";\r\nimport { View, Image, ScrollView, Text } from \"react-native\";\r\nimport { useAppContext } from \"../../context/appContext\";\r\n// import style from \"../Style\";\r\n\r\nconst DealsScreen = ({navigation, route}) => {\r\n  const {style, changeImagePath} = useAppContext()\r\n\r\n  const {\r\n    deal,\r\n  } = route.params\r\n\r\n  useEffect(()=>{\r\n    console.log('deal', deal)\r\n  }, [])\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <Text>{deal.title}</Text>\r\n      <Text>{deal.description}</Text>\r\n      <Text>{deal.hashtag}</Text>\r\n      <View style={style.dealImageContainer}>\r\n        {/* Deal image */}\r\n        <Image\r\n          style={style.dealImage}\r\n          source={{uri: changeImagePath(deal.image_url)}}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nexport default DealsScreen","import React from \"react\";\r\nimport { View, Image, Text, Pressable, } from \"react-native\";\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport { useAppContext } from \"../../../context/appContext\";\r\n\r\nconst CustomChoice = (props) => {\r\n  const { style, changeImagePath, } = useAppContext()\r\n  const {\r\n    selection,\r\n    choice,\r\n    chosen,\r\n    // setChosen,\r\n    itemsChosen,\r\n    setItemsChosen,\r\n  } = props\r\n\r\n  function imagePath() {\r\n    return changeImagePath(choice.image__image_url)\r\n  }\r\n\r\n  function replaceChoice() {\r\n    console.log(choice.selectionId)\r\n    let newItemsChosen = JSON.parse(JSON.stringify(itemsChosen))\r\n    let otherSelections = newItemsChosen?.filter(element => element.selectionId != choice.selectionId)\r\n    let changedSelection = newItemsChosen?.filter(element => element.selectionId == choice.selectionId)\r\n    try {\r\n      console.log(`otherSelections`, otherSelections)\r\n      console.log(`changedSelection`, changedSelection)\r\n      changedSelection.shift()\r\n      changedSelection.push(choice)\r\n    }\r\n    finally {\r\n      console.log(`newItemsChosen`, newItemsChosen)\r\n      setItemsChosen([...otherSelections, ...changedSelection])\r\n    }\r\n  }\r\n\r\n  function subtractPress() {\r\n    console.log(choice.selectionId)\r\n    let newItemsChosen = JSON.parse(JSON.stringify(itemsChosen))\r\n    if (choice.id != selection.default.id && choice.selectionId == selection.default.selectionId) {\r\n      let a = newItemsChosen?.find(element => JSON.stringify(element) == JSON.stringify(choice))\r\n      console.log(`choice`, choice)\r\n      let b = newItemsChosen.indexOf(a)\r\n      try {\r\n        newItemsChosen.splice(b, 1)\r\n        newItemsChosen.push(selection.default)\r\n      }\r\n      finally {\r\n        console.log(`newItemsChosen`, newItemsChosen)\r\n        setItemsChosen([...newItemsChosen])\r\n      }\r\n    }\r\n  }\r\n\r\n  function itemNumber() {\r\n    let number = chosen?.filter(element => element == choice.id)\r\n    return number.length\r\n  }\r\n\r\n  return (\r\n    <View style={style.dishContainer}>\r\n      {choice.image__image ?\r\n        // THERE IS IMAGE\r\n        <Pressable\r\n          onPress={replaceChoice}\r\n        >\r\n          <View style={style.dishImageContainer}>\r\n            <Image\r\n              style={style.DishImage}\r\n              source={imagePath()}\r\n            />\r\n          </View>\r\n\r\n          <View>\r\n            <Text numberOfLines={1}\r\n              style={{\r\n                width: '100%',\r\n                maxHeight: 18,\r\n                fontSize: 14,\r\n              }}\r\n            >\r\n              {choice.name}\r\n            </Text>\r\n            <View style={{ flexDirection: 'row' }}>\r\n              {chosen.includes(choice.id) ?\r\n                // CHOSEN\r\n                <EvilIcons name=\"check\" size={24} color=\"green\" />\r\n                :\r\n                // NOT CHOSEN\r\n                <EvilIcons name=\"check\" size={24} color=\"black\" />\r\n              }\r\n              {selection.default.id == choice.id ?\r\n                // IS DEFAULT\r\n                <Text>\r\n                  Included\r\n                </Text>\r\n                :\r\n                // IS NOT DEFAULT\r\n                <Text>\r\n                  {(choice.price - selection.default.price > 0 ? `+${choice.price - selection.default.price}đ` : `+0đ`)}\r\n                </Text>\r\n              }\r\n            </View>\r\n\r\n            {selection.default.amount != 1 &&\r\n              <View style={{ flexDirection: 'row', }}>\r\n                <Pressable\r\n                  onPress={subtractPress}\r\n                >\r\n                  <Text>⊖</Text>\r\n                </Pressable>\r\n                <Text style={{ marginLeft: 5, marginRight: 5 }}>{itemNumber()}</Text>\r\n                <Pressable onPress={replaceChoice}>\r\n                  <Text>⊕</Text>\r\n                </Pressable>\r\n              </View>\r\n\r\n            }\r\n          </View>\r\n\r\n        </Pressable>\r\n        :\r\n        // THERE ARE NOT IMAGES\r\n        <Pressable\r\n          onPress={replaceChoice}\r\n          style={{ flexDirection: 'row' }}\r\n        >\r\n          {chosen.includes(choice.id) ?\r\n            <EvilIcons name=\"check\" size={24} color=\"green\" />\r\n            :\r\n            <EvilIcons name=\"check\" size={24} color=\"black\" />\r\n          }\r\n\r\n          <Text numberOfLines={3}>{choice.name}</Text>\r\n        </Pressable>\r\n      }\r\n\r\n    </View>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default CustomChoice","import React, { useEffect, useState } from 'react'\r\nimport { View } from 'react-native'\r\n// import style from '../../Style'\r\nimport CustomChoice from './CustomChoice'\r\n\r\nconst CustomChoices = (props) => {\r\n  const {\r\n    selection,\r\n    itemsChosen,\r\n    setItemsChosen,\r\n  } = props\r\n\r\n  // CHANGE STYLE WHEN CHOSEN\r\n  const [chosen, setChosen] = useState([])\r\n\r\n  useEffect(() => {\r\n    let itemIds = itemsChosen?.filter(element => element.selectionId == selection.default.selectionId).map(element => {\r\n      return element.id\r\n    })\r\n    setChosen(itemIds)\r\n    console.log(`chosen`, itemIds)\r\n  }, [itemsChosen])\r\n\r\n  return (\r\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap', }}>\r\n      {selection.choices?.map((choice) => {\r\n        return (\r\n          <CustomChoice key={choice.id}\r\n            selection={selection}\r\n            choice={choice}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n            itemsChosen={itemsChosen}\r\n            setItemsChosen={setItemsChosen}\r\n          />\r\n        )\r\n      })}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default CustomChoices","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { StyleSheet, Dimensions } from \"react-native\";\r\n\r\nconst windowWidth= Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\nconst windowHeight = windowWidth * 0.4\r\n\r\nconst initialState = {\r\n\twindowWidth,\r\n\twindowHeight,\r\n}\r\n\r\nconst ImageSliderWrapperContext = React.createContext()\r\nconst Wrapper = ({ children }) => {\r\n\r\n\tconst [state, setState] = useState(initialState)\r\n\t// console.log(state.windowWidth, state.windowHeight);\r\n\r\n\tfunction handleWindowSizeChange() {\r\n\t\tconst windowWidth1= Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n\t\tconst windowHeight2 = windowWidth * 0.4\r\n\t\tsetState({ ...state, windowWidth: windowWidth1, windowHeight: windowHeight2 })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', handleWindowSizeChange)\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', handleWindowSizeChange);\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst style = StyleSheet.create({\r\n\t\tcontainer: {\r\n\t\t\t// height, \r\n\t\t\tmaxHheight: 300,\r\n\t\t\tborderWidth: 2,\r\n\t\t\tborderColor: 'violet',\r\n\t\t},\r\n\t\tscroll: {\r\n\t\t\theight: '100%',\r\n\t\t\tmaxHheight: 300,\r\n\t\t},\r\n\t\timageContainer: {\r\n\t\t\twidth: state.windowWidth,\r\n\t\t\t// height: state.windowHeight,\r\n\t\t\taspectRatio: 2,\r\n\t\t\t// maxHeight:300,\r\n\t\t},\r\n\t\timage: {\r\n\t\t\t// flex: 1,\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\tresizeMode: 'stretch',\r\n\t\t},\r\n\t\tpagination: {\r\n\t\t\tposition: 'absolute',\r\n\t\t\tbottom: 0,\r\n\t\t\tflexDirection: 'row',\r\n\t\t\talignSelf: 'center',\r\n\t\t},\r\n\t\tdots: {\r\n\t\t\tcolor: 'white',\r\n\t\t\tmargin: 3,\r\n\t\t\tfontSize: state.windowWidth / 30,\r\n\t\t},\r\n\t\tdotActive: {\r\n\t\t\tcolor: 'green',\r\n\t\t\tmargin: 3,\r\n\t\t\tfontSize: state.windowWidth / 30,\r\n\t\t},\r\n\t})\r\n\r\n\r\n\treturn (\r\n\t\t<ImageSliderWrapperContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\t...state,\r\n\t\t\t\tstyle,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</ImageSliderWrapperContext.Provider>\r\n\t)\r\n}\r\n\r\nconst useImageSliderWrapperContext = () => {\r\n\treturn (\r\n\t\tuseContext(ImageSliderWrapperContext)\r\n\t)\r\n}\r\n\r\nexport { Wrapper, useImageSliderWrapperContext }","import React, {useState, useEffect, useRef} from \"react\";\r\nimport { View, Image, ScrollView, Dimensions, Text, StyleSheet, } from \"react-native\";\r\nimport { useImageSliderWrapperContext} from \"../../../assets/wrappers/ImageSlider\";\r\nimport { useAppContext } from \"../../../context/appContext\";\r\n\r\nconst ImageSlider = (props) => {\r\n  const {\r\n    imageArray,\r\n  } = props\r\n  const {changeImagePath} = useAppContext()\r\n  const {style, windowWidth, windowHeight} = useImageSliderWrapperContext()\r\n\r\n  \r\n  // Dot state\r\n  const [currentSlide, setCurrentSlide] = useState(0)\r\n\r\n  // Scroll state\r\n  const scrollRef = useRef()\r\n  // const scrollRef = React.createRef()\r\n\r\n  var autoPlay = null\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`scrollRef:`, scrollRef)\r\n  // }, [scrollRef.current])\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(`currentSlide:`, currentSlide)\r\n  // }, [currentSlide])\r\n\r\n  useEffect(()=>{\r\n    autoPlay = setTimeout(changeSlide, 2000)\r\n    \r\n    // clearTimeout right after setTimeout in infinity useEffect can help\r\n    // function run one time to one time\r\n    // this resolves turbulent-slide-problem after users swipe on their own\r\n    return () => clearTimeout(autoPlay)\r\n  })\r\n\r\n  // Change active dot\r\n  function onSlideChange(event) {\r\n    // clearInterval(autoPlay)\r\n\r\n    // const slide = Math.round(event.nativeEvent.contentOffset.x / event.nativeEvent.layoutMeasurement.width)\r\n    const slide = Math.round(event.nativeEvent.contentOffset.x / windowWidth)\r\n    // console.log(`slide: ${slide}`)\r\n    // console.log(`contentOffset.x: `, event.nativeEvent.contentOffset.x)\r\n    // console.log(`layoutMeasurement.width:`, event.nativeEvent.layoutMeasurement.width)\r\n\r\n    if (currentSlide !== slide) {\r\n      setCurrentSlide(slide)\r\n    }\r\n  }\r\n\r\n  function changeSlide() {\r\n    if (currentSlide === imageArray.length - 1) {\r\n      scrollRef.current.scrollTo({ x: 0, animated: true })\r\n    }\r\n    else {\r\n      scrollRef.current.scrollTo({ x: windowWidth * (currentSlide + 1), animated: true })\r\n    }\r\n  }\r\n\r\n  function userBeginDrag() {\r\n    clearTimeout(autoPlay)\r\n  }\r\n\r\n  function userEndDrag() {\r\n    autoPlay = setTimeout(autoPlay, 5000)\r\n  }\r\n\r\n  // console.log(windowWidth, windowHeight, style);\r\n\r\n  return (\r\n    <View style={style.container}>\r\n      <ScrollView ref = {scrollRef}\r\n        style={style.scroll}\r\n        pagingEnabled\r\n        horizontal \r\n        showsHorizontalScrollIndicator={false}\r\n        onScroll={onSlideChange}\r\n        scrollEventThrottle={windowWidth}\r\n        onScrollBeginDrag={()=>userBeginDrag()}\r\n        onScrollEndDrag={()=>userEndDrag()}\r\n        overScrollMode={'never'}\r\n      >\r\n        {imageArray?.map((image, index) => {\r\n          return (\r\n            <View\r\n              key={ index }\r\n              style={style.imageContainer} \r\n            >\r\n              <Image \r\n                source={{ uri: changeImagePath(image) }}\r\n                style={style.image} \r\n              />\r\n            </View>\r\n          )\r\n        })}\r\n      </ScrollView>\r\n\r\n      {/* <Text \r\n        style={{\r\n          position:'absolute',\r\n          bottom:0,\r\n          flexDirection:'row',\r\n          alignSelf: 'start',\r\n          fontSize: 22,\r\n          fontWeight:500,\r\n          color: '#0066ff',\r\n        }}>\r\n          Deals\r\n        </Text> */}\r\n      \r\n      <View\r\n        style={style.pagination}\r\n      >\r\n        {imageArray?.map((image, index)=>{\r\n          return (\r\n            <Text \r\n              key={index}\r\n              style={index === currentSlide ? style.dotActive : style.dots} \r\n            >\r\n              ⬤ \r\n            </Text>\r\n          )\r\n        })}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\n\r\n// const windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n// const windowHeight = windowWidth * 0.4\r\n\r\n// const style = StyleSheet.create({\r\n//   container: {\r\n//     // height, \r\n//     maxHheight: 300,\r\n//     borderWidth: 2,\r\n//     borderColor: 'violet',\r\n//   },\r\n//   scroll: {\r\n//     height:'100%',\r\n//     maxHheight:300,\r\n//   },\r\n//   imageContainer: { \r\n//     width: windowWidth, \r\n//     height: windowHeight,\r\n//     // maxHeight:300,\r\n//   },\r\n//   image: {\r\n//     // flex: 1,\r\n//     width: '100%',\r\n//     height: '100%',\r\n//     resizeMode: 'stretch',\r\n//   },\r\n//   pagination: {\r\n//     position: 'absolute', \r\n//     bottom: 0, \r\n//     flexDirection: 'row',\r\n//     alignSelf: 'center',\r\n//   },\r\n//   dots: {\r\n//     color: 'white',\r\n//     margin: 3,\r\n//     fontSize: windowWidth/30,\r\n//   },\r\n//   dotActive: {\r\n//     color: 'green',\r\n//     margin: 3,\r\n//     fontSize: windowWidth/30,\r\n//   },\r\n// })\r\n\r\nexport default ImageSlider","import React, { useEffect, useState } from 'react'\r\nimport { View, Text, Pressable, ScrollView, TextInput } from 'react-native'\r\n// import style from '../Style'\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport CustomChoices from './components/CustomChoices'\r\nimport ImageSlider from './components/ImageSlider'\r\n// import { useCookies } from 'react-cookie';\r\nimport { useAppContext } from '../../context/appContext';\r\nimport { Wrapper } from '../../assets/wrappers/ImageSlider';\r\n\r\n// Width and height of device\r\n// const windowWidth = Dimensions.get('window').width > 1000 ? 1000 : Dimensions.get('window').width\r\n// const windowHeight = Dimensions.get('window').height \r\n\r\nexport const CustomScreenContext = React.createContext()\r\nconst CustomScreen = ({navigation, route}) => {\r\n\tconst {style, changeImagePath}=useAppContext()\r\n\r\n\tconst {\r\n\t\timages,\r\n\t\tcategoryDish, \r\n\t\tdishItems,\r\n\t} = route.params\r\n\r\n\t// ARRAY OF DISH IMAGES\r\n\tconst [imageArray, setImageArray] = useState([])\r\n\r\n\t// NUMBER OR DISHES\r\n\tconst [orderTotal, setOrderTotal] = useState(1)\r\n\r\n\tconst [itemsChosen, setItemsChosen] = useState([])\r\n\r\n\tconst [price, setPrice] = useState(0)\r\n\r\n\t// const [token, setToken] = useCookies(['kfc'])\r\n\r\n\t// IMAGE ARRAY\r\n\tuseEffect(() => {\r\n\t\t// CHANGE IMAGES OBJECT ARRAY TO ARRAY\r\n\t\t// console.log('custom dishItem', dishItems)\r\n\t\tlet imgArray = images.map((image) => changeImagePath(image.image_url))\r\n\t\tsetImageArray(imgArray)\r\n\t\tconsole.log(`singleItems`, dishItems.singleItems)\r\n\t}, [images])\r\n\r\n\t// SET itemsChosen\r\n\tuseEffect(()=>{\r\n\t\t// Cannot setState inside map\r\n\t\tlet selectionsDefault = dishItems.selections?.map((selection) => {\r\n\t\treturn selection.default\r\n\t\t})\r\n\r\n\t\tlet singleItemDefault = dishItems.singleItems\r\n\t\tconsole.log('singleItemDefault', singleItemDefault)\r\n\t\t\r\n\t\ttry {\r\n\t\tlet c = selectionsDefault?.find(element => element.amount > 1)\r\n\t\tif (c !== undefined) {\r\n\t\t\tfor (let i = 0; i < c.amount - 1 ; i += 1) {\r\n\t\t\tselectionsDefault.push(c)\r\n\t\t\t}\r\n\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\tconsole.log(`selectionsDefault`, selectionsDefault)\r\n\t\tsetItemsChosen([...selectionsDefault.sort(), ...singleItemDefault])  \r\n\t\t}\r\n\t\t\r\n\t}, [dishItems])\r\n\r\n\t// SET PRICE\r\n\tuseEffect(() => {\r\n\t\tlet total = categoryDish?.price\r\n\t\ttry {\r\n\t\titemsChosen?.map(element => {\r\n\t\t\t// CHECK FOR SINGLE ITEM\r\n\t\t\tif (Object.keys(element).includes('due')) {\r\n\t\t\ttotal += element.due\r\n\t\t\t}\r\n\t\t})\r\n\t\t}\r\n\t\tfinally {\r\n\t\tsetPrice(total)\r\n\t\t}\r\n\t}, [itemsChosen, categoryDish])\r\n\r\n\tfunction subtractAmount() {\r\n\t\tif (orderTotal > 1) {\r\n\t\tsetOrderTotal(orderTotal-1)\r\n\t}}\r\n\r\n\tfunction addAmount() {setOrderTotal(orderTotal+1)}\r\n\r\n\tfunction addToCart() {\r\n\t\tnavigation.goBack()\r\n\t\tnavigation.navigate('Cart', {\r\n\t\t\tdish: {\r\n\t\t\t\tid: Date.now(), // use time for key, because we can order a dish two times\r\n\t\t\t\t// dishId: categoryDish.id,\r\n\t\t\t\t// name: categoryDish.name,\r\n\t\t\t\tcategoryDish: categoryDish,\r\n\t\t\t\titemsChosen: itemsChosen,\r\n\t\t\t\tdishItems: dishItems,\r\n\t\t\t\timages: images,\r\n\t\t\t\tprice: price, //one set only\r\n\t\t\t\tamount: orderTotal,\r\n\t\t\t},\r\n\t\t})\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<CustomScreenContext.Provider\r\n\t\t\tvalue={{setItemsChosen, itemsChosen}}\r\n\t\t>\r\n\t\t\t{console.log(`itemsChosen`, itemsChosen)}\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\r\n\t\t\t\t{/* ORDER AND COST */}\r\n\t\t\t\t<View style={style.orderTotal}>\r\n\t\t\t\t\t<Wrapper>\r\n\t\t\t\t\t\t<ImageSlider imageArray={imageArray} />\r\n\t\t\t\t\t</Wrapper>\r\n\r\n\t\t\t\t\t{/* DASHBOARD */}\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<Text style={style.customName}>{orderTotal}X {categoryDish.name.toUpperCase()}</Text>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* CHOSEN ITEM LIST */}\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t{itemsChosen.map((element, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<View key={index}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{flexGrow:1}}>・{element.name}</Text>\r\n\t\t\t\t\t\t\t\t<Text>+{element.due||0} đ</Text>\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<View style={{flexDirection:'row'}}>\r\n\t\t\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Pressable onPress={subtractAmount}>\r\n\t\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t}}>⊖</Text>\r\n\t\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t\t\t<TextInput value={orderTotal} onChangeText={setOrderTotal}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth:30,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingLeft: 5,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 5,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Pressable onPress={addAmount}>\r\n\t\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t\t}}>⊕</Text>\r\n\t\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\t}}>{orderTotal * price}</Text>\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<View style={{flexDirection:'row',paddingTop: 10,}}>\r\n\t\t\t\t\t\t\t<Text \r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tflexGrow:1,\r\n\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tORDER TOTAL\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t\t}}>{orderTotal * price}</Text>\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<Pressable style={style.customBtn} \r\n\t\t\t\t\t\t\t\tonPress={addToCart}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{color:'green', textAlign:'center', borderRadius:5}}>\r\n\t\t\t\t\t\t\t\t\tADD TO CART\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t\t\t<Pressable style={style.customBtn}\r\n\t\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\t\tnavigation.goBack()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{color:'green', textAlign:'center', borderRadius:5}}>\r\n\t\t\t\t\t\t\t\t\tBACK TO MENU\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<View>\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<Text>{categoryDish.name}</Text>\r\n\r\n\t\t\t\t\t\t{/* SELECT NON-DRINK ITEMS FIRST */}\r\n\t\t\t\t\t\t{dishItems.selections?.map((selection, index) => { \r\n\t\t\t\t\t\t\tif (selection.default.category__field !== 'singleItems-desserts-drinks') {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<View key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<Text>SELECT 1 IN OPTIONS BELOW</Text>\r\n\t\t\t\t\t\t\t\t\t\t<CustomChoices selection={selection}\r\n\t\t\t\t\t\t\t\t\t\t\titemsChosen={itemsChosen}\r\n\t\t\t\t\t\t\t\t\t\t\tsetItemsChosen={setItemsChosen} \r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t) \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t{/* SINGLE ITEMS */}\r\n\t\t\t\t\t\t{dishItems.singleItems?.map(singleItem => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<View key={singleItem.id}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tflexDirection:'row',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<EvilIcons name=\"check\" size={24} color=\"green\" />\r\n\t\t\t\t\t\t\t\t\t<Text>{singleItem.name}</Text>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t{/* DINK SELECTION */}\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<Text>UP SIZE DESSERTS DRINKS</Text>\r\n\t\t\t\t\t\t\t{dishItems.selections?.map((selection, index) => {  \r\n\t\t\t\t\t\t\t\tif (selection.default.category__field === 'singleItems-desserts-drinks') {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<CustomChoices key={index} selection={selection}\r\n\t\t\t\t\t\t\t\t\t\t\titemsChosen={itemsChosen}\r\n\t\t\t\t\t\t\t\t\t\t\tsetItemsChosen={setItemsChosen}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t</View>\r\n\r\n\t\t\t</ScrollView>\r\n\r\n\t\t</CustomScreenContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default CustomScreen","import React, { useEffect, useState, useContext } from 'react'\r\nimport { View, Text, Image, Pressable, Dimensions, ScrollView, TextInput, CheckBox } from 'react-native'\r\nimport { DishContext } from './components/Dish'\r\n// import style from '../Style'\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport CustomChoices from './components/CustomChoices'\r\nimport ImageSlider from './components/ImageSlider';\r\nimport { useAppContext } from '../../context/appContext';\r\nimport { Wrapper } from '../../assets/wrappers/ImageSlider';\r\n\r\nexport const CustomScreenContext = React.createContext()\r\nconst CartEditOrder = ({navigation, route}) => {\r\n  const {style, changeImagePath} = useAppContext()\r\n\r\n  const {\r\n    order,\r\n  } = route.params\r\n\r\n  // ARRAY OF DISH IMAGES\r\n  const [imageArray, setImageArray] = useState([])\r\n\r\n  // NUMBER OR DISHES\r\n  const [orderAmount, setOrderAmount] = useState(1)\r\n\r\n  const [itemsChosen, setItemsChosen] = useState([])\r\n\r\n  const [price, setPrice] = useState(0)\r\n\r\n  function updateCart() {\r\n    navigation.goBack()\r\n    navigation.navigate('Cart', {\r\n      dish: {\r\n        id: order.id, // use time for key, because we can order a dish two times\r\n        // dishId: categoryDish.id,\r\n        // name: categoryDish.name,\r\n        categoryDish: order.categoryDish,\r\n        itemsChosen: itemsChosen,\r\n        dishItems: order.dishItems,\r\n        images: order.images,\r\n        price: price,\r\n        amount: orderAmount,\r\n      },\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // CHANGE IMAGES OBJECT ARRAY TO ARRAY\r\n    // console.log('custom dishItem', dishItems)\r\n    console.log(order.images)\r\n    let imgArray = order.images.map((image) => changeImagePath(image.image_url))\r\n    setImageArray(imgArray)\r\n    console.log(`singleItems`, order.dishItems.singleItems)\r\n\r\n    setItemsChosen(order.itemsChosen)\r\n    setPrice(order.price)\r\n    setOrderAmount(order.amount)\r\n  }, [order])\r\n\r\n  // SET PRICE\r\n  useEffect(() => {\r\n    let total = order?.categoryDish.price\r\n    try {\r\n      itemsChosen?.map(element => {\r\n        // CHECK FOR SINGLE ITEM\r\n        if (Object.keys(element).includes('due')) {\r\n          total += element.due\r\n        }\r\n      })\r\n    }\r\n    finally {\r\n      setPrice(total)\r\n    }\r\n  }, [itemsChosen, order])\r\n  \r\n  if (order == null) {\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <CustomScreenContext.Provider\r\n        value={{setItemsChosen, itemsChosen}}\r\n      >\r\n        {console.log(`itemsChosen`, itemsChosen)}\r\n        <ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n          \r\n          {/* ORDER AND COST */}\r\n          <View style={style.orderAmount}>\r\n            <Wrapper>\r\n              <ImageSlider imageArray={imageArray} />\r\n            </Wrapper>\r\n\r\n            {/* DASHBOARD */}\r\n            <View>\r\n              <Text style={style.customName}>{orderAmount}X {order.categoryDish.name.toUpperCase()}</Text>\r\n\r\n              {/* CHOSEN ITEM LIST */}\r\n              <View>\r\n                {itemsChosen.map((element, index) => {\r\n                  return (\r\n                    <View key={index} style={{\r\n                      flexDirection:'row',\r\n                    }}>\r\n                      <Text style={{flexGrow:1}}>・{element.name}</Text>\r\n                      <Text>+{element.due||0}</Text>\r\n                    </View>\r\n  \r\n                  )\r\n                })}\r\n              </View>\r\n              \r\n              <View style={{flexDirection:'row'}}>\r\n                <View style={{\r\n                  flexDirection:'row',\r\n                  flexGrow: 1,\r\n                }}>\r\n                  <Pressable \r\n                    onPress={()=>{\r\n                      if (orderAmount > 1) {\r\n                      setOrderAmount(orderAmount-1)\r\n                    }}}\r\n                  >\r\n                    <Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t}}>⊖</Text>\r\n                  </Pressable>\r\n                  <TextInput value={orderAmount} onChangeText={setOrderAmount} style={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth:30,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingLeft: 5,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 5,\r\n\t\t\t\t\t\t\t\t\t\t}} />\r\n                  <Pressable onPress={()=>{setOrderAmount(orderAmount+1)}}>\r\n                    <Text style={{\r\n\t\t\t\t\t\t\t\t\t\t\ttransform: 'scale(1.5)',\r\n\t\t\t\t\t\t\t\t\t\t}}>⊕</Text>\r\n                  </Pressable>\r\n                </View>\r\n  \r\n                <Text style={{\r\n                  fontSize: 18,\r\n                  fontFamily: \"National2\",\r\n                  lineHeight: 1.5,\r\n                  fontWeight: 600,\r\n                  alignSelf: 'center',\r\n                }}>{orderAmount * price}</Text>\r\n              </View>\r\n  \r\n            </View>\r\n  \r\n            <View>\r\n              <View style={{flexDirection:'row',paddingTop: 10,}}>\r\n                <Text style={{\r\n\t\t\t\t\t\t\t\t\tflexGrow:1,\r\n\t\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t\t}}>ORDER TOTAL</Text>\r\n                <Text style={{\r\n                    fontSize: 18,\r\n                    fontFamily: \"National2\",\r\n                    lineHeight: 1.5,\r\n                    fontWeight: 600,\r\n                    color: 'red',\r\n                }}>{orderAmount * price}</Text>\r\n              </View>\r\n  \r\n              <View>\r\n                <View>\r\n                  {/* UPDATE CART */}\r\n                  <Pressable style={style.customBtn}\r\n                    onPress={updateCart}>\r\n                    <Text style={{color:'green', textAlign:'center'}}>UPDATE CART</Text>\r\n                  </Pressable>\r\n                  \r\n                  {/* BACK TO HOME */}\r\n                  <Pressable style={style.customBtn} \r\n                    onPress={()=>{\r\n                      navigation.navigate('Home')\r\n                    }}>\r\n                    <Text style={{color:'green', textAlign:'center'}}>ADD MORE COMBO</Text>\r\n                  </Pressable>\r\n  \r\n                </View>\r\n                \r\n                {/* GO BACK TO CART */}\r\n                <Pressable style={style.customBtn}\r\n                  onPress={() => {\r\n                    navigation.goBack()\r\n                  }}>\r\n                  <Text style={{color:'green', textAlign:'center'}}>BACK TO CART</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </View>\r\n  \r\n          <View>\r\n            <View>\r\n              <Text>{order.categoryDish.name}</Text>\r\n  \r\n              {/* SELECT NON-DRINK ITEMS FIRST */}\r\n              {order.dishItems.selections?.map((selection, index) => { \r\n  \r\n                if (selection.default.category__field !== 'singleItems-desserts-drinks')\r\n                {\r\n                  return (\r\n                    <View key={index} >\r\n                      <Text>SELECT 1 IN OPTIONS BELOW</Text>\r\n                      <CustomChoices selection={selection}\r\n                        itemsChosen={itemsChosen}\r\n                        setItemsChosen={setItemsChosen} />\r\n                    </View>\r\n                  ) \r\n                }\r\n              })}\r\n  \r\n              {/* SINGLE ITEMS */}\r\n              {order.dishItems.singleItems?.map((singleItem, index) => {\r\n                // if (singleItem === undefined || singleItem.length == 0) {\r\n                //   return (\r\n                //     <Text key={index}></Text>\r\n                //   )\r\n                // }\r\n                // else {\r\n                  return (\r\n                    <View key={singleItem.id}>\r\n                      <EvilIcons name=\"check\" size={24} color=\"green\" />\r\n                      <Text>{singleItem.name}</Text>\r\n                    </View>\r\n                  )\r\n                // }\r\n              })}\r\n  \r\n              {/* DINK SELECTION */}\r\n              <View>\r\n                <Text>UP SIZE DESSERTS DRINKS</Text>\r\n  \r\n                {order.dishItems.selections?.map((selection, index) => {  \r\n  \r\n                  if (selection.default.category__field === 'singleItems-desserts-drinks')\r\n                  {\r\n                    return (\r\n                      <CustomChoices key={index} selection={selection}\r\n                        itemsChosen={itemsChosen}\r\n                        setItemsChosen={setItemsChosen} />\r\n                    ) \r\n                  }\r\n                })}\r\n              </View>\r\n            </View>\r\n  \r\n            <View>\r\n  \r\n            </View>\r\n          </View>\r\n  \r\n        </ScrollView>\r\n  \r\n      </CustomScreenContext.Provider>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default CartEditOrder","import React from \"react\";\r\n// import { Dimensions} from \"react-native\";\r\nimport HomeScreen from \"../stacks/HomeScreen\";\r\nimport DealsScreen from \"../stacks/DealsScreen\";\r\n// import ComboScreen from \"../stacks/ComboScreen\";\r\nimport CustomScreen from '../stacks/CustomScreen'\r\nimport CartEditOrder from \"../stacks/CartEditOrder\";\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n// import { NavigationContainer } from \"@react-navigation/native\";\r\n// import { CookiesProvider } from \"react-cookie\";\r\n\r\n// Width and height of device\r\n// const windowWidth = Dimensions.get('window').width\r\n// const windowHeight = Dimensions.get('window').height\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction MyStack() {\r\n\r\n  return (\r\n    // <CookiesProvider>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n        <Stack.Screen name=\"Deals\" component={DealsScreen} />\r\n        {/* <Stack.Screen name=\"Combo\" component={ComboScreen} /> */}\r\n        <Stack.Screen name=\"Custom\" component={CustomScreen} />\r\n        <Stack.Screen name=\"EditCart\" component={CartEditOrder} />\r\n      </Stack.Navigator>\r\n    // </CookiesProvider>      \r\n  );\r\n}\r\n\r\nexport default MyStack","// import { getFocusedRouteNameFromRoute } from '@react-navigation/native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Text, View, ScrollView, StyleSheet, Dimensions, TextInput, Pressable } from 'react-native'\r\nimport { useCookies } from 'react-cookie';\r\nimport { useAppContext } from '../../context/appContext';\r\n\r\nexport const CartScreenContext = React.createContext()\r\n\r\nconst SettingsScreen = (props) => {\r\n  const {\r\n    style,\r\n    baseURL,\r\n    customAxios,\r\n  } = useAppContext()\r\n\r\n  const {\r\n    modalVisible,\r\n    setModalVisible,\r\n    navigation,\r\n    // route,\r\n    user,\r\n    setUser,\r\n    // showHistory,\r\n    // setShowHistory,\r\n  } = props\r\n\r\n  const [token, setToken, removeToken] = useCookies(['kfc'])\r\n\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  // Change button\r\n  const [showRegister, setShowRegister] = useState(false)\r\n\r\n  useEffect(() => {\r\n    console.log('cookie:', token['kfc'])\r\n    // getUser()\r\n  }, [token])\r\n\r\n  // Login handle\r\n  const login = (e) => {\r\n    console.log(`login run`)\r\n    e.preventDefault()\r\n\r\n    // console.log(`username: ${username}, password: ${password}`)\r\n    // Get token then push to cookie\r\n    const url = `auth/`\r\n    customAxios.post(url, { username, password })\r\n      .then(response => response.data)\r\n      .then((jsonData) => {\r\n        console.log(`token:`, jsonData)\r\n        setToken(\"kfc\", jsonData.token)\r\n        setToken('username', username)\r\n\r\n        // DONT KNOW WHY BUT IT NEED DOUBLE\r\n        setModalVisible(false)\r\n        setModalVisible(false)\r\n\r\n        // GET USER\r\n        customAxios(`current_user/`, {\r\n            headers: {\r\n              Authorization: `Token ${jsonData.token}`\r\n            }\r\n          }\r\n        )\r\n        .then(response=>response.data)\r\n        .then((data) => {\r\n          setUser(data)\r\n          console.log('User:', data)\r\n          if (!Object.keys(data).includes('detail')) {\r\n            setModalVisible(false)\r\n            console.log('Already login')\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  function logout() {\r\n    removeToken('kfc')\r\n    removeToken('username')\r\n    setModalVisible(true)\r\n  }\r\n\r\n  // Register handle\r\n  const register = async (event) => {\r\n    event.preventDefault()\r\n    console.log(`register run: ${username} and password`)\r\n    \r\n    const url = `${baseURL}register/`\r\n    const { data } = await customAxios.post(\r\n      url,\r\n      { username, password },\r\n      {\r\n        headers: {\r\n          Authorization: `Token ${token}`\r\n        }\r\n      }\r\n    )\r\n    console.log(event)\r\n    login(event)\r\n\r\n  }\r\n\r\n  function changeButton() {\r\n    setShowRegister(!showRegister)\r\n  }\r\n\r\n  // To log in \r\n  console.log(modalVisible);\r\n  if (modalVisible) {\r\n    return (\r\n      <ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\r\n        <View>\r\n\r\n          <TextInput placeholder='Username' value={username} onChangeText={setUsername}\r\n            style={{\r\n              width: windowWidth,\r\n              minHeight: 50,\r\n              marginBottom: 5,\r\n              backgroundColor: '#d0d5db',\r\n            }}\r\n          />\r\n\r\n          <TextInput secureTextEntry={true} placeholder='Password' value={password} onChangeText={setPassword}\r\n            style={{\r\n              width: windowWidth,\r\n              minHeight: 50,\r\n              marginBottom: 5,\r\n              backgroundColor: '#d0d5db',\r\n            }}\r\n          />\r\n\r\n          {/* BUTTOM */}\r\n          {showRegister ?\r\n            // Register\r\n            <Pressable onPress={register}\r\n              style={{\r\n                width: '50%',\r\n                backgroundColor: 'chartreuse',\r\n                fontWeight: 'bold',\r\n                textTransform: 'uppercase',\r\n                textAlign: 'center',\r\n                paddingBottom: 10,\r\n                paddingTop: 10,\r\n                borderRadius: 6,\r\n              }}\r\n            >\r\n              <Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Register</Text>\r\n            </Pressable>\r\n            :\r\n            // Login\r\n            <Pressable onPress={login}\r\n              style={{\r\n                width: '50%',\r\n                backgroundColor: 'chartreuse',\r\n                fontWeight: 'bold',\r\n                textTransform: 'uppercase',\r\n                textAlign: 'center',\r\n                paddingBottom: 10,\r\n                paddingTop: 10,\r\n                borderRadius: 6,\r\n              }}\r\n            >\r\n              <Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Login</Text>\r\n            </Pressable>\r\n          }\r\n\r\n          {showRegister ?\r\n            // CHANGE TO LOGIN\r\n            <Pressable onPress={changeButton} style={{ paddingTop: 15 }}>\r\n              <Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Already have an account? Sign in</Text>\r\n            </Pressable>\r\n            :\r\n            // CHANGE TO REGISTER\r\n            <Pressable onPress={changeButton} style={{ paddingTop: 15 }}>\r\n              <Text style={{\r\n                fontSize: 16,\r\n                fontWeight: 500,\r\n              }}>Don't have an account? Sign up</Text>\r\n            </Pressable>\r\n          }\r\n        </View>\r\n\r\n      </ScrollView>\r\n    )\r\n  }\r\n  // AFTER LOGIN\r\n  else {\r\n    return (\r\n      <ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n        <View>\r\n          <Text>Username:</Text>\r\n          <Text>{user.username}</Text>\r\n        </View>\r\n\r\n        <View>\r\n          <Text>Email:</Text>\r\n          <Text>{user.email}</Text>\r\n        </View>\r\n\r\n        <Pressable onPress={() => {\r\n          navigation.navigate('Cart')\r\n        }}>\r\n          <Text>Transaction History</Text>\r\n        </Pressable>\r\n        <Pressable onPress={logout}\r\n          style={{\r\n            width: '50%',\r\n            backgroundColor: 'chartreuse',\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase',\r\n            textAlign: 'center',\r\n            paddingBottom: 10,\r\n            paddingTop: 10,\r\n            borderRadius: 6,\r\n            marginTop: 5,\r\n          }}\r\n        >\r\n          <Text style={{\r\n            fontSize: 16,\r\n            fontWeight: 500,\r\n          }}>Logout</Text>\r\n        </Pressable>\r\n      </ScrollView>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default SettingsScreen\r\n\r\nconst windowWidth = Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n  },\r\n  modalView: {\r\n    // margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    // padding: '100%',\r\n    height: '100%',\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 20\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    width: '95%',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    borderBottomColor: 'gray',\r\n    borderBottomWidth: 1,\r\n    width: '100%',\r\n    paddingTop: 20,\r\n    paddingLeft: 7,\r\n    paddingRight: 7,\r\n  },\r\n  modalInnerText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n  },\r\n  modalChoosingText: {\r\n    color: 'green',\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\n","import { getFocusedRouteNameFromRoute } from '@react-navigation/native'\r\nimport React, {useContext, useEffect, useState} from 'react'\r\nimport { Text, View, Image, ScrollView, StyleSheet, Dimensions, Button, TextInput, Pressable } from 'react-native'\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst CartOrder = (props) => {\r\n  const {\r\n    order = {},\r\n    orders = [],\r\n    setOrders,\r\n  } = props\r\n\r\n  const navigation = useNavigation()\r\n  \r\n  // NUMBER OR DISHES\r\n  const [orderAmount, setOrderAmount] = useState(1)\r\n\r\n  const [price, setPrice] = useState(0)\r\n\r\n  useEffect(()=>{\r\n    setOrderAmount(order.amount)\r\n    setPrice(order.price)\r\n  }, [order])\r\n\r\n  useEffect(() => {\r\n    if (orderAmount != order.amount) {\r\n      order.amount = orderAmount\r\n      // order.price = orderAmount * order.price\r\n      let a = orders.find(element => element.id == order.id)\r\n      let index = orders.indexOf(a)\r\n      let ordersCopy = JSON.parse(JSON.stringify(orders))\r\n      try\r\n        {\r\n          ordersCopy.splice(index, 1, order)\r\n          console.log('order:', order)\r\n        }\r\n      finally {\r\n        setOrders(ordersCopy)\r\n      }\r\n    }\r\n\r\n  }, [orderAmount])\r\n\r\n  function editOrder() {\r\n    navigation.navigate('EditCart', {\r\n      order,\r\n    })\r\n  }\r\n\r\n  function delOrder() {\r\n\t\tlet newOrders = orders.filter(element => element.id != order.id)\r\n\t\tsetOrders(newOrders)\r\n\t}\r\n\r\n  if (Object.keys(order).length == 0) {\r\n    return (\r\n      <View>\r\n        <Text>There are nothing here</Text>\r\n      </View>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <View style={{\r\n        borderWidth: 1,\r\n        borderColor: 'red',\r\n      }}>\r\n        <View style={{\r\n          flexDirection:'row',\r\n        }}>\r\n          <Text style={{\r\n            flexGrow: 1,\r\n            // color: '#000',\r\n            fontWeight: 600,\r\n            fontFamily: 'National2Condensed',\r\n            textTransform: 'uppercase',\r\n            marginBottom: '1rem',\r\n            fontSize: 26,\r\n          }}>{order?.categoryDish?.name.toUpperCase()}</Text>\r\n          <View style={{\r\n            flexDirection: 'row',\r\n          }}>\r\n            {/* EDIT ORDER */}\r\n            <Pressable\r\n              onPress={editOrder}\r\n            >\r\n              <MaterialIcons name=\"edit\" size={24} color=\"black\" />\r\n            </Pressable>\r\n  \r\n            {/* DELETE ORDER */}\r\n            <Pressable\r\n              onPress={delOrder}\r\n            >\r\n              <MaterialIcons name=\"highlight-remove\" size={24} color=\"black\" />\r\n            </Pressable>\r\n\r\n          </View>\r\n        </View>\r\n  \r\n        <View>\r\n          {order.itemsChosen?.map((item, index) => {\r\n            return (\r\n              <Text key={index}>・{item.name}</Text>\t\r\n            )\r\n          })}\r\n        </View>\r\n  \r\n        <View style={{\r\n            flexDirection:'row',\r\n          }}>\r\n          <View style={{\r\n            flexDirection:'row',\r\n            flexGrow: 1,\r\n          }}>\r\n            <Pressable \r\n              onPress={()=>{\r\n                if (orderAmount > 1) {\r\n                setOrderAmount(orderAmount-1)\r\n              }}}\r\n            >\r\n              <Text style={{\r\n                transform: 'scale(1.5)',\r\n              }}>⊖</Text>\r\n            </Pressable>\r\n\r\n            <TextInput style={{\r\n                width:30,\r\n                fontSize: 18,\r\n                paddingLeft: 5,\r\n                paddingRight: 5,\r\n              }}\r\n              value={orderAmount} onChangeText={setOrderAmount} />\r\n\r\n            <Pressable onPress={()=>{\r\n              setOrderAmount(orderAmount + 1)\r\n            }}>\r\n              <Text style={{\r\n                transform: 'scale(1.5)',\r\n              }}>⊕</Text>\r\n            </Pressable>\r\n          </View>\r\n  \r\n          <Text style={{\r\n            fontSize: 18,\r\n            fontFamily: \"National2\",\r\n            lineHeight: 1.5,\r\n            fontWeight: 600,\r\n            alignSelf: 'center',\r\n          }}>{orderAmount * price}</Text>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CartOrder","import React, {useState, useEffect} from \"react\";\r\nimport { View, ScrollView, Dimensions, Text, StyleSheet, Pressable, Modal} from \"react-native\";\r\nimport { useAppContext } from \"../../../context/appContext\";\r\n\r\nconst OrderHistory = (props) => {\r\n  const {\r\n    showHistory,\r\n    setShowHistory,\r\n    // modalVisible,\r\n  } = props\r\n  \r\n  const { style, customAxios, token } = useAppContext()\r\n  \r\n  // const navigation = useNavigation()\r\n\r\n  // const [token, setToken, removeToken] = useCookies(['kfc'])\r\n\r\n  const [allOrders, setAllOrders] = useState([])\r\n  \r\n  function getOrderHistory() {\r\n    const uri = `order/`\r\n    customAxios(uri, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Token ${token}`\r\n\t\t\t}\r\n\t\t})\r\n    .then(response=>response.data)\r\n    .then((data)=>{\r\n      setAllOrders(data)\r\n      console.log(`allOrders:`, data)\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    // GET ORDER HISTORY\r\n\r\n    if (showHistory) {\r\n      getOrderHistory()\r\n    }\r\n  }, [showHistory])\r\n\r\n\r\n\r\n  \tfunction priceSum(orders) {\r\n      let priceSum = 0\r\n      try {\r\n        orders?.map(order => {\r\n          return priceSum += order.price * order.amount\r\n        }\r\n      )}\r\n      finally {\r\n        return priceSum\r\n      }\r\n    }\r\n  \r\n  if (allOrders.length == 0) {\r\n    return (\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={showHistory}\r\n        onRequestClose={() => {\r\n          setShowHistory(!showHistory)\r\n        }}\r\n      >\r\n        <View>\r\n          <ScrollView showsVerticalScrollIndicator={false}\r\n            style={style.homeContainer} \r\n          >\r\n            <Text>You have not ordered anything</Text>\r\n\r\n            <Pressable onPress={()=>{\r\n                setShowHistory(!showHistory)\r\n              }}\r\n              style={{\r\n                width: windowWidth/2,\r\n                backgroundColor: 'green',\r\n                color: 'rgb(232, 230, 227) !important',\r\n                fontWeight: 'bold',\r\n                textTransform:'uppercase',\r\n                textAlign:'center',\r\n                paddingBottom: 15,\r\n                paddingTop: 15,\r\n                borderRadius: 8,\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Text>\r\n                Close Modal\r\n              </Text>\r\n            </Pressable>\r\n\r\n          </ScrollView>\r\n        </View>\r\n      </Modal>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={showHistory}\r\n        onRequestClose={() => {\r\n          setShowHistory(!showHistory)\r\n        }}\r\n      >\r\n        <View style={styles.modalView}>\r\n\r\n          <ScrollView showsVerticalScrollIndicator={false}\r\n            style={[style.homeContainer, {flexGrow:1}]} \r\n          >\r\n            {allOrders?.map((element, index) => {\r\n              return (\r\n                <View key={index}\r\n                  style={{\r\n                    borderColor: 'red',\r\n                    borderBottomWidth: 1,\r\n                    marginBottom: 10,\r\n                    paddingBottom:20,\r\n                  }}\r\n                >\r\n                  <View>\r\n                    {element.orders.map(order => {\r\n                      return (\r\n                        <View key={order.id}\r\n                          style={{\r\n                            // borderColor: 'green',\r\n                            // borderWidth: 1,\r\n                            paddingBottom: 5,\r\n                          }}\r\n                        >\r\n                          <Text style={{\r\n                            flexGrow: 1,\r\n                            // color: '#000',\r\n                            fontWeight: 600,\r\n                            fontFamily: 'National2Condensed',\r\n                            textTransform: 'uppercase',\r\n                            fontSize: 26,\r\n                            marginBottom: 10,\r\n                          }}>\r\n                            {order?.categoryDish?.name.toUpperCase()}\r\n                          </Text>\r\n                    \r\n                          <View>\r\n                            {order.itemsChosen?.map((item, index) => {\r\n                              return (\r\n                                <Text key={index}>・{item.name}</Text>\t\r\n                              )\r\n                            })}\r\n                          </View>\r\n                    \r\n                          <View style={{flexDirection:'row'}}>\r\n                            <Text style={{flexGrow:1}}>{element.orders.length} Items</Text>\r\n                            <Text>{order.amount * order.price}</Text>\r\n                          </View>\r\n                        </View>\r\n                      )\r\n                    })}\r\n                  </View>\r\n            \r\n                  <View style={{flexDirection: 'row', paddingTop:20}}>\r\n                    <Text style={{\r\n                      flexGrow: 1,\r\n                      fontSize: 18,\r\n                      fontFamily: \"National2\",\r\n                      lineHeight: 1.5,\r\n                      fontWeight: 600,\r\n                    }}>\r\n                      SUBTOTAL\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                      fontSize: 18,\r\n                      fontFamily: \"National2\",\r\n                      lineHeight: 1.5,\r\n                      fontWeight: 600,\r\n                      color: 'red',\r\n                    }}>\r\n                      {priceSum(element.orders)}\r\n                    </Text>\r\n                  </View>\r\n          \r\n                </View>\r\n              )\r\n            })}\r\n          </ScrollView>\r\n        \r\n          <Pressable\r\n            onPress={() => {\r\n              setShowHistory(!showHistory)\r\n            }}\r\n            style={{\r\n              width: '100%',\r\n              backgroundColor: 'green',\r\n              paddingBottom: 15,\r\n              paddingTop: 15,\r\n              borderRadius: 8,\r\n              marginTop: 5,\r\n              textAlign:'center',\r\n              // position: 'fixed',\r\n              // bottom: 0,\r\n            }}\r\n          >\r\n            <Text style={{\r\n              // width: '100%',\r\n              color: 'rgb(232, 230, 227) !important',\r\n              fontWeight: 'bold',\r\n              textTransform:'uppercase',\r\n            }}>\r\n              GO BACK\r\n            </Text>\r\n          </Pressable>\r\n        </View>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nconst windowWidth = Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n  },\r\n  modalView: {\r\n    paddingLeft: windowWidth>1000?(windowWidth-1000)/2:5,\r\n    paddingRight: windowWidth>1000?(windowWidth-1000)/2:5,\r\n    height: windowHeight,\r\n    width: '100%',\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    flexDirection: 'column',\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 20\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    width: '95%',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    borderBottomColor: 'gray',\r\n    borderBottomWidth: 1,\r\n    width: '100%',\r\n    paddingTop: 20,\r\n    paddingLeft: 7,\r\n    paddingRight: 7,\r\n  },\r\n  modalInnerText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n    flexGrow: 1,\r\n    textAlign: 'left',\r\n  },\r\n  modalChoosingText: {\r\n    color: 'green',\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n  },  \r\n});\r\n\r\nexport default OrderHistory;","// import { getFocusedRouteNameFromRoute } from '@react-navigation/native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Text, View, ScrollView, StyleSheet, Dimensions, TextInput, Pressable, Modal } from 'react-native'\r\nimport CartOrder from '../stacks/components/CartOrder';\r\nimport { useCookies } from 'react-cookie';\r\nimport OrderHistory from '../stacks/components/OrderHistory';\r\nimport { useAppContext } from '../../context/appContext';\r\n\r\nconst CartScreen = (props) => {\r\n\tconst {\r\n\t\tmodalVisible,\r\n\t\t// setModalVisible,\r\n\t\tnavigation,\r\n\t\troute,\r\n\t\tshowHistory,\r\n\t\tsetShowHistory,\r\n\t} = props\r\n\t\r\n\t// DISH NEED INITIAL VALUE, DEFINED IN APP INITIALPARAMS\r\n\tconst {\r\n\t\tdish,\r\n\t} = route.params\r\n\r\n\tconst {\r\n\t\tstyle,\r\n\t\ttoken,\r\n\t\tcustomAxios,\r\n\t} = useAppContext()\t\r\n\r\n\t// const [token, setToken, removeToken] = useCookies(['kfc'])\r\n\r\n\t// const [username, setUsername] = useState(\"\")\r\n\t// const [password, setPassword] = useState(\"\")\r\n\r\n\t// Change button\r\n\t// const [showRegister, setShowRegister] = useState(false)\r\n\r\n\t// ALL ITEMS\r\n\tconst [orders, setOrders] = useState([])\r\n\r\n\t// NOTE FOR ORDER\r\n\tconst [note, setNote] = useState('')\r\n\r\n\t// PROMOTION\r\n\tconst [promotion, setPromotion] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('dish', dish)\r\n\t\tconsole.log('cookie:', token['kfc'])\r\n\t\t// getUser()\r\n\r\n\t}, [token, dish])\r\n\r\n\tconst sendOrder = async () => {\r\n\t\tlet body = orders?.map(order => {\r\n\t\t\treturn (\r\n\t\t\t\t{\r\n\t\t\t\t\t// orderId: order.id,\r\n\t\t\t\t\t// dish: order.categoryDish.id, \r\n\t\t\t\t\t// amount: order.amount,\r\n\t\t\t\t\torder: order,\r\n\t\t\t\t\t// price: order.price,\r\n\t\t\t\t\tpromotion: promotion,\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t})\r\n\t\tlet a = { orders: orders, orderDetails: body }\r\n\r\n\t\tconst url = `order/`\r\n\t\tconst { data } = await customAxios.post(url, { data: a }, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Token ${token}`\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetOrders([])\r\n\t}\r\n\r\n\tconst initializeOrder = () => {\r\n\t\tlet check = orders.find(e => e.id == dish.id)\r\n\t\tif (dish != undefined) {\r\n\t\t\tif (check === undefined) {\r\n\t\t\t\tsetOrders([...orders, dish])\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet index = orders.indexOf(check)\r\n\t\t\t\tlet copyArray = JSON.parse(JSON.stringify(orders))\r\n\t\t\t\ttry { copyArray.splice(index, 1, dish) }\r\n\t\t\t\tfinally { setOrders(copyArray) }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tinitializeOrder()\r\n\t}, [dish])\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(`orders:`, orders)\r\n\t}, [orders])\r\n\r\n\tfunction priceSum() {\r\n\t\tlet priceSum = 0\r\n\t\ttry {\r\n\t\t\torders?.map(order => {\r\n\t\t\t\treturn priceSum += order.price * order.amount\r\n\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\treturn priceSum\r\n\t\t}\r\n\t}\r\n\r\n\t// HAVE NOT LOGIN\r\n\tif (modalVisible) {\r\n\t\treturn (\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tnavigation.navigate('Settings')\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '50%',\r\n\t\t\t\t\t\tbackgroundColor: 'chartreuse',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tpaddingBottom: 10,\r\n\t\t\t\t\t\tpaddingTop: 10,\r\n\t\t\t\t\t\tborderRadius: 6,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\tfontSize: 16,\r\n\t\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\t}}>LOGIN FIRST</Text>\r\n\t\t\t\t</Pressable>\r\n\r\n\t\t\t</ScrollView>\r\n\t\t)\r\n\t}\r\n\t// HAVE NOT ORDER ANYTHING\r\n\telse if (orders.length == 0) {\r\n\t\treturn (\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\t\t\t\t<OrderHistory\r\n\t\t\t\t\tshowHistory={showHistory}\r\n\t\t\t\t\tsetShowHistory={setShowHistory}\r\n\t\t\t\t/>\r\n\t\t\t\t<Text style={{\r\n\t\t\t\t}}>\r\n\t\t\t\t\tYour Cart is empty?\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text>Making order to enjoy KFC special secret recipes</Text>\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '50%',\r\n\t\t\t\t\t\tbackgroundColor: 'green',\r\n\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tnavigation.navigate('Main')\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{ color: 'chartreuse' }}>ORDER NOW</Text>\r\n\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\tbackgroundColor: 'green',\r\n\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tsetShowHistory(true)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{ color: 'chartreuse' }}>ORDER HISTORY</Text>\r\n\t\t\t\t</Pressable>\r\n\t\t\t</ScrollView>\r\n\t\t)\r\n\t}\r\n\t// Ordered\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<ScrollView style={style.homeContainer} showsVerticalScrollIndicator={false}>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tanimationType=\"slide\"\r\n\t\t\t\t\ttransparent={true}\r\n\t\t\t\t\tvisible={showHistory}\r\n\t\t\t\t\tonRequestClose={() => {\r\n\t\t\t\t\t\tsetShowHistory(!showHistory)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<OrderHistory\r\n\t\t\t\t\t\tshowHistory={showHistory}\r\n\t\t\t\t\t\tsetShowHistory={setShowHistory}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t<Text style={{\r\n\t\t\t\t\tbackgroundColor: 'rgb(182, 0, 34)',\r\n\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t}}>PROCEED TO PAYMENT</Text>\r\n\r\n\t\t\t\t{orders?.map((order) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<CartOrder key={order.id}\r\n\t\t\t\t\t\t\torder={order}\r\n\t\t\t\t\t\t\torders={orders}\r\n\t\t\t\t\t\t\tsetOrders={setOrders}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t<TextInput style={{\r\n\t\t\t\t\twidth: windowWidth,\r\n\t\t\t\t\tminHeight: 50,\r\n\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\tbackgroundColor: '#d0d5db',\r\n\t\t\t\t}}\r\n\t\t\t\t\tplaceholder='Notes for your order' value={note} onChangeText={setNote}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<View style={{ width: '100%' }}>\r\n\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t}}>{orders.length} Items</Text>\r\n\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tfontSize: 20,\r\n\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t}}>{priceSum()}</Text>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\tpaddingBottom: 20,\r\n\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\tminHeight: 50,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<TextInput style={{\r\n\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\tminHeight: 50,\r\n\t\t\t\t\t\t\t\tbackgroundColor: '#d0d5db',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={promotion} onChangeText={setPromotion} placeholder='Enter promotion code' />\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<Pressable style={{\r\n\t\t\t\t\t\t\tborderWidth: 1,\r\n\t\t\t\t\t\t\tborderColor: 'gray',\r\n\t\t\t\t\t\t\theight: 50,\r\n\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\tpadding: 5,\r\n\t\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tAPPLY CODE\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\tpaddingBottom: 20,\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tSUBTOTAL\r\n\t\t\t\t\t\t</Text>\r\n\r\n\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\tfontSize: 18,\r\n\t\t\t\t\t\t\tfontFamily: \"National2\",\r\n\t\t\t\t\t\t\tlineHeight: 1.5,\r\n\t\t\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t}}>{priceSum()}</Text>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<View style={{\r\n\t\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Pressable\r\n\t\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\t\tnavigation.navigate('Main')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgb(182, 0, 34)',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\t}}>CONTINUE ORDERING</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t\t\t<Pressable onPress={sendOrder}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgb(182, 0, 34)',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\t}}>SEND ORDER</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<Pressable onPress={() => {\r\n\t\t\t\t\t\t\tsetShowHistory(true)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Text style={{\r\n\t\t\t\t\t\t\t\t// width: '100%',\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'green',\r\n\t\t\t\t\t\t\t\tcolor: 'rgb(232, 230, 227) !important',\r\n\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\tpaddingBottom: 15,\r\n\t\t\t\t\t\t\t\tpaddingTop: 15,\r\n\t\t\t\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\t\t\t\tmarginTop: 5,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tORDER HISTORY\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t</View>\r\n\r\n\r\n\r\n\t\t\t</ScrollView>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default CartScreen\r\n\r\nconst windowWidth = Dimensions.get('window').width\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nconst styles = StyleSheet.create({\r\n\tcenteredView: {\r\n\t},\r\n\tmodalView: {\r\n\t\t// margin: 20,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tborderRadius: 20,\r\n\t\t// padding: '100%',\r\n\t\theight: '100%',\r\n\t\talignItems: \"center\",\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 20\r\n\t\t},\r\n\t\tshadowOpacity: 0.25,\r\n\t\tshadowRadius: 4,\r\n\t\televation: 5\r\n\t},\r\n\tbutton: {\r\n\t\twidth: '95%',\r\n\t\tborderRadius: 5,\r\n\t\tpadding: 10,\r\n\t\televation: 2\r\n\t},\r\n\tbuttonOpen: {\r\n\t\tbackgroundColor: \"#F194FF\",\r\n\t},\r\n\tbuttonClose: {\r\n\t\tbackgroundColor: \"#2196F3\",\r\n\t},\r\n\ttextStyle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontWeight: \"bold\",\r\n\t\ttextAlign: \"center\"\r\n\t},\r\n\tmodalText: {\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t\tmarginBottom: 15,\r\n\t\tborderBottomColor: 'gray',\r\n\t\tborderBottomWidth: 1,\r\n\t\twidth: '100%',\r\n\t\tpaddingTop: 20,\r\n\t\tpaddingLeft: 7,\r\n\t\tpaddingRight: 7,\r\n\t},\r\n\tmodalInnerText: {\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 14,\r\n\t\tflexGrow: 1,\r\n\t\ttextAlign: 'left',\r\n\t},\r\n\tmodalChoosingText: {\r\n\t\tcolor: 'green',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 14,\r\n\t},\r\n});\r\n\r\n","import React, { useEffect, useState } from 'react'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons'\nimport MainContainer from './navigation/bottomTabs/MainContainer';\nimport SettingsScreen from './navigation/bottomTabs/SettingsScreen'\nimport CartScreen from './navigation/bottomTabs/CartScreen'\nimport { CookiesProvider} from 'react-cookie'\nimport { AppProvider, baseURL, token} from './context/appContext';\nimport axios from 'axios';\n\nconst homeName = 'Main'\nconst cartName = 'Cart'\nconst settingsName = 'Settings'\nconst Tab = createBottomTabNavigator()\n\nconst App = () => {\n  // SHOW LOGIN MODAL\n  const [modalVisible, setModalVisible] = useState(true)\n\n  // SHOW ORDER HISTOPRY\n  const [showHistory, setShowHistory] = useState(false)\n\n  const [user, setUser] = useState([])\n\n  const getUser = () => {\n    console.log(baseURL, token);\n\n    axios(`${baseURL}current_user/`, {headers:{Authorization:`Token ${token}`}})\n    .then(response=>response.data)\n    .then((data)=>{\n      setUser(data)\n      console.log('User:', data)\n      if (!Object.keys(data).includes('detail')) {\n        setModalVisible(false)\n        console.log('Already login')\n      }\n    })\n  }\n\n  useEffect(() => {\n    // CHECK CURRENT TOKEN\n    console.log('Check login');\n    getUser()\n  }, [token])\n\n\n  return (\n    <CookiesProvider>\n      <AppProvider>\n        <NavigationContainer>\n          <Tab.Navigator\n            initialRouteName={homeName}\n            screenOptions={({ route }) => ({\n              tabBarIcon: ({ focused, color, size }) => {\n                let iconName\n                let rn = route.name\n\n                if (rn === homeName) {\n                  iconName = focused ? 'home' : 'home-outline'\n                }\n                else if (rn === cartName) {\n                  iconName = focused ? 'cart' : 'cart-outline'\n                }\n                else if (rn === settingsName) {\n                  iconName = focused ? 'settings' : 'settings-outline'\n                }\n                return (\n                  <Ionicons name={iconName} size={size} color={color} />\n                )\n              },\n              // activeTinColor: 'tomato',\n              // inactiveTinColor: 'grey',\n              // title: 'Hello',\n              headerShown: false,\n              headerStyle: { backgroundColor: 'papayawhip' },\n              labelStyle: { paddingBottom: 10, fontSize: 10 },\n              style: { padding: 10, height: 70 },\n            })}\n          >\n\n            <Tab.Screen name={homeName} component={MainContainer} />\n\n            <Tab.Screen name={cartName}\n              // component={CartScreen}\n              children={props => (\n                <CartScreen {...props}\n                  modalVisible={modalVisible}\n                  setModalVisible={setModalVisible}\n                  showHistory={showHistory}\n                  setShowHistory={setShowHistory}\n                />\n              )}\n\n              initialParams={{\n                'dish': undefined,\n              }}\n            />\n            <Tab.Screen name={settingsName}\n              //  component={SettingsScreen} \n              children={props => (\n                <SettingsScreen {...props}\n                  modalVisible={modalVisible}\n                  setModalVisible={setModalVisible}\n                  user={user}\n                  setUser={setUser}\n                  showHistory={showHistory}\n                  setShowHistory={setShowHistory}\n                />\n              )}\n            />\n\n          </Tab.Navigator>\n        </NavigationContainer>\n      </AppProvider>\n    </CookiesProvider>\n\n  )\n}\n\nexport default App"],"sourceRoot":""}